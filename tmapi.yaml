openapi: 3.0.0
info:
  title: Описание API
  version: '2.0'
  description: |

    # Обзор
    Данный документ поможет Вам работать с API для текстового анализа от Megaputer Intelligence.

    Каждый алгоритм описан в отдельном разделе в этой документации. Ниже представлен список доступных операций:

    - Определение языка
    - Токенизация
    - Лемматизация
    - Морфологический анализ
    - Генерация словоформ
    - Разделение текста на предложения
    - Анализ грамматики зависимостей
    - Анализ грамматики составляющих
    - Извлечение ключевых слов
    - Извлечение сущностей
    - Анализ тональности
    - Извлечение фактов
    - Анонимизация сущностей
    - Кластеризация
    - Классификация
    - Анализ фрагментов
    - Саммаризация (Резюме)
    - Проверка орфографии
    - Проверка грамматики
    - Определение тематики
    - Определение доменов
    - Расшифровка аббревиатур
    - Поверхностно-синтаксический анализ текста

    # Как делать запросы?
    Все запросы TM API версии 2.0 выполняются по одному из следующих адресов: <br>

    `http://hostname:port/tmapi/v2` + request endpoint <br>

    `https://hostname:port/tmapi/v2` + request endpoint

    # Аутентификация
    Аутентификация производится с каждым API-запросом отправкой заголовка с Вашим именем пользователя и паролем.

    *ПРИМЕЧАНИЕ: аутентификация может быть отключена в настройках сервера.*
    <!-- ReDoc-Inject: <security-definitions> -->

servers:
  - url: https://localhost:7008/tmapi/v2

security:
  - BasicAuth: []

tags:
  - name: 'Сервер'
    description: |
      Прежде чем делать запросы рекомендуется проверить версию сервера, поддерживаемые языки и операции. Список поддерживаемых языков и операций зависит от Вашей лицензии.

      Если по переданным в запросе документам не удалось определить язык или пользователь указал в запросе неподдерживаемый или несуществующий язык (например, "documentsLanguage": "qwe"), то языком переданных данных считается английский.

  - name: 'Ограничения'
    description: |
      Операции имеют ограничения на объем обрабатываемых данных.
      Ограничения зависят от типа приобретенной лицензии.
      Если установленные ограничения Вам не подходят, Вы можете связаться [со службой поддержки компании Мегапьютер](https://www.megaputer.com/ru/services/support/).

      Все ограничения базируются на понятии **NTU** (number of text units - количество текстовых единиц).
      Размер одной текстовой единицы (TU - text unit) определяется лицензией по умолчанию и равен 1000 знаков (включая пробелы и другие специальные символы, такие как HTML- и XML-теги).

      Документы, которые длиннее 1000 знаков, считаются за несколько текстовых единиц.
      Например, если два документа содержат 600 и 1200 знаков, то общее количество текстовых единиц будет три:
      одна для первого текста (600 знаков) и две для второго текста (1000 знаков и 200 знаков).

      Каждая операция потребляет текстовые единицы отдельно.
      Если текст из 600 символов анализировать запросом "researches" с тремя операциями (entities, sentiments, facts), то такой запрос потребует 3 текстовые единицы по одной на каждую операцию.

      Если операция уже обработала максимально разрешенное количество текстовых единиц, то сервер вернет ответ со статусом '200' и сообщением:
      ```
      {
        "error": "Not enough NTU to complete operation"
      }
      ```

      Существует три режима ограничений, которые указываются в параметре _Mode_ в теле ответа. Параметр _Mode_ показывает, к каким счётчикам применяется ограничение. Существуют 3 возможных значения данного параметра:

      - *_Total_* показывает, что ограничения, возвращаемые в теле ответа, относятся к общему количеству обработанных текстовых единиц;
      - *_PerOperation_* показывает, что ограничения, возвращаемые в теле ответа, применяются к каждой операции отдельно;
      - *_Unlimited_* означает, что на количество текстовых единиц нет ограничений.

      В режиме _Total_ все операции перестанут работать одновременно, если общее количество обработанных текстовых единиц достигнет максимального значения, т.е. когда значение параметра NTU станет равным NTULimit независимо от значений NTU для каждой операции. В режиме _PerOperation_ операция перестанет работать, если её NTU достигнет максимального количества текстовых единиц. Другие операции будут продолжать работать до тех пор, пока они не обработают максимальное количество текстовых единиц.

      NTU-счётчик будет отображаться независимо от того, какой из первых двух режимов ограничения выбран. То же самое можно сказать и про счётчики по каждой операции. Счетчик NTU ни на что не влияет и может быть больше чем NTULimit.

  - name: 'Операции'
    description: |
      Текущая версия TM API Server содержит несколько алгоритмов текстового анализа, которые выполняются следующими операциями:
      - **languages** - определение языка
      - **tokens** - токенизация
      - **lemmas** - лемматизация
      - **parts-of-speech** - морфологический анализ
      - **wordforms** - генерация словоформ
      - **sentences** - разделение текста на предложения
      - **dependency-trees** - анализ грамматики зависимостей
      - **constituency-trees** - анализ грамматики составляющих
      - **keywords** - извлечение ключевых слов
      - **entities** - извлечение сущностей
      - **sentiments** - анализ тональности
      - **facts** - извлечение фактов
      - **anonymized-documents** - анонимизация сущностей
      - **clusters** - кластеризация
      - **categories** - классификация
      - **fragments** - анализ фрагментов
      - **summaries** - саммаризация (резюме)
      - **misspellings** - проверка орфографии
      - **grammar-mistakes** - проверка грамматики
      - **topics** - определение тематики
      - **domains** - определение доменов
      - **abbreviations** - расшифровка аббревиатур
      - **chunks** - поверхностно-синтаксический анализ

      Будущие версии TM API будут содержать больше алгоритмов, которые дополнят данный список.

      Операции принимают список документов для обработки в теле POST-запроса.

  - name: 'Исследования'
    description: |
      Пользователи TM API Server могут выполнять несколько операций на одном и том же наборе документов одним запросом.
      При выполнении запроса "research", пользователи должны указать документы и список операций, которые нужно выполнить на этих документах.

      Запросы типа /researches позволяют работать непосредственно с исследованиями. При асинхронном выполнении исследования необходимо проверять статус выполнения через запросы типа /queue. Например, если при создании асинхронного исследования вернулся идентификатор вида "xxxx-xxxx", то для проверки состояния задачи нужно выполнить запрос `GET /queue/xxxx-xxxx`. В ответе со статусом '200' вернется JSON-объект с полями 'status' и 'progress', по которым можно понять, в какой стадии находится выполнение исследования. Когда процесс исследования закончится, вместо JSON-объекта запрос вернет статус '303' (с пустым телом) и укажет путь к завершенному исследованию в заголовке 'Location', а именно `/researches/xxxx-xxxx`. По данному запросу сервер вернет параметры исследования, которые были переданы пользователем. Чтобы получить результат данного исследования нужно выполнить запрос GET `/researches/xxxx-xxxx/result`.

  - name: 'Ресурсы'
    description: |
      TM API Server позволяет создавать различные пользовательские ресурсы, на которые впоследствии можно ссылаться в запросах при выполнении операций текстового анализа. Поддерживаются следующие типы ресурсов:
      - Сущности
      - Сентименты
      - Факты
      - Модели классификатора
      - Модели расшифровки аббревиатур

      Например, пользователь может создать ресурс "Сущность" и ссылаться на него в параметре `entitiesOptions.customEntities` в операции `entities`. В дальнейшем все изменения в данном ресурсе будут отражаться во всех запросах, которые на него ссылаются.

      Каждый ресурс имеет свой идентификатор, имя и язык, для которого он написан. Если ресурс может быть применен для всех языков, то вместо языка можно указать специальное значение "Common".

      Ссылаться на ресурсы из настроек операций необходимо по их именам. При выполнении операции будет выполняться поиск ресурса по его имени и языку переданных документов. Если для данного языка отсутствует ресурс с заданным именем, то сервер попытается найти его с языком "Common".

  - name: 'Преднастройки'
    description: |
      Некоторые операции позволяют настроить конфигурирацию параметров их выполнения. Для этого в запросе передается объект с настройками операции. Данные настройки можно сохранять на сервере и ссылаться на них при выполнении операций. Сохраненные на сервере настройки называются преднастройками.

      Например, пользователь может создать преднастройки для операции `entities` и ссылаться на них в параметре `entitiesOptionsPreset`. В дальнейшем все изменения в данных преднастройках будут отражаться во всех запросах, которые на них ссылаются.

      Преднастройки имеют свои идентификаторы, имя и язык, для которого они написаны. Если преднастройки могут быть применены для всех языков, то вместо языка можно указать специальное значение "Common".

      Ссылаться на преднастройки нужно по их именам. При выполнении операции будет производиться поиск преднастроек по их именам и языку переданных документов. Если для выбранного языка отсутствуют преднастройки с заданными именами, то сервер попытается найти данные преднастройки с языком "Common".

      При создании преднастроек наименование языка в теле запроса **является регистрозависимым**.

      Если вместе с указанием преднастроек также указать параметры операции, то указанные настройки заменят соответствующие параметры в преднастройках.


paths:

  #==============================
  # server
  #------------------------------

  /server:
    get:
      tags:
        - Сервер
      summary: Информация о сервере
      operationId: GetServerInfo
      responses:
        '200':
          $ref: '#/components/responses/ServerInfo'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: curl -G "http://localhost:7007/tmapi/v2/server"

  #==============================
  # limits
  #------------------------------

  /limits:
    get:
      description: |
        Чтобы проверить текущие ограничения, отправьте соответствующий запрос. Ответы могут отличаться в зависимости от типа Вашей лицензии:
        - **Ограничение на весь срок действия лицензии.**
        Если количество обработанных текстовых единиц достигло данного ограничения, то для разблокировки операций требуется обновить лицензию.

        - **Месячное ограничение.**
        Если количество обработанных текстовых единиц достигло данного ограничения, тогда операции блокируются до следующего месяца. День наступления месяца указан в лицензии. Если день наступления месяца установлен 5, тогда месячные счетчики сбрасываются 5-го числа каждого месяца.

        - **Дневное ограничение.**
        Если количество обработанных текстовых единиц достигло данного ограничения, тогда операции блокируются до следующего дня. Время наступления дня указано в лицензии. Если время наступления дня установлено в 11 утра, тогда дневные счетчики сбрасываются каждый день в 11 утра.
      tags:
        - Ограничения
      summary: Информация о лимитах
      operationId: GetLimits
      responses:
        '200':
          $ref: '#/components/responses/Limits'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -G "http://localhost:7007/tmapi/v2/limits" ^
            -H "Authorization: Basic dXNlcjo="

  #==============================
  # operations
  #------------------------------

  /operations/languages:
    post:
      tags:
        - Операции
      summary: Определение языка
      description: |
        Данная операция возвращает язык каждого из переданных документов. Список поддерживаемых операцией `languages` языков не зависит от списка языков, поддерживаемых сервером.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
        - Чешский
        - Финский
        - Норвежский
        - Румынский
        - Словацкий
        - Словенский
        - Шведский
        - Тагальский

      operationId: GetLanguages
      requestBody:
        $ref: '#/components/requestBodies/LanguagesParams'
      responses:
        '200':
          $ref: '#/components/responses/LanguagesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/languages" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"TRIGO Group, the international provider of operational quality management solutions for manufacturers, has signed an agreement with Franz Böllinger, Founder and Chairman of the BÖLLINGER GROUP, to acquire Böllinger, the Group's automotive quality assurance services subsidiary.\" } ] }"

  /operations/tokens:
    post:
      tags:
        - Операции
      summary: Токенизация
      description: |
        Данная операция разбивает документы на токены.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetTokens
      requestBody:
        $ref: '#/components/requestBodies/ParseParams'
      responses:
        '200':
          $ref: '#/components/responses/TokensResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/tokens" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"U.S. President Donald Trump has seven residences.\" } ] }"

  /operations/lemmas:
    post:
      tags:
        - Операции
      summary: Лемматизация
      description: |
        Данная операция возвращает леммы токенов. Результат также содержит список самих токенов.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetLemmas
      requestBody:
        $ref: '#/components/requestBodies/ParseParams'
      responses:
        '200':
          $ref: '#/components/responses/LemmasResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/lemmas" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"U.S. President Donald Trump has seven residences.\" } ] }"

  /operations/parts-of-speech:
    post:
      tags:
        - Операции
      summary: Морфологический анализ
      description: |
        Данная операция определяет части речи и другие морфологические признаки токенов. Результат также содержит список самих токенов.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetPartsOfSpeech
      requestBody:
        $ref: '#/components/requestBodies/ParseParams'
      responses:
        '200':
          $ref: '#/components/responses/PartsOfSpeechResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/parts-of-speech" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"U.S. President Donald Trump has seven residences.\" } ] }"

  /operations/wordforms:
    post:
      tags:
        - Операции
      summary: Генерация словоформ
      description: |
        Данная операция вовращает для каждого токена его возможные словоформы с указанием морфологических признаков. Результат также содержит список самих токенов.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetWordforms
      requestBody:
        $ref: '#/components/requestBodies/WordformsParams'
      responses:
        '200':
          $ref: '#/components/responses/WordformsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/wordforms" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"U.S. President Donald Trump has seven residences.\" } ] }"

  /operations/sentences:
    post:
      tags:
        - Операции
      summary: Разделение текста на предложения
      description: |
        Данная операция определяет границы предложения.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetSentences
      requestBody:
        $ref: '#/components/requestBodies/OperationParams'
      responses:
        '200':
          $ref: '#/components/responses/SentencesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/sentences" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"U.S. President Donald Trump has seven residences.\" } ] }"

  /operations/chunks:
    post:
      tags:
        - Операции
      summary: Поверхностно-синтаксический анализ текста
      description: |
        Данная операция делит предложение на составные части (чанки), а затем связывает их вместе в более высокие единицы с дискретными грамматическими значениями (именная группа, глагольная группа и т.д.).

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий

      operationId: GetChunks
      requestBody:
        $ref: '#/components/requestBodies/ChunksParams'
      responses:
        '200':
          $ref: '#/components/responses/ChunksResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/chunks" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley starred in 31 feature films.\" } ] }"

  /operations/dependency-trees:
    post:
      tags:
        - Операции
      summary: Анализ грамматики зависимостей
      description: |
        Данная операция возвращает дерево зависимостей.

        Поддерживаемые языки:
        - Английский
        - Русский
      operationId: GetDependencyTrees
      requestBody:
        $ref: '#/components/requestBodies/ParseParams'
      responses:
        '200':
          $ref: '#/components/responses/DependencyTreesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/dependency-trees" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/constituency-trees:
    post:
      tags:
        - Операции
      summary: Анализ грамматики составляющих
      description: |
        Данная операция возвращает дерево составляющих.

        Поддерживаемые языки:
        - Английский
      operationId: GetConstituencyTrees
      requestBody:
        $ref: '#/components/requestBodies/ParseParams'
      responses:
        '200':
          $ref: '#/components/responses/ConstituencyTreesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/constituency-trees" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/keywords:
    post:
      tags:
        - Операции
      summary: Извлечение ключевых слов
      description: |
        Данная операция извлекает часто используемые термины в документе.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetKeywords
      requestBody:
        $ref: '#/components/requestBodies/KeywordsParams'
      responses:
        '200':
          $ref: '#/components/responses/KeywordsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/keywords" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\" The Senate Agriculture Committee was expected to consider proposals that would limit adjustments in county loan rate differentials which trigger larger corn and wheat acreage reduction requirements.\" } ] }"

  /operations/entities:
    post:
      tags:
        - Операции
      summary: Извлечение сущностей
      description: |
        Данная операция извлекает сущности из документа. Сервер предлагает наборы стандартных сущностей. Пользователь может написать свои правила на языке XPDL для поиска сущностей, не входящих в список стандартных сущностей.

        Сервер предлагает два набора стандартных сущностей: "General" и "Medicine". Набор "Medicine" содержит сущности с медицинским уклоном. Для выбора нужного набора используется параметр `entitiesOptions.entitiesSet`. По умолчанию используется набор "General".

        Так как пользователь может сам писать правила для поиска сущностей, то операция поддерживает все языки, однако, наборы стандартных сущностей доступны только для определенных языков.

        Поддерживаемые языки для набора сущностей "General":
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)

        Поддерживаемые языки для набора сущностей "Medicine":
        - Английский
      operationId: GetEntities
      requestBody:
        $ref: '#/components/requestBodies/EntitiesParams'
      responses:
        '200':
          $ref: '#/components/responses/EntitiesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/entities" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"U.S. President Donald Trump has seven residences.\" } ] }"

  /operations/sentiments:
    post:
      tags:
        - Операции
      summary: Анализ тональности
      description: |
        Данная операция извлекает мнения и эмоции по отношению к чему-нибудь или кому-нибудь. Пользователь может написать свои правила на языке XPDL для поиска сентиментов.

        Так как пользователь может сам писать правила для поиска сентиментов, то операция поддерживает все языки, однако, стандартные сентименты доступны только для определенных языков.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Испанский
        - Итальянский
        - Португальский
        - Тайский
        - Китайский
        - Китайский (традиционный)
      operationId: GetSentiments
      requestBody:
        $ref: '#/components/requestBodies/SentimentsParams'
      responses:
        '200':
          $ref: '#/components/responses/SentimentsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/sentiments" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"The burger was great, but the waiter was very rude.\" } ] }"

  /operations/facts:
    post:
      tags:
        - Операции
      summary: Извлечение фактов
      description: |
        Данная операция извлекает факты из документа. Пользователь может написать свои правила на языке XPDL для поиска фактов.

        Так как пользователь может сам писать правила для поиска фактов, то операция поддерживает все языки, однако, стандартные факты доступны только для определенных языков.

        Поддерживаемые языки:
        - Английский
        - Русский
      operationId: GetFacts
      requestBody:
        $ref: '#/components/requestBodies/FactsParams'
      responses:
        '200':
          $ref: '#/components/responses/FactsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/facts" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/anonymized-documents:
    post:
      tags:
        - Операции
      summary: Анонимизация сущностей
      description: |
        Данная операция анонимизирует сущности, найденные операцией `entities`.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetAnonymizedDocuments
      requestBody:
        $ref: '#/components/requestBodies/AnonymizedDocumentsParams'
      responses:
        '200':
          $ref: '#/components/responses/AnonymizedDocumentsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/anonymized-documents" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/clusters:
    post:
      tags:
        - Операции
      summary: Кластеризация
      description: |
        Данная операция разбивает документы на кластеры.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetClusters
      requestBody:
        $ref: '#/components/requestBodies/ClustersParams'
      responses:
        '200':
          $ref: '#/components/responses/ClustersResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/clusters" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" },{ \"content\":\"U.S. President Donald Trump has seven residences.\" },{ \"content\":\"TRIGO Group, the international provider of operational quality management solutions for manufacturers, has signed an agreement with Franz Böllinger, Founder and Chairman of the BÖLLINGER GROUP, to acquire Böllinger, the Group's automotive quality assurance services subsidiary.\" },{ \"content\":\"The Senate Agriculture Committee was expected to consider proposals that would limit adjustments in county loan rate differentials which trigger larger corn and wheat acreage reduction requirements.\" } ] }"

  /operations/categories:
    post:
      tags:
        - Операции
      summary: Классификация
      description: |
        Данная операция устанавливает каждому документу определённые категории (согласно заданной модели).

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetCategories
      requestBody:
        $ref: '#/components/requestBodies/CategoriesParams'
      responses:
        '200':
          $ref: '#/components/responses/CategoriesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/categories" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"categoriesOptions\":{\"model\":\"Model name\"},\"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/fragments:
    post:
      tags:
        - Операции
      summary: Анализ фрагментов
      description: |
        Данная операция находит повторяющиеся фрагменты в документах.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetFragments
      requestBody:
        $ref: '#/components/requestBodies/FragmentsParams'
      responses:
        '200':
          $ref: '#/components/responses/FragmentsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/fragments" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/summaries:
    post:
      tags:
        - Операции
      summary: Саммаризация (Резюме)
      description: |
        Данная операция возвращает сокращенную версию документов.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetSummaries
      requestBody:
        $ref: '#/components/requestBodies/SummariesParams'
      responses:
        '200':
          $ref: '#/components/responses/SummariesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/summaries" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/misspellings:
    post:
      tags:
        - Операции
      summary: Проверка орфографии
      description: |
        Данная операция находит орфографические ошибки в документах.

        Поддерживаемые языки:
        - Английский
        - Русский
        - Французский
        - Немецкий
        - Испанский
        - Итальянский
        - Португальский
        - Арабский
        - Тайский
        - Японский
        - Китайский
        - Китайский (традиционный)
        - Корейский
        - Голландский
        - Греческий
        - Польский
        - Турецкий
      operationId: GetMisspellings
      requestBody:
        $ref: '#/components/requestBodies/MisspellingsParams'
      responses:
        '200':
          $ref: '#/components/responses/MisspellingsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/misspellings" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/grammar-mistakes:
    post:
      tags:
        - Операции
      summary: Проверка грамматики
      description: |
        Данная операция находит грамматические ошибки в документах.

        Поддерживаемые языки:
        - Английский
        - Русский
      operationId: GetGrammarMistakes
      requestBody:
        $ref: '#/components/requestBodies/GrammarMistakesParams'
      responses:
        '200':
          $ref: '#/components/responses/GrammarMistakesResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/grammar-mistakes" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/topics:
    post:
      tags:
        - Операции
      summary: Определение тематики
      description: |
        Данная операция возвращает тематику каждого документа.

        Поддерживаемые языки:
        - Английский
        - Русский
      operationId: GetTopics
      requestBody:
        $ref: '#/components/requestBodies/TopicsParams'
      responses:
        '200':
          $ref: '#/components/responses/TopicsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/topics" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  /operations/domains:
    post:
      tags:
        - Операции
      summary: Определение доменов
      description: |
        Данная операция возвращает домен каждого документа.

        Поддерживаемые языки:
        - Английский
        - Русский
      operationId: GetDomains
      requestBody:
        $ref: '#/components/requestBodies/DomainsParams'
      responses:
        '200':
          $ref: '#/components/responses/DomainsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/domains" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"documents\":[ { \"content\":\"The burger was great, but the waiter was very rude.\" } ] }"

  /operations/abbreviations:
    post:
      tags:
        - Операции
      summary: Расшифровка аббревиатур
      description: |
        Данная операция расшифровывает аббревиатуры.

        Поддерживаемые языки:
        - Английский
      operationId: GetAbbreviations
      requestBody:
        $ref: '#/components/requestBodies/AbbreviationsParams'
      responses:
        '200':
          $ref: '#/components/responses/AbbreviationsResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl "http://localhost:7007/tmapi/v2/operations/abbreviations" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{ \"abbreviationsOptions\":{\"model\":\"Model name\"},\"documents\":[ { \"content\":\"Elvis Presley was an American singer\" } ] }"

  #==============================
  # researches
  #------------------------------

  /researches:
    post:
      tags:
        - Исследования
      summary: Создание исследования
      description: |
        Чтобы создать исследование для выполнения нескольких операций над документами укажите нужные операции в атрибуте "operations" в теле запроса. Список доступных операций можно получить через запрос `GET /server`.

        Если выбран асинхронный режим выполнения исследования, то сервер немедленно вернет идентификатор задачи по выполнению исследования. С помощью данного идентификатора можно следить за прогрессом выполнения исследования, получить результаты исследования и удалить исследование с сервера. При этом нужно иметь в виду, что исследования пользователей удаляются автоматически после указанного в Административном клиенте таймаута или при отключении сервера. Созданные таким образом исследования доступны только тому пользователю, который их создал. **Пользователи не видят исследования других пользователей**.

        Если выбран синхронный режим выполнения исследования, то сервер будет держать соединение до завершения выполнения исследования и по завершении запишет в ответе результаты выполненного исследования. При синхронном выполнении исследование удаляется с сервера сразу после ответа пользователю.

      operationId: CreateResearch
      requestBody:
        $ref: '#/components/requestBodies/ResearchesParams'
      responses:
        '200':
          $ref: '#/components/responses/ResearchesResult'
        '202':
          $ref: '#/components/responses/ResearchesCreateResult'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/NotEnoughResourcesError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/researches" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"async\":false, \"operations\":[\"keywords\",\"entities\"], \"documents\":[{\"content\":\"The Senate Agriculture Committee was expected to consider proposals that would limit adjustments in county loan rate differentials which trigger larger corn and wheat acreage reduction requirements.\"}]}"
    get:
      tags:
        - Исследования
      summary: Получение исследований
      description: Данная операция возвращает параметры имеющихся на сервере исследований.
      operationId: GetResearches
      parameters:
        - $ref: '#/components/parameters/idFilter'
      responses:
        '200':
          $ref: '#/components/responses/ResearchesResources'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/researches" ^
            -H "Authorization: Basic dXNlcjo="
    delete:
      tags:
        - Исследования
      summary: Удаление исследований
      description: Данная операция удаляет имеющиеся на сервере исследования.
      operationId: DeleteResearches
      parameters:
        - $ref: '#/components/parameters/idFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/researches?id=DDBCEF0D-956E-449C-B5FF-8AD39B5049C1" ^
            -H "Authorization: Basic dXNlcjo="
  /researches/{id}:
    parameters:
      - $ref: '#/components/parameters/researchId'
    get:
      tags:
        - Исследования
      summary: Получение исследования
      description: Данная операция возвращает параметры исследования по идентификатору.
      operationId: GetResearch
      responses:
        '200':
          $ref: '#/components/responses/ResearchesResource'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/researches/DDBCEF0D-956E-449C-B5FF-8AD39B5049C1" ^
            -H "Authorization: Basic dXNlcjo="
    delete:
      tags:
        - Исследования
      summary: Удаление исследования
      description: Данная операция удаляет имеющееся на сервере исследование по идентификатору.
      operationId: DeleteResearch
      responses:
        '204':
          description: Успех
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/researches/DDBCEF0D-956E-449C-B5FF-8AD39B5049C1" ^
            -H "Authorization: Basic dXNlcjo="
  /researches/{id}/result:
    parameters:
      - $ref: '#/components/parameters/researchId'
    get:
      tags:
        - Исследования
      summary: Получение результата исследования
      description: Данная операция возвращает результат исследования по идентификатору.
      operationId: GetResearchResult
      responses:
        '200':
          $ref: '#/components/responses/ResearchesResult'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/researches/DDBCEF0D-956E-449C-B5FF-8AD39B5049C1" ^
            -H "Authorization: Basic dXNlcjo="

  #==============================
  # queue (tasks)
  #------------------------------

  /queue:
    get:
      tags:
        - Исследования
      summary: Получение списка задач
      description: |
        Данная операция возвращает список задач. Если для выполнения запрошенной операции требуется другая операция, данная другая операция не отображается.
      operationId: GetTasks
      parameters:
        - $ref: '#/components/parameters/idFilter'
      responses:
        '200':
          $ref: '#/components/responses/TasksResponse'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/queue" ^
            -H "Authorization: Basic dXNlcjo="
  /queue/{id}:
    parameters:
      - $ref: '#/components/parameters/idTask'
    get:
      tags:
        - Исследования
      summary: Получение задачи
      description: |
        Данная операция возвращает параметры задачи в теле ответа. Если задача завершена, то сервер возвращает статус '303' с пустым телом и ссылкой на созданный ресурс в заголовке "Location".
      operationId: GetTask
      responses:
        '200':
          $ref: '#/components/responses/TaskResponse'
        '303':
          description: Задача завершена. В заголовке "Location" возвращается путь к созданному ресурсу.
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/queue/DDBCEF0D-956E-449C-B5FF-8AD39B5049C1" ^
            -H "Authorization: Basic dXNlcjo="

  #==============================
  # resources
  #------------------------------

  /resources/entities:
    post:
      tags:
        - Ресурсы
      summary: Создание сущности
      description: Данная операция позволяет создавать пользовательские сущности. На созданную сущность можно сослаться в настройке `entitiesOptions.customEntities` в операции `entities`.
      operationId: CreateEntitiesResource
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourceCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/EntitiesResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/resources/entities" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Ресурсы
      summary: Получение сущностей
      description: Данная операция возвращает все сущности или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: GetEntitiesResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/EntitiesResources'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/entities" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление сущностей
      description: Данная операция позволяет обновить созданные сущности. Для каждой сущности, которую нужно обновить, следует указать ее идентификатор и новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поле `language` нельзя обновлять.
      operationId: UpdateEntitiesResources
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourcesUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/entities" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Resource\",\"rule\": [\"rule: Nouns {\",\"    query: {lemma(noun)}:noun\",\"    result: Match = $noun\",\"}\"]}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление сущностей
      description: Данная операция удаляет все сущности или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: DeleteEntitiesResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/entities" ^
            -H "Authorization: Basic dXNlcjo="
  /resources/entities/{id}:
    parameters:
      - $ref: '#/components/parameters/resourceId'
    get:
      tags:
        - Ресурсы
      summary: Получение сущности
      description: Данная операция позволяет получить сущность по её идентификатору.
      operationId: GetEntitiesResource
      responses:
        '200':
          $ref: '#/components/responses/EntitiesResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/entities/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление сущности
      description: Данная операция позволяет обновить созданную сущность по её идентификатору. Следует указать новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поля `id` и `language` нельзя обновлять.
      operationId: UpdateEntitiesResource
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourceUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/entities/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"name\": \"My Resource\",\"rule\": [\"rule: Nouns {\",\"    query: {lemma(noun)}:noun\",\"    result: Match = $noun\",\"}\"]}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление сущности
      description: Данная операция удаляет сущность с заданным идентификатором.
      operationId: DeleteEntitiesResource
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/entities/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /resources/sentiments:
    post:
      tags:
        - Ресурсы
      summary: Создание сентимента
      description: Данная операция позволяет создавать сентименты. На созданный сентимент можно сослаться в настройке `sentimentsOptions.customSentiments` в операции `sentiments`.
      operationId: CreateSentimentsResource
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourceCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/EntitiesResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/resources/sentiments" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Ресурсы
      summary: Получение сентиментов
      description: Данная операция возвращает все сентименты или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: GetSentimentsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/EntitiesResources'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/sentiments" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление сентиментов
      description: Данная операция позволяет обновлять сентименты. Для каждого сентимента, который нужно обновить, следует указать его идентификатор и новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поле `language` нельзя обновлять.
      operationId: UpdateSentimentsResources
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourcesUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/sentiments" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Resource\",\"rule\": [\"rule: Nouns {\",\"    query: {lemma(noun)}:noun\",\"    result: Match = $noun\",\"}\"]}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление сентиментов
      description: Данная операция удаляет все сентименты или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: DeleteSentimentsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/sentiments" ^
            -H "Authorization: Basic dXNlcjo="
  /resources/sentiments/{id}:
    parameters:
        - $ref: '#/components/parameters/resourceId'
    get:
      tags:
        - Ресурсы
      summary: Получение сентимента
      description: Данная операция позволяет получить сентимент по его идентификатору.
      operationId: GetSentimentResource
      responses:
        '200':
          $ref: '#/components/responses/EntitiesResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/sentiments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление сентимента
      description: Данная операция позволяет обновить сентимент по идентификатору. Следует указать новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поля `id` и `language` нельзя обновлять.
      operationId: UpdateSentimentsResource
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourceUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/sentiments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"name\": \"My Resource\",\"rule\": [\"rule: Nouns {\",\"    query: {lemma(noun)}:noun\",\"    result: Match = $noun\",\"}\"]}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление сентиментов
      description: Данная операция удаляет сентимент с заданным идентификатором.
      operationId: DeleteSentimentsResource
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/sentiments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /resources/facts:
    post:
      tags:
        - Ресурсы
      summary: Создание факта
      description: Данная операция создает пользовательский факт. На созданный факт можно сослаться в настройке `factsOptions.customFacts` в операции `facts`.
      operationId: CreateFactsResource
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourceCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/EntitiesResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/resources/facts" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Ресурсы
      summary: Получение фактов
      description: Данная операция возвращает все факты или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: GetFactsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/EntitiesResources'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/facts" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление фактов
      description: Данная операция позволяет обновить существующий факт. Для каждого факта, который нужно обновить, следует указать его идентификатор и новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поле `language` нельзя обновлять.
      operationId: UpdateFactsResources
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourcesUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/facts" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Resource\",\"rule\": [\"rule: Nouns {\",\"    query: {lemma(noun)}:noun\",\"    result: Match = $noun\",\"}\"]}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление фактов
      description: Данная операция удаляет все факты или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: DeleteFactsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/facts" ^
            -H "Authorization: Basic dXNlcjo="
  /resources/facts/{id}:
    parameters:
        - $ref: '#/components/parameters/resourceId'
    get:
      tags:
        - Ресурсы
      summary: Получение факта
      description: Данная операция позволяет получить факт по его идентификатору.
      operationId: GetFactResource
      responses:
        '200':
          $ref: '#/components/responses/EntitiesResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/facts/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление факта
      description: Данная операция позволяет обновить факт по его идентификатору. Следует указать новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поля `id` и `language` нельзя обновлять.
      operationId: UpdateFactsResource
      requestBody:
        $ref: '#/components/requestBodies/EntitiesResourceUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/facts/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"name\": \"My Resource\",\"rule\": [\"rule: Nouns {\",\"    query: {lemma(noun)}:noun\",\"    result: Match = $noun\",\"}\"]}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление факта
      description: Данная операция удаляет факт с заданным идентификатором.
      operationId: DeleteFactsResource
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/facts/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /resources/categorization-models:
    post:
      tags:
        - Ресурсы
      summary: Создание модели классификатора
      description: Данная операция позволяет создать модель классификатора. На созданную модель можно сослаться в настройке `categoriesOptions.model` в операции `categories`. Новую модель, если она не импортирована из уже существующей модели, необходимо обучить перед использованием. Для этого нужно запустить операцию `categories`, выбрать в настройках данную модель и включить режим обучения, т.е. установить параметр `categoriesOptions.training.enabled` в значение "true", а также установить другие параметры в объекте `categoriesOptions.training`, влияющие на обучение.
      operationId: CreateCategorizationModelsResource
      requestBody:
        $ref: '#/components/requestBodies/CategorizationModelsResourceCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/CategorizationModelsResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/resources/categorization-models" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Ресурсы
      summary: Получение моделей классификатора
      description: Данная операция возвращает все модели классификатора или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: GetCategorizationModelsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/CategorizationModelsResources'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/categorization-models" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление моделей классификатора
      description: Данная операция позволяет обновить модели классификатора. Для каждой модели классификатора, которую нужно обновить, следует указать её идентификатор и новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поле `language` нельзя обновлять.
      operationId: UpdateCategorizationModelsResources
      requestBody:
        $ref: '#/components/requestBodies/CategorizationModelsResourcesUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/categorization-models" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Resource\"}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление моделей классификатора
      description: Данная операция удаляет все модели классификатора или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: DeleteCategorizationModelsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/categorization-models" ^
            -H "Authorization: Basic dXNlcjo="
  /resources/categorization-models/{id}:
    parameters:
        - $ref: '#/components/parameters/resourceId'
    get:
      tags:
        - Ресурсы
      summary: Получение модели классификатора
      description: Данная операция позволяет получить модели классификатора по идентификатору.
      operationId: GetCategorizationModelsResource
      responses:
        '200':
          $ref: '#/components/responses/CategorizationModelsResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/categorization-models/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление модели классификатора
      description: Данная операция позволяет обновить модель классификатора по идентификатору. Следует указать новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поля `id` и `language` нельзя обновлять.
      operationId: UpdateCategorizationModelsResource
      requestBody:
        $ref: '#/components/requestBodies/CategorizationModelsResourceUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/categorization-models/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"name\": \"My Resource\"}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление модели классификатора
      description: Данная операция удаляет модель с заданным идентификатором.
      operationId: DeleteCategorizationModelsResource
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/categorization-models/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /resources/abbreviation-models:
    post:
      tags:
        - Ресурсы
      summary: Создание модели расшифровки аббревиатур
      description: Данная операция позволяет создать модели расшифровки аббревиатур. На созданную модель можно сослаться в настройке `abbreviationsOptions.model` в операции `abbreviations`.
      operationId: CreateAbbreviationModelsResource
      requestBody:
        $ref: '#/components/requestBodies/AbbreviationModelsResourceCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/AbbreviationModelsResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/resources/abbreviation-models" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Ресурсы
      summary: Получение моделей расшифровки аббревиатур
      description: Данная операция возвращает все модели расшифровки аббревиатур или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: GetAbbreviationModelsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/AbbreviationModelsResources'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/abbreviation-models" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление моделей расшифровки аббревиатур
      description: Данная операция позволяет обновить модели расшифровки аббревиатур. Для каждой модели расшифровки аббревиатур, которую нужно обновить, следует указать её идентификатор и новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поле `language` нельзя обновлять.
      operationId: UpdateAbbreviationModelsResources
      requestBody:
        $ref: '#/components/requestBodies/AbbreviationModelsResourcesUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/abbreviation-models" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Resource\"}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление моделей расшифровки аббревиатур
      description: Данная операция удаляет все модели расшифровки аббревиатур или только те, которые соответствуют хотя бы одному из фильтров, т.е. `id`, `language` или `name`.
      operationId: DeleteAbbreviationModelsResources
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/abbreviation-models" ^
            -H "Authorization: Basic dXNlcjo="
  /resources/abbreviation-models/{id}:
    parameters:
        - $ref: '#/components/parameters/resourceId'
    get:
      tags:
        - Ресурсы
      summary: Получение модели расшифровки аббревиатур
      description: Данная операция позволяет получить модель расшифровки аббревиатур по идентификатору.
      operationId: GetAbbreviationModelsResource
      responses:
        '200':
          $ref: '#/components/responses/AbbreviationModelsResource'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/resources/abbreviation-models/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Ресурсы
      summary: Обновление модели расшифровки аббревиатур
      description: Данная операция позволяет обновить модель расшифровки аббревиатур по ее идентификатору. Следует указать новые значения полей, которые нужно перезаписать. Значения тех полей, которые не указаны в запросе, не обновляются. Поля `id` и `language` нельзя обновлять.
      operationId: UpdateAbbreviationModelsResource
      requestBody:
        $ref: '#/components/requestBodies/AbbreviationModelsResourceUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/resources/abbreviation-models/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"name\": \"My Resource\"}]"
    delete:
      tags:
        - Ресурсы
      summary: Удаление модели расшифровки аббревиатур
      description: Данная операция удаляет модель расшифровки аббревиатур с заданным идентификатором.
      operationId: DeleteAbbreviationModelsResource
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/resources/abbreviation-models/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  #==============================
  # presets
  #------------------------------

  /options/languages:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `languages`
      operationId: CreateLanguagesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/LanguagesOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/LanguagesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/languages" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `languages`
      operationId: GetLanguagesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/LanguagesOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/languages" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `languages`
      operationId: UpdateLanguagesOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/LanguagesOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/languages" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `languages`
      operationId: DeleteLanguagesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/languages" ^
            -H "Authorization: Basic dXNlcjo="
  /options/languages/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `languages`
      operationId: GetLanguagesOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/LanguagesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/languages/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `languages`
      operationId: UpdateLanguagesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/LanguagesOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/languages/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `languages`
      operationId: DeleteLanguagesOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/languages/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/keywords:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `keywords`
      operationId: CreateKeywordsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/KeywordsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/KeywordsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/keywords" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `keywords`
      operationId: GetKeywordsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/KeywordsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/keywords" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `keywords`
      operationId: UpdateKeywordsOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/KeywordsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/entities" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `keywords`
      operationId: DeleteKeywordsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/keywords" ^
            -H "Authorization: Basic dXNlcjo="
  /options/keywords/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `keywords`
      operationId: GetKeywordsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/KeywordsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/keywords/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `keywords`
      operationId: UpdateKeywordsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/KeywordsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/keywords/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `keywords`
      operationId: DeleteKeywordsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/keywords/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/entities:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `entities`
      operationId: CreateEntitiesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/EntitiesOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/EntitiesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/entities" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `entities`
      operationId: GetEntitiesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/EntitiesOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/entities" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `entities`
      operationId: UpdateEntitiesOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/EntitiesOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/entities" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\",\"entitiesOptions\": {\"entitiesFallback\": \"\"}}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `entities`
      operationId: DeleteEntitiesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/entities" ^
            -H "Authorization: Basic dXNlcjo="
  /options/entities/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `entities`
      operationId: GetEntitiesOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/EntitiesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/entities/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `entities`
      operationId: UpdateEntitiesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/EntitiesOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/entities/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\",\"entitiesOptions\": {\"entitiesFallback\": \"\"}}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `entities`
      operationId: DeleteEntitiesOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/entities/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/sentiments:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `sentiments`
      operationId: CreateSentimentsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/SentimentsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/SentimentsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/sentiments" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `sentiments`
      operationId: GetSentimentsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/SentimentsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/sentiments" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `sentiments`
      operationId: UpdateSentimentsOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/SentimentsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/sentiments" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\",\"sentimentsOptions\": {\"sentimentsFallback\": \"\"}}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `sentiments`
      operationId: DeleteSentimentsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/sentiments" ^
            -H "Authorization: Basic dXNlcjo="
  /options/sentiments/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `sentiments`
      operationId: GetSentimentsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/SentimentsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/sentiments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `sentiments`
      operationId: UpdateSentimentsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/SentimentsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/sentiments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\",\"sentimentsOptions\": {\"sentimentsFallback\": \"\"}}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `sentiments`
      operationId: DeleteSentimentsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/sentiments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/facts:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `facts`
      operationId: CreateFactsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/FactsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/FactsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/facts" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `facts`
      operationId: GetFactsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/FactsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/facts" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `facts`
      operationId: UpdateFactsPresets
      requestBody:
        $ref: '#/components/requestBodies/FactsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/facts" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\",\"factsOptions\": {\"factsFallback\": \"\"}}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `facts`
      operationId: DeleteFactsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/facts" ^
            -H "Authorization: Basic dXNlcjo="
  /options/facts/{id}:
    parameters:
      - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `facts`
      operationId: GetFactsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/FactsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/facts/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `facts`
      operationId: UpdateFactsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/FactsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/facts/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\",\"factsOptions\": {\"factsFallback\": \"\"}}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `facts`
      operationId: DeleteFactsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/facts/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/anonymized-documents:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `anonymized-documents`
      operationId: CreateAnonymizedDocumentsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/AnonymizedDocumentsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/AnonymizedDocumentsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/anonymized-documents" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `anonymized-documents`
      operationId: GetAnonymizedDocumentsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/AnonymizedDocumentsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/anonymized-documents" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `anonymized-documents`
      operationId: UpdateAnonymizedDocumentsOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/AnonymizedDocumentsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/anonymized-documents" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `anonymized-documents`
      operationId: DeleteAnonymizedDocumentsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/anonymized-documents" ^
            -H "Authorization: Basic dXNlcjo="
  /options/anonymized-documents/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `anonymized-documents`
      operationId: GetAnonymizedDocumentsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/AnonymizedDocumentsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/anonymized-documents/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `anonymized-documents`
      operationId: UpdateAnonymizedDocumentsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/AnonymizedDocumentsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/anonymized-documents/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `anonymized-documents`
      operationId: DeleteAnonymizedDocumentsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/anonymized-documents/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/clusters:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `clusters`
      operationId: CreateClustersOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/ClustersOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/ClustersOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/clusters" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `clusters`
      operationId: GetClustersOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/ClustersOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/clusters" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `clusters`
      operationId: UpdateClustersOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/ClustersOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/clusters" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `clusters`
      operationId: DeleteClustersOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/clusters" ^
            -H "Authorization: Basic dXNlcjo="
  /options/clusters/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `clusters`
      operationId: GetClustersOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/ClustersOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/clusters/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `clusters`
      operationId: UpdateClustersOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/ClustersOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/clusters/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `clusters`
      operationId: DeleteClustersOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/clusters/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/categories:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `categories`
      operationId: CreateCategoriesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/CategoriesOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/CategoriesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/categories" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `categories`
      operationId: GetCategoriesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/CategoriesOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/categories" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `categories`
      operationId: UpdateCategoriesOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/CategoriesOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/categories" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `categories`
      operationId: DeleteCategoriesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/categories" ^
            -H "Authorization: Basic dXNlcjo="
  /options/categories/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `categories`
      operationId: GetCategoriesOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/CategoriesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/categories/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `categories`
      operationId: UpdateCategoriesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/CategoriesOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/categories/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `categories`
      operationId: DeleteCategoriesOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/categories/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/fragments:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `fragments`
      operationId: CreateFragmentsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/FragmentsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/FragmentsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/fragments" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `fragments`
      operationId: GetFragmentsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/FragmentsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/fragments" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `fragments`
      operationId: UpdateFragmentsPresets
      requestBody:
        $ref: '#/components/requestBodies/FragmentsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/fragments" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `fragments`
      operationId: DeleteFragmentsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/fragments" ^
            -H "Authorization: Basic dXNlcjo="
  /options/fragments/{id}:
    parameters:
      - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `fragments`
      operationId: GetFragmentsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/FragmentsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/fragments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `fragments`
      operationId: UpdateFragmentsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/FragmentsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/fragments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `fragments`
      operationId: DeleteFragmentsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/fragments/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/summaries:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `summaries`
      operationId: CreateSummariesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/SummariesOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/SummariesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/summaries" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `summaries`
      operationId: GetSummariesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/SummariesOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/summaries" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `summaries`
      operationId: UpdateSummariesPresets
      requestBody:
        $ref: '#/components/requestBodies/SummariesOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/summaries" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `summaries`
      operationId: DeleteSummariesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/summaries" ^
            -H "Authorization: Basic dXNlcjo="
  /options/summaries/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `summaries`
      operationId: GetSummariesOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/SummariesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/summaries/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `summaries`
      operationId: UpdateSummariesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/SummariesOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/summaries/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `summaries`
      operationId: DeleteSummariesOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/summaries/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/misspellings:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `misspellings`
      operationId: CreateMisspellingsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/MisspellingsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/MisspellingsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/misspellings" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `misspellings`
      operationId: GetMisspellingsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/MisspellingsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/misspellings" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `misspellings`
      operationId: UpdateMisspellingsPresets
      requestBody:
        $ref: '#/components/requestBodies/MisspellingsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/misspellings" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `misspellings`
      operationId: DeleteMisspellingsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/misspellings" ^
            -H "Authorization: Basic dXNlcjo="
  /options/misspellings/{id}:
    parameters:
      - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `misspellings`
      operationId: GetMisspellingsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/MisspellingsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/misspellings/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `misspellings`
      operationId: UpdateMisspellingsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/MisspellingsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/misspellings/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `misspellings`
      operationId: DeleteMisspellingsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/misspellings/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/grammar-mistakes:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `grammar-mistakes`
      operationId: CreateGrammarMistakesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/GrammarMistakesOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/GrammarMistakesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/grammar-mistakes" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `grammar-mistakes`
      operationId: GetGrammarMistakesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/GrammarMistakesOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/grammar-mistakes" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `grammar-mistakes`
      operationId: UpdateGrammarMistakesPresets
      requestBody:
        $ref: '#/components/requestBodies/GrammarMistakesOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/grammar-mistakes" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `grammar-mistakes`
      operationId: DeleteGrammarMistakesOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/grammar-mistakes" ^
            -H "Authorization: Basic dXNlcjo="
  /options/grammar-mistakes/{id}:
    parameters:
      - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `grammar-mistakes`
      operationId: GetGrammarMistakesOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/GrammarMistakesOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/grammar-mistakes/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `grammar-mistakes`
      operationId: UpdateGrammarMistakesOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/GrammarMistakesOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/grammar-mistakes/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `grammar-mistakes`
      operationId: DeleteGrammarMistakesOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/grammar-mistakes/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/topics:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `topics`
      operationId: CreateTopicsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/TopicsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/TopicsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/topics" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `topics`
      operationId: GetTopicsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/TopicsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/topics" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `topics`
      operationId: UpdateTopicsOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/TopicsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/topics" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `topics`
      operationId: DeleteTopicsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/topics" ^
            -H "Authorization: Basic dXNlcjo="
  /options/topics/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `topics`
      operationId: GetTopicsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/TopicsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/topics/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `topics`
      operationId: UpdateTopicsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/TopicsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/topics/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `topics`
      operationId: DeleteTopicsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/topics/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

  /options/abbreviations:
    post:
      tags:
        - Преднастройки
      summary: Создание преднастроек операции `abbreviations`
      operationId: CreateAbbreviationsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/AbbreviationsOptionsPresetCreateParams'
      responses:
        '201':
          $ref: '#/components/responses/AbbreviationsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X POST "http://localhost:7007/tmapi/v2/options/abbreviations" ^
            -H "Authorization: Basic dXNlcjo="
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `abbreviations`
      operationId: GetAbbreviationsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '200':
          $ref: '#/components/responses/AbbreviationsOptionsPresets'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/abbreviations" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `abbreviations`
      operationId: UpdateAbbreviationsOptionsPresets
      requestBody:
        $ref: '#/components/requestBodies/AbbreviationsOptionsPresetsUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/abbreviations" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "[{\"id\": \"A0CCEBD4-0245-4228-A224-11FE170D63CD\", \"name\": \"My Preset\"}]"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `abbreviations`
      operationId: DeleteAbbreviationsOptionsPresets
      parameters:
        - $ref: '#/components/parameters/idFilter'
        - $ref: '#/components/parameters/languageFilter'
        - $ref: '#/components/parameters/nameFilter'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/abbreviations" ^
            -H "Authorization: Basic dXNlcjo="
  /options/abbreviations/{id}:
    parameters:
        - $ref: '#/components/parameters/optionsPresetId'
    get:
      tags:
        - Преднастройки
      summary: Получение преднастроек операции `abbreviations`
      operationId: GetAbbreviationsOptionsPreset
      responses:
        '200':
          $ref: '#/components/responses/AbbreviationsOptionsPreset'
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X GET "http://localhost:7007/tmapi/v2/options/abbreviations/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="
    patch:
      tags:
        - Преднастройки
      summary: Обновление преднастроек операции `abbreviations`
      operationId: UpdateAbbreviationsOptionsPreset
      requestBody:
        $ref: '#/components/requestBodies/AbbreviationsOptionsPresetUpdateParams'
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X PATCH "http://localhost:7007/tmapi/v2/options/abbreviations/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo=" ^
            -d "{\"name\": \"My Preset\"}"
    delete:
      tags:
        - Преднастройки
      summary: Удаление преднастроек операции `abbreviations`
      operationId: DeleteAbbreviationsOptionsPreset
      responses:
        '204':
          description: Успех
        '400':
          $ref: '#/components/responses/InvalidRequestParamsError'
        '403':
          $ref: '#/components/responses/AuthenticationError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-codeSamples:
        - lang: Curl
          source: |
            curl -X DELETE "http://localhost:7007/tmapi/v2/options/abbreviations/A561E519-52EE-48C7-809C-AB09A30F8EEA" ^
            -H "Authorization: Basic dXNlcjo="

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  #============================================================
  # parameters
  #------------------------------------------------------------
  parameters:
    idFilter:
      in: query
      name: id
      explode: true
      description: Фильтрация по идентификаторам
      schema:
        type: array
        items:
          type: string
    languageFilter:
      in: query
      name: language
      explode: true
      description: Фильтрация по языкам
      schema:
        type: array
        items:
            type: string
    nameFilter:
      in: query
      name: name
      explode: true
      description: Фильтрация по именам
      schema:
        type: array
        items:
          type: string
    researchId:
      in: path
      name: id
      required: true
      description: Идентификатор исследования
      schema:
        type: string
    resourceId:
      in: path
      name: id
      required: true
      description: Идентификатор ресурса
      schema:
        type: string
    optionsPresetId:
      in: path
      name: id
      required: true
      description: Идентификатор преднастроек
      schema:
        type: string
    idTask:
      in: path
      name: id
      required: true
      description: Идентификатор задачи
      schema:
        type: string
  #============================================================
  # requestBodies
  #------------------------------------------------------------
  requestBodies:
    #==============================
    # operations
    #------------------------------
    LanguagesParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LanguagesParams'
          example:
            languagesOptions:
              languages: []
              languagesFallback: .+
              reliability: 10
              excludeMinorTokens: false
              minSampleSize: 21
              maxSampleSize: 1000
              minTokenCount: 5
              maxTokenCount: 100
              dictWordsThreshold: 51
              hieroglyphsThreshold: 10
              algorithm: dict
            documents:
              - content: 'Elvis Presley was born in Tupelo, Mississippi.'
    ParseParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParseParams'
          example:
            documents:
              - content: Elvis Presley was born in Tupelo, Mississippi.
    WordformsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WordformsParams'
          example:
            wordformsOptions:
              useMorphoAnalyzer: true
            documents:
              - content: Privacy Policy
    OperationParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationParams'
          example:
            documents:
              - content: Elvis Presley was born in Tupelo, Mississippi.
    ChunksParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperationParams'
          example:
            documents:
             - content: Elvis Presley starred in 31 films.
    KeywordsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeywordsParams'
          example:
            keywordsOptions:
              partsOfSpeech:
                - Noun
                - Verb
                - Adverb
                - Adjective
              analyzeNegations: true
              mergeSingleroot: false
              findDictSynonyms: true
              findDictPhrases: true
              findNonDictPhrases: true
              nonDictPhraseLenMax: 3
              findPhrasesOnly: false
              filter:
                negations: true
                junk: false
                unusualCapitalization: false
                termsInURLs: false
                nonAlphabetic: false
                subkeywords: false
                unknownTermsOnly: false
                knownTermsOnly: false
            documents:
              - content: The Senate Agriculture Committee was expected to consider proposals that would limit adjustments in county loan rate differentials which trigger larger corn and wheat acreage reduction requirements.
    EntitiesParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesParams'
          example:
            entitiesOptions:
              entities: []
              entitiesFallback: .+
              customEntities: []
              customEntitiesFallback: ''
              extraEntities: []
              entitiesSet: General
            documents:
              - extension: txt
                encoding: UTF-8
                content: RWx2aXMgUHJlc2xleSB3YXMgYm9ybiBpbiBUdXBlbG8sIE1pc3Npc3NpcHBp
    SentimentsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SentimentsParams'
          example:
            sentimentsOptions:
              sentiments: []
              sentimentsFallback: .+
              customSentiments: []
              customSentimentsFallback: ''
              extraSentiments: []
              domain: General
            documents:
              - content: 'The burger was great, but the waiter was very rude.'
    FactsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FactsParams'
          example:
            factsOptions:
              facts: []
              factsFallback: .+
              customFacts: []
              customFactsFallback: ''
              extraFacts: []
            documents:
              - content: Elvis Presley was an American singer.
    AnonymizedDocumentsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnonymizedDocumentsParams'
          example:
            anonymizedDocumentsOptions:
              entities:
                - entityType: People
                  entityAttribute: FirstName
                  method: replace
                  replaceText: Name_Is_Hidden
                - entityType: People
                  entityAttribute: LastName
                  method: fill
                  fillLetter: '*'
            documents:
              - content: 'Elvis Presley was, an American singer.'
    ClustersParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClustersParams'
          example:
            clustersOptions:
              algorithm: pLSA
              clusterCount:
                min: 2
                max: 30
            documents:
              - content: Elvis Presley was an American singer.
              - content: U.S. President Donald Trump has seven residences.
              - content: TRIGO Group, the international provider of operational quality management solutions for manufacturers, has signed an agreement with Franz Böllinger, Founder and Chairman of the BÖLLINGER GROUP, to acquire Böllinger, the Groups automotive quality assurance services subsidiary.
              - content: The Senate Agriculture Committee was expected to consider proposals that would limit adjustments in county loan rate differentials which trigger larger corn and wheat acreage reduction requirements.
    CategoriesParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesParams'
          example:
            categoriesOptions:
              model: 'Model name'
              training:
                enabled: false
                algorithm: naive
                categoriesCount: 1
                metricType: euclidean
                svmKernel: linear
                categories: []
            documents:
              - content: The dog stole my pencil.
              - content: The car crashed into a wall.
    FragmentsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FragmentsParams'
          example:
            fragmentsOptions:
              minFragmentsLength: 6
              minRepeatsCount: 2
              ignoreCapitalization: true
              ignorePunctuation: true
              ignoreSpaces: true
              ignoreDigits: true
            documents:
              - content: Elvis Presley was an American singer.
              - content: Elvis Presley was an American singer and actor.
    SummariesParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SummariesParams'
          example:
            summariesOptions:
              informativeSentencesOnly: true
              sentencesCount: 0
              proportion: 20
            documents:
              - content: Elvis Presley was an American singer. Once he played in a movie.
    MisspellingsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MisspellingsParams'
          example:
            misspellingsOptions:
              fixFromDictionaryOnly: false
              fixQuestionMarks: false
              decodeHtmlEntities: false
              fixMissingDiacritics: false
              ignoreKnownAffixes: true
              fixTwoErrors: true
              fixUnited: true
              fixSplitted: true
              useHeuristic: true
            documents:
              - content: Elvis Presley was an American singere.
    GrammarMistakesParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrammarMistakesParams'
          example:
            grammarMistakesOptions:
              rules: []
              rulesFallback: .+
              punctuationWeight: 100
              capitalizationWeight: 100
              misspellWeight: 100
              grammarWeight: 100
              styleWeight: 100
              threshold: 50
            documents:
              - content: Elvis Presley was an American singere.
    TopicsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopicsParams'
          example:
            topicsOptions:
              topics: []
              topicsFallback: .+
              mainTopicsOnly: true
              relevantGroupOnly: true
              maxTopics: 0
              minConfidence: 20
              polysemy: document
            documents:
              - content: Elvis Presley was an American singer.
    DomainsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ParseParams'
          example:
            documents:
              - content: The burger was great, but the waiter was very rude.
    AbbreviationsParams:
      required: true
      description: Параметры операции
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationsParams'
          example:
            abbreviationsOptions:
              model: ''
              expansionsFromText: true
              expansionsFromLocalContext: true
              localContextSentencesLimitEnabled: true
              localContextSentencesLimit: 3
              uniqueExpansionScope: text
              threshold: 70
            documents:
              - content: WOW, ZA

    #==============================
    # researches
    #------------------------------
    ResearchesParams:
      required: true
      description: Параметры исследования
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResearchesParams'
          example:
            async: false
            operations:
              - languages
              - entities
            entitiesOptions:
              extraEntities:
                - name: Particles
                  rule:
                    - 'rule: particles {'
                    - '  query: {lemma(particle)}:p'
                    - '  result: Match=$p'
                    - '}'
            documents:
              - content: The Senate Agriculture Committee was expected to consider proposals that would limit adjustments in county loan rate differentials which trigger larger corn and wheat acreage reduction requirements.
    #==============================
    # resources
    #------------------------------
    EntitiesResourceCreateParams:
      description: Параметры нового ресурса
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesResourceCreateParams'
    EntitiesResourceUpdateParams:
      required: true
      description: Новые значения параметров ресурса
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesResourceUpdateParams'
    EntitiesResourcesUpdateParams:
      required: true
      description: Новые значения параметров ресурсов
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesResourcesUpdateParams'
    CategorizationModelsResourceCreateParams:
      description: Параметры нового ресурса
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategorizationModelsResourceCreateParams'
    CategorizationModelsResourceUpdateParams:
      required: true
      description: Новые значения параметров ресурса
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategorizationModelsResourceUpdateParams'
    CategorizationModelsResourcesUpdateParams:
      required: true
      description: Новые значения параметров ресурсов
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategorizationModelsResourcesUpdateParams'
    AbbreviationModelsResourceCreateParams:
      description: Параметры нового ресурса
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationModelsResourceCreateParams'
    AbbreviationModelsResourceUpdateParams:
      required: true
      description: Новые значения параметров ресурса
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationModelsResourceUpdateParams'
    AbbreviationModelsResourcesUpdateParams:
      required: true
      description: Новые значения параметров ресурсов
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationModelsResourcesUpdateParams'
    #==============================
    # presets
    #------------------------------
    LanguagesOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LanguagesOptionsPresetCreateParams'
    LanguagesOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LanguagesOptionsPresetUpdateParams'
    LanguagesOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LanguagesOptionsPresetsUpdateParams'
    KeywordsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeywordsOptionsPresetCreateParams'
    KeywordsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeywordsOptionsPresetUpdateParams'
    KeywordsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeywordsOptionsPresetsUpdateParams'
    EntitiesOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesOptionsPresetCreateParams'
    EntitiesOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesOptionsPresetUpdateParams'
    EntitiesOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesOptionsPresetsUpdateParams'
    SentimentsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SentimentsOptionsPresetCreateParams'
    SentimentsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SentimentsOptionsPresetUpdateParams'
    SentimentsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SentimentsOptionsPresetsUpdateParams'
    FactsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FactsOptionsPresetCreateParams'
    FactsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FactsOptionsPresetUpdateParams'
    FactsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FactsOptionsPresetsUpdateParams'
    AnonymizedDocumentsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnonymizedDocumentsOptionsPresetCreateParams'
    AnonymizedDocumentsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnonymizedDocumentsOptionsPresetUpdateParams'
    AnonymizedDocumentsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnonymizedDocumentsOptionsPresetsUpdateParams'
    ClustersOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClustersOptionsPresetCreateParams'
    ClustersOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClustersOptionsPresetUpdateParams'
    ClustersOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClustersOptionsPresetsUpdateParams'
    CategoriesOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesOptionsPresetCreateParams'
    CategoriesOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesOptionsPresetUpdateParams'
    CategoriesOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesOptionsPresetsUpdateParams'
    FragmentsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FragmentsOptionsPresetCreateParams'
    FragmentsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FragmentsOptionsPresetUpdateParams'
    FragmentsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FragmentsOptionsPresetsUpdateParams'
    SummariesOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SummariesOptionsPresetCreateParams'
    SummariesOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SummariesOptionsPresetUpdateParams'
    SummariesOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SummariesOptionsPresetsUpdateParams'
    MisspellingsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MisspellingsOptionsPresetCreateParams'
    MisspellingsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MisspellingsOptionsPresetUpdateParams'
    MisspellingsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MisspellingsOptionsPresetsUpdateParams'
    GrammarMistakesOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrammarMistakesOptionsPresetCreateParams'
    GrammarMistakesOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrammarMistakesOptionsPresetUpdateParams'
    GrammarMistakesOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrammarMistakesOptionsPresetsUpdateParams'
    TopicsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopicsOptionsPresetCreateParams'
    TopicsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopicsOptionsPresetUpdateParams'
    TopicsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopicsOptionsPresetsUpdateParams'
    AbbreviationsOptionsPresetCreateParams:
      description: Параметры новых преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationsOptionsPresetCreateParams'
    AbbreviationsOptionsPresetUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationsOptionsPresetUpdateParams'
    AbbreviationsOptionsPresetsUpdateParams:
      required: true
      description: Новые значения преднастроек
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationsOptionsPresetsUpdateParams'
  #============================================================
  # responses
  #------------------------------------------------------------
  responses:
    #==============================
    # errors
    #------------------------------
    AuthenticationError:
      description: Ошибка аутентификации
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
          example:
            error:
              code: 403
              title: Authorization Required
              message: You are not logged in to Text Mining API Server. Login failed - user name not specified.
    NotFoundError:
      description: Authentication error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
          example:
            error:
              code: 404
              title: Not Found
              message: The requested URL was not found on this server
    InternalServerError:
      description: Внутренняя ошибка сервера
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
    InvalidRequestParamsError:
      description: Некорректные параметры запроса
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
          example:
            error:
              code: 400
              title: Bad Request
              message: Invalid query parameters
    NotEnoughResourcesError:
      description: Недостаточно ресурсов
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
          example:
            error:
              code: 503
              title: Service Unavailable
              message: Not enough resources to complete operation
    #==============================
    # server
    #------------------------------
    ServerInfo:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerInfo'
    #==============================
    # limits
    #------------------------------
    Limits:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Limits'
    #==============================
    # operations
    #------------------------------
    LanguagesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LanguagesResult'
          example:
            documentsLanguage: ''
            documents:
              - id: 0
                language: English
    TokensResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TokensResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                tokens:
                  - word: Elvis
                    isExtension: 0
                    symbolPositions:
                      - begin: 0
                        length: 5
                  - word: Presley
                    isExtension: 0
                    symbolPositions:
                      - begin: 6
                        length: 7
                  - word: was
                    isExtension: 0
                    symbolPositions:
                      - begin: 14
                        length: 3
                  - word: born
                    isExtension: 0
                    symbolPositions:
                      - begin: 18
                        length: 4
                  - word: in
                    isExtension: 0
                    symbolPositions:
                      - begin: 23
                        length: 2
                  - word: Tupelo
                    isExtension: 0
                    symbolPositions:
                      - begin: 26
                        length: 6
                  - word: ','
                    isExtension: 1
                    symbolPositions:
                      - begin: 32
                        length: 1
                  - word: Mississippi
                    isExtension: 0
                    symbolPositions:
                      - begin: 34
                        length: 11
    LemmasResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LemmasResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                tokens:
                  - word: Elvis
                    isExtension: 0
                    symbolPositions:
                      - begin: 0
                        length: 5
                  - word: Presley
                    isExtension: 0
                    symbolPositions:
                      - begin: 6
                        length: 7
                  - word: was
                    isExtension: 0
                    symbolPositions:
                      - begin: 14
                        length: 3
                  - word: born
                    isExtension: 0
                    symbolPositions:
                      - begin: 18
                        length: 4
                  - word: in
                    isExtension: 0
                    symbolPositions:
                      - begin: 23
                        length: 2
                  - word: Tupelo
                    isExtension: 0
                    symbolPositions:
                      - begin: 26
                        length: 6
                  - word: ','
                    isExtension: 1
                    symbolPositions:
                      - begin: 32
                        length: 1
                  - word: Mississippi
                    isExtension: 0
                    symbolPositions:
                      - begin: 34
                        length: 11
                lemmas:
                  - Elvis
                  - Presley
                  - be
                  - bear
                  - in
                  - tupelo
                  - ','
                  - Mississippi
    PartsOfSpeechResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartsOfSpeechResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                tokens:
                  - word: Elvis
                    isExtension: 0
                    symbolPositions:
                      - begin: 0
                        length: 5
                  - word: Presley
                    isExtension: 0
                    symbolPositions:
                      - begin: 6
                        length: 7
                  - word: was
                    isExtension: 0
                    symbolPositions:
                      - begin: 14
                        length: 3
                  - word: born
                    isExtension: 0
                    symbolPositions:
                      - begin: 18
                        length: 4
                  - word: in
                    isExtension: 0
                    symbolPositions:
                      - begin: 23
                        length: 2
                  - word: Tupelo
                    isExtension: 0
                    symbolPositions:
                      - begin: 26
                        length: 6
                  - word: ','
                    isExtension: 1
                    symbolPositions:
                      - begin: 32
                        length: 1
                  - word: Mississippi
                    isExtension: 0
                    symbolPositions:
                      - begin: 34
                        length: 11
                partsOfSpeech:
                  - partOfSpeech: Noun
                    modifier:
                      partOfSpeech: Noun
                      category: Proper
                      number: Singular
                      person: ''
                      gender: Masculine
                      short: ''
                      degree: ''
                      animate: AnimateYes
                      case: CaseNominative
                      tense: ''
                      verbForm: ''
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
                  - partOfSpeech: Noun
                    modifier:
                      partOfSpeech: Noun
                      category: Proper
                      number: Singular
                      person: ''
                      gender: Masculine
                      short: ''
                      degree: ''
                      animate: AnimateYes
                      case: CaseNominative
                      tense: ''
                      verbForm: ''
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
                  - partOfSpeech: Verb
                    modifier:
                      partOfSpeech: Verb
                      category: Auxiliary
                      number: Singular
                      person: PersonThird
                      gender: ''
                      short: ''
                      degree: ''
                      animate: ''
                      case: ''
                      tense: Past
                      verbForm: ''
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
                  - partOfSpeech: Verb
                    modifier:
                      partOfSpeech: Verb
                      category: ''
                      number: ''
                      person: ''
                      gender: ''
                      short: ''
                      degree: ''
                      animate: ''
                      case: ''
                      tense: Past
                      verbForm: Participle
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
                  - partOfSpeech: Particle
                    modifier:
                      partOfSpeech: Preposition
                      category: ''
                      number: ''
                      person: ''
                      gender: ''
                      short: ''
                      degree: ''
                      animate: ''
                      case: ''
                      tense: ''
                      verbForm: ''
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
                  - partOfSpeech: Noun
                    modifier:
                      partOfSpeech: Noun
                      category: Proper
                      number: Singular
                      person: ''
                      gender: Masculine
                      short: ''
                      degree: ''
                      animate: ''
                      case: CaseNominative
                      tense: ''
                      verbForm: ''
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
                  - partOfSpeech: Punctuation
                    modifier:
                      partOfSpeech: Punctuation
                      category: ''
                      number: ''
                      person: ''
                      gender: ''
                      short: ''
                      degree: ''
                      animate: ''
                      case: ''
                      tense: ''
                      verbForm: ''
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
                  - partOfSpeech: Noun
                    modifier:
                      partOfSpeech: Noun
                      category: Proper
                      number: Singular
                      person: ''
                      gender: Neutral
                      short: ''
                      degree: ''
                      animate: AnimateNo
                      case: CaseNominative
                      tense: ''
                      verbForm: ''
                      mood: ''
                      transitivity: ''
                      aspect: ''
                      voice: ''
                      honorificity: ''
                      clause: ''
                      speechLevel: ''
                      clitic: ''
                      state: ''
    WordformsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WordformsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                tokens:
                  - word: Privacy
                    isExtension: 0
                    symbolPositions:
                      - begin: 0
                        length: 7
                  - word: Policy
                    isExtension: 0
                    symbolPositions:
                      - begin: 8
                        length: 6
                wordforms:
                  - - lexeme:
                        norm: privacy
                        partOfSpeech: Noun
                      forms:
                        - word: privacy
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Singular
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseNominative
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
                        - word: privacy's
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Singular
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseGenitive
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
                        - word: privacies
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Plural
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseNominative
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
                        - word: privacies'
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Plural
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseGenitive
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
                  - - lexeme:
                        norm: policy
                        partOfSpeech: Noun
                      forms:
                        - word: policy
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Singular
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseNominative
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
                        - word: policy's
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Singular
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseGenitive
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
                        - word: policies
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Plural
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseNominative
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
                        - word: policies'
                          modifier:
                            partOfSpeech: Noun
                            category: ''
                            number: Plural
                            person: ''
                            gender: Neutral
                            short: ''
                            degree: ''
                            animate: AnimateNo
                            case: CaseGenitive
                            tense: ''
                            verbForm: ''
                            mood: ''
                            transitivity: ''
                            aspect: ''
                            voice: ''
                            honorificity: ''
                            clause: ''
                            speechLevel: ''
                            clitic: ''
                            state: ''
    SentencesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SentencesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                sentences:
                  - text: 'Elvis Presley was born in Tupelo, Mississippi.'
    ChunksResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChunksResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                chunks:
                  - chunk: Evlis Presley
                    type: Np
                  - chunk: starred
                    type: Vp
                  - chunk: in
                    type: Pp
                  - chunk: 31 feature films
                    type: Np
    DependencyTreesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DependencyTreesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                dependencyTrees:
                  - position: -1
                    word: ROOT
                    relation: ''
                    children:
                      - position: 2
                        word: was
                        relation: ROOT
                        children:
                          - position: 1
                            word: Presley
                            relation: SBJ
                            children:
                              - position: 0
                                word: Elvis
                                relation: NAME
                                children: []
                          - position: 3
                            word: ','
                            relation: P
                            children: []
                          - position: 5
                            word: singer
                            relation: PRD
                            children:
                              - position: 4
                                word: anAmerican
                                relation: NMOD
                                children: []
    ConstituencyTreesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConstituencyTreesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                constituencyTrees:
                  - position: -1
                    word: ''
                    relation: S
                    children:
                      - position: -1
                        word: ''
                        relation: NP
                        children:
                          - position: 0
                            word: Elvis
                            relation: NNP
                            children: []
                          - position: 1
                            word: Presley
                            relation: NNP
                            children: []
                      - position: -1
                        word: ''
                        relation: VP
                        children:
                          - position: 2
                            word: was
                            relation: VBD
                            children: []
                          - position: 3
                            word: ','
                            relation: ','
                            children: []
                          - position: -1
                            word: ''
                            relation: NP
                            children:
                              - position: -1
                                word: ''
                                relation: NP
                                children:
                                  - position: 4
                                    word: anAmerican
                                    relation: NNP
                                    children: []
                              - position: 5
                                word: singer
                                relation: NN
                                children: []
    KeywordsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeywordsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                keywords:
                  - keyword: proposal
                    negated: false
                    partOfSpeech: Noun
                    significance: 99.7941
                    support: 1
                    frequency: 1
                  - keyword: limit
                    negated: false
                    partOfSpeech: Verb
                    significance: 96.9964
                    support: 1
                    frequency: 1
                  - keyword: adjustment
                    negated: false
                    partOfSpeech: Noun
                    significance: 99.9973
                    support: 1
                    frequency: 1
                  - keyword: county
                    negated: false
                    partOfSpeech: Noun
                    significance: 99.9054
                    support: 1
                    frequency: 1
                  - keyword: loan
                    negated: false
                    partOfSpeech: Noun
                    significance: 99.9823
                    support: 1
                    frequency: 1
                  - keyword: rate
                    negated: false
                    partOfSpeech: Noun
                    significance: 71.1363
                    support: 1
                    frequency: 1
                  - keyword: differential
                    negated: false
                    partOfSpeech: Noun
                    significance: 99.9998
                    support: 1
                    frequency: 1
                  - keyword: trigger
                    negated: false
                    partOfSpeech: Verb
                    significance: 99.9979
                    support: 1
                    frequency: 1
                  - keyword: large
                    negated: false
                    partOfSpeech: Adjective
                    significance: 22.2781
                    support: 1
                    frequency: 1
                  - keyword: corn
                    negated: false
                    partOfSpeech: Noun
                    significance: 100
                    support: 1
                    frequency: 1
                  - keyword: wheat
                    negated: false
                    partOfSpeech: Noun
                    significance: 100
                    support: 1
                    frequency: 1
                  - keyword: acreage
                    negated: false
                    partOfSpeech: Noun
                    significance: 69.8956
                    support: 1
                    frequency: 1
                  - keyword: reduction
                    negated: false
                    partOfSpeech: Noun
                    significance: 99.5571
                    support: 1
                    frequency: 1
                  - keyword: requirement
                    negated: false
                    partOfSpeech: Noun
                    significance: 99.7001
                    support: 1
                    frequency: 1
                  - keyword: expected to consider
                    negated: false
                    partOfSpeech: Verb
                    significance: 57.4303
                    support: 1
                    frequency: 1
    EntitiesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                entities:
                  - type: People
                    attributes:
                      Name: Elvis Presley
                      FirstName: Elvis
                      MiddleName: ''
                      LastName: Presley
                      NickName: ''
                      Attribute: ''
                      Postfix: ''
                      Age: null
                      Gender: Male
                      Confidence: 0.9
                  - type: GeoAdministrative
                    attributes:
                      Name: Tupelo
                      Category: City
                      City: Tupelo
                      Region: Mississippi
                      Country: United States
                      WorldPart: North America
                      Part: ''
                      Area: null
                      Population: 35956
                      Known: 1
                      Confidence: 0.93
                  - type: GeoAdministrative
                    attributes:
                      Name: Mississippi
                      Category: Region
                      City: ''
                      Region: Mississippi
                      Country: United States
                      WorldPart: North America
                      Part: ''
                      Area: 125443
                      Population: 2992333
                      Known: 1
                      Confidence: 0.93
    SentimentsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SentimentsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                sentiments:
                  - type: Positive
                    attributes:
                      Subject: ''
                      Evaluation: great
                      Object: burger
                      HeadObject: burger
                      Degree: 4
                      Aspect: Food and Beverage
                      Confidence: 0.8
                  - type: Negative
                    attributes:
                      Subject: ''
                      Evaluation: very rude
                      Object: waiter
                      HeadObject: waiter
                      Degree: -5
                      Aspect: Staff
                      Confidence: 0.8
    FactsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FactsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                facts:
                  - type: Gender
                    attributes:
                      Person: Elvis Presley
                      Gender: Male
                      Confidence: 1
                  - type: Occupation
                    attributes:
                      Person: Elvis Presley
                      Occupation: American singer
                      Confidence: 1
    AnonymizedDocumentsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnonymizedDocumentsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                anonymizedDocument:
                  content: 'Name_Is_Hidden ******* was, an American singer.'
    ClustersResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClustersResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                cluster:
                  id: '#1'
                  reliability: 0.2564117145914969
              - id: 1
                cluster:
                  id: '#2'
                  reliability: 0.5886347070976612
              - id: 2
                cluster:
                  id: '#3'
                  reliability: 0.2339767619978521
              - id: 3
                cluster:
                  id: '#1'
                  reliability: 0.2211759707694324
    CategoriesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                categories:
                  - name: Robbery
                    reliability: '0.21'
              - id: 1
                categories:
                  - name: Accident
                    reliability: '0.33'
    FragmentsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FragmentsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                fragments:
                  - Elvis Presley was an American singer
              - id: 1
                fragments:
                  - Elvis Presley was an American singer
    SummariesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SummariesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                summary:
                  text: Elvis Presley was an American singer.
                  symbolPositions:
                    - begin: 0
                      length: 37
    MisspellingsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MisspellingsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                misspellings:
                  - misspelling: singere
                    replace: singer
                    confidence: 50.7026
    GrammarMistakesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrammarMistakesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                grammarMistakes:
                  documentScore: 100
                  mistakes:
                    - mistake: singere
                      description: Probably was meant 'singer'
                      rule:
                        id: SPELLER_MISSPELL
                        name: Possible spelling mistake
                        category: Misspell
    TopicsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopicsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                topics:
                  - name: Art
                    confidence: 75.07330295375068
    DomainsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DomainsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                domain: Restaurants
    AbbreviationsResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationsResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                abbreviations:
                  - abbreviation: WOW
                    expansion: WideOpenWest
                    confidence: 99.9
                  - abbreviation: ZA
                    expansion: Zoledronic Acid
                    confidence: 80
    #==============================
    # researches
    #------------------------------
    ResearchesResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResearchesResult'
          example:
            documentsLanguage: English
            documents:
              - id: 0
                entities:
                  - type: Particles
                    attributes:
                      Match: The
                      Confidence: 1
                  - type: Particles
                    attributes:
                      Match: to
                      Confidence: 1
                  - type: Particles
                    attributes:
                      Match: in
                      Confidence: 1
                  - type: Particles
                    attributes:
                      Match: and
                      Confidence: 1
                  - type: Organizations
                    attributes:
                      Name: Senate Agriculture Committee
                      ShortName: ''
                      Type: Committee
                      Location: ''
                      Industry: ''
                      Abbreviation: ''
                      Known: 0
                      Confidence: 0.95
                language: English
    ResearchesCreateResult:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResearchesCreateResult'
          example:
            id: 42864EA7-71BB-4C94-8CE9-BAB8F35BC00C
    ResearchesResource:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResearchResourceParams'
          example:
            id: 42864EA7-71BB-4C94-8CE9-BAB8F35BC00C
            operations:
              - tokens
            positions: none
            transient: false
            documentsLanguage: auto
            documents:
              - The Senate Agriculture Committee was expected to consider proposals that would limit adjustments ...
    ResearchesResources:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ResearchResourceParams'
          example:
            - id: 42864EA7-71BB-4C94-8CE9-BAB8F35BC00C
              operations:
                - tokens
              positions: none
              transient: false
              documentsLanguage: auto
              documents:
                - The Senate Agriculture Committee was expected to consider proposals that would limit adjustments ...
    #==============================
    # queue (tasks)
    #------------------------------
    TaskResponse:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Task'
    TasksResponse:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Task'
    #==============================
    # resources
    #------------------------------
    EntitiesResource:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesResource'
    EntitiesResources:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EntitiesResource'
    CategorizationModelsResource:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategorizationModelsResource'
    CategorizationModelsResources:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CategorizationModelsResource'
    AbbreviationModelsResource:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationModelsResource'
    AbbreviationModelsResources:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AbbreviationModelsResource'
    #==============================
    # presets
    #------------------------------
    LanguagesOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LanguagesOptionsPreset'
    LanguagesOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LanguagesOptionsPreset'
    KeywordsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/KeywordsOptionsPreset'
    KeywordsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/KeywordsOptionsPreset'
    EntitiesOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EntitiesOptionsPreset'
    EntitiesOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/EntitiesOptionsPreset'
    SentimentsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SentimentsOptionsPreset'
    SentimentsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SentimentsOptionsPreset'
    FactsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FactsOptionsPreset'
    FactsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FactsOptionsPreset'
    AnonymizedDocumentsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AnonymizedDocumentsOptionsPreset'
    AnonymizedDocumentsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AnonymizedDocumentsOptionsPreset'
    ClustersOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClustersOptionsPreset'
    ClustersOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ClustersOptionsPreset'
    CategoriesOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CategoriesOptionsPreset'
    CategoriesOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CategoriesOptionsPreset'
    FragmentsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FragmentsOptionsPreset'
    FragmentsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/FragmentsOptionsPreset'
    SummariesOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SummariesOptionsPreset'
    SummariesOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SummariesOptionsPreset'
    MisspellingsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MisspellingsOptionsPreset'
    MisspellingsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MisspellingsOptionsPreset'
    GrammarMistakesOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GrammarMistakesOptionsPreset'
    GrammarMistakesOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/GrammarMistakesOptionsPreset'
    TopicsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TopicsOptionsPreset'
    TopicsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TopicsOptionsPreset'
    AbbreviationsOptionsPreset:
      description: Успех
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AbbreviationsOptionsPreset'
    AbbreviationsOptionsPresets:
      description: Успех
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AbbreviationsOptionsPreset'
  #============================================================
  # schemas
  #------------------------------------------------------------
  schemas:
    #==============================
    # common
    #------------------------------
    ServerError:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
              description: HTTP-статус.
              example: 500
            title:
              type: string
              description: Описание HTTP-статуса.
              example: Internal Server Error
            message:
              type: string
              description: Краткое описание проблемы.
              example: bad allocation
    Positions:
      type: string
      description: |
        Требуемый формат выдачи позиций:
        - none - позиции не возвращаются;
        - symbol - к результатам добавится массив "symbolPositions" с позициями в символах;
        - token - к результатам добавится массив "tokenPositions" с позициями в токенах;
        - all - к результатам добавятся массивы "symbolPositions" и "tokenPositions" с позициями в символах и токенах соответственно.
      enum: ["none", "symbol", "token", "all"]
      default: "none"
    Position:
      type: object
      description: Позиция в тексте.
      properties:
        begin:
          type: integer
          description: Смещение от начала документа.
          example: 0
        length:
          type: integer
          description: Длина.
          example: 5
    SymbolPositions:
      type: array
      description: Позиции в тексте в символах.
      items:
        $ref: '#/components/schemas/Position'
    TokenPositions:
      type: array
      description: Позиции в тексте в токенах.
      items:
        $ref: '#/components/schemas/Position'
    DocumentExtension:
      type: string
      description: Формат документа или пустая строка, если параметр `content` содержит простой текст без кодировки в Base64.
      enum: [ "",txt, pdf, rtf, html, odt, ppt, pptx, doc, docx]
      default: ""
      example: "txt"
    DocumentEncoding:
      type: string
      description: Кодировка документа в формате "txt". Данный параметр игнорируется, если формат документа не "txt".
      enum: [
        "UTF-8",
        "UTF-16",
        "UTF-16BE",
        "UTF-16LE",
        "UTF-32",
        "UTF-32BE",
        "UTF-32LE",
        "UTF-7",
        "Big5",
        "BOCU-1",
        "CESU-8",
        "cp1363",
        "cp851",
        "ebcdic-xml-us",
        "EUC-JP",
        "EUC-KR",
        "euc-tw-2014",
        "GB18030",
        "GB2312",
        "gsm-03.38-2009",
        "HZ",
        "ibm-1006_P100-1995",
        "ibm-1025_P100-1995",
        "ibm-1026_P100-1995",
        "ibm-1047_P100-1995",
        "ibm-1047_P100-1995,swaplfnl",
        "ibm-1051_P100-1995",
        "ibm-1097_P100-1995",
        "ibm-1098_P100-1995",
        "ibm-1112_P100-1995",
        "ibm-1122_P100-1999",
        "ibm-1123_P100-1995",
        "ibm-1124_P100-1996",
        "ibm-1125_P100-1997",
        "ibm-1129_P100-1997",
        "ibm-1130_P100-1997",
        "ibm-1131_P100-1997",
        "ibm-1132_P100-1998",
        "ibm-1133_P100-1997",
        "ibm-1137_P100-1999",
        "ibm-1140_P100-1997",
        "ibm-1140_P100-1997,swaplfnl",
        "ibm-1141_P100-1997",
        "ibm-1141_P100-1997,swaplfnl",
        "ibm-1142_P100-1997",
        "ibm-1142_P100-1997,swaplfnl",
        "ibm-1143_P100-1997",
        "ibm-1143_P100-1997,swaplfnl",
        "ibm-1144_P100-1997",
        "ibm-1144_P100-1997,swaplfnl",
        "ibm-1145_P100-1997",
        "ibm-1145_P100-1997,swaplfnl",
        "ibm-1146_P100-1997",
        "ibm-1146_P100-1997,swaplfnl",
        "ibm-1147_P100-1997",
        "ibm-1147_P100-1997,swaplfnl",
        "ibm-1148_P100-1997",
        "ibm-1148_P100-1997,swaplfnl",
        "ibm-1149_P100-1997",
        "ibm-1149_P100-1997,swaplfnl",
        "ibm-1153_P100-1999",
        "ibm-1153_P100-1999,swaplfnl",
        "ibm-1154_P100-1999",
        "ibm-1155_P100-1999",
        "ibm-1156_P100-1999",
        "ibm-1157_P100-1999",
        "ibm-1158_P100-1999",
        "ibm-1160_P100-1999",
        "ibm-1162_P100-1999",
        "ibm-1164_P100-1999",
        "ibm-1250_P100-1995",
        "ibm-1251_P100-1995",
        "ibm-1252_P100-2000",
        "ibm-1253_P100-1995",
        "ibm-1254_P100-1995",
        "ibm-1255_P100-1995",
        "ibm-1256_P110-1997",
        "ibm-1257_P100-1995",
        "ibm-1258_P100-1997",
        "ibm-12712_P100-1998",
        "ibm-12712_P100-1998,swaplfnl",
        "ibm-1276_P100-1995",
        "ibm-1363_P110-1997",
        "ibm-1364_P110-2007",
        "ibm-1371_P100-1999",
        "ibm-1373_P100-2002",
        "ibm-1375_P100-2008",
        "ibm-1386_P100-2001",
        "ibm-1388_P103-2001",
        "ibm-1390_P110-2003",
        "ibm-1399_P110-2003",
        "ibm-16684_P110-2003",
        "ibm-16804_X110-1999",
        "ibm-16804_X110-1999,swaplfnl",
        "ibm-273_P100-1995",
        "ibm-277_P100-1995",
        "ibm-278_P100-1995",
        "ibm-280_P100-1995",
        "ibm-284_P100-1995",
        "ibm-285_P100-1995",
        "ibm-290_P100-1995",
        "ibm-297_P100-1995",
        "ibm-33722_P120-1999",
        "ibm-33722_P12A_P12A-2009_U2",
        "ibm-37_P100-1995",
        "ibm-37_P100-1995,swaplfnl",
        "ibm-420_X120-1999",
        "ibm-424_P100-1995",
        "ibm-4517_P100-2005",
        "ibm-4899_P100-1998",
        "ibm-4909_P100-1999",
        "ibm-4971_P100-1999",
        "ibm-500_P100-1995",
        "ibm-5123_P100-1999",
        "ibm-5351_P100-1998",
        "ibm-5352_P100-1998",
        "ibm-5353_P100-1998",
        "ibm-5471_P100-2006",
        "ibm-5478_P100-1995",
        "ibm-803_P100-1999",
        "ibm-813_P100-1995",
        "ibm-838_P100-1995",
        "ibm-8482_P100-1999",
        "ibm-856_P100-1995",
        "ibm-867_P100-1998",
        "ibm-870_P100-1995",
        "ibm-871_P100-1995",
        "ibm-874_P100-1995",
        "ibm-875_P100-1995",
        "ibm-901_P100-1999",
        "ibm-902_P100-1999",
        "ibm-9067_X100-2005",
        "ibm-916_P100-1995",
        "ibm-918_P100-1995",
        "ibm-922_P100-1999",
        "ibm-930_P120-1999",
        "ibm-933_P110-1995",
        "ibm-935_P110-1999",
        "ibm-937_P110-1999",
        "ibm-939_P120-1999",
        "ibm-942_P12A-1999",
        "ibm-943_P130-1999",
        "ibm-949_P110-1999",
        "ibm-949_P11A-1999",
        "ibm-950_P110-1999",
        "ibm-954_P101-2007",
        "ibm-964_P110-1999",
        "ibm-971_P100-1995",
        "IBM00858",
        "IBM850",
        "IBM857",
        "IBM860",
        "IBM861",
        "IBM862",
        "IBM863",
        "IBM864",
        "IBM865",
        "IBM866",
        "IBM868",
        "IBM869",
        "IMAP-mailbox-name",
        "ISO-2022-JP",
        "ISO-2022-JP-1",
        "ISO-2022-JP-2",
        "ISO-2022-KR",
        "ISO-8859-1",
        "ISO-8859-10",
        "ISO-8859-13",
        "ISO-8859-15",
        "ISO-8859-2",
        "ISO-8859-3",
        "ISO-8859-4",
        "ISO-8859-5",
        "ISO-8859-6",
        "ISO-8859-7",
        "ISO-8859-8",
        "ISO-8859-9",
        "iso-8859_11-2001",
        "iso-8859_14-1998",
        "ISO_2022,locale=ja,version=3",
        "ISO_2022,locale=ja,version=4",
        "ISO_2022,locale=ko,version=1",
        "ISO_2022,locale=zh,version=0",
        "ISO_2022,locale=zh,version=1",
        "ISO_2022,locale=zh,version=2",
        "KOI8-R",
        "KSC_5601",
        "LMBCS-1",
        "macintosh",
        "SCSU",
        "Shift_JIS",
        "US-ASCII",
        "windows-1250",
        "windows-1251",
        "windows-1252",
        "windows-1253",
        "windows-1254",
        "windows-1255",
        "windows-1256",
        "windows-1257",
        "windows-1258",
        "windows-21866",
        "windows-437",
        "windows-57002",
        "windows-57003",
        "windows-57004",
        "windows-57005",
        "windows-57007",
        "windows-57008",
        "windows-57009",
        "windows-57010",
        "windows-57011",
        "windows-720",
        "windows-737",
        "windows-775",
        "windows-852",
        "windows-855",
        "windows-874",
        "windows-936",
        "x-mac-centraleurroman",
        "x-mac-cyrillic",
        "x-mac-greek",
        "x-mac-turkish",
        "x11-compound-text"
        ]
      default: "UTF-8"
    DocumentContent:
      type: string
      description: Содержимое документа в кодировке Base64. Пользователь может передавать простой текст без кодировки в Base64, если параметру `extension` присвоено пустое значение.
      example: RWx2aXMgUHJlc2xleSB3YXMgYm9ybiBpbiBUdXBlbG8sIE1pc3Npc3NpcHBp
    Document:
      type: object
      properties:
        extension:
          $ref: '#/components/schemas/DocumentExtension'
        encoding:
          $ref: '#/components/schemas/DocumentEncoding'
        content:
          $ref: '#/components/schemas/DocumentContent'
      required:
        - content
    Documents:
      type: array
      description: Список документов для обработки.
      items:
        $ref: '#/components/schemas/Document'
    DictLanguage:
      type: string
      description: Язык
      enum: [
          "Arabic",
          "Chinese",
          "Chinese-Traditional",
          "Dutch",
          "English",
          "French",
          "German",
          "Greek",
          "Italian",
          "Japanese",
          "Korean",
          "Polish",
          "Portuguese",
          "Russian",
          "Spanish",
          "Thai",
          "Turkish"
        ]
      example: "English"
    DocumentsLanguage:
      type: string
      description: Язык, использовавшийся при индексировании документов. Если запрос не требует индексирования текстов, то значение этого параметра для таких запросов всегда будет являться пустой строкой.
      enum: [
          "",
          "Arabic",
          "Chinese",
          "Chinese-Traditional",
          "Dutch",
          "English",
          "French",
          "German",
          "Greek",
          "Italian",
          "Japanese",
          "Korean",
          "Polish",
          "Portuguese",
          "Russian",
          "Spanish",
          "Thai",
          "Turkish"
        ]
      example: "English"
    DocumentsLanguageParam:
      type: string
      description: Язык документов или специальное значение "auto", которое позволяет серверу самостоятельно определить язык. Если операция не требует индексации документов, то данный параметр игнорируется.
      enum: [
          "auto",
          "Arabic",
          "Chinese",
          "Chinese-Traditional",
          "Dutch",
          "English",
          "French",
          "German",
          "Greek",
          "Italian",
          "Japanese",
          "Korean",
          "Polish",
          "Portuguese",
          "Russian",
          "Spanish",
          "Thai",
          "Turkish"
        ]
      default: "auto"
      example: "English"
    ResourceLanguage:
      type: string
      description: Язык, для которого написан ресурс или специальное значение "Common", если данный ресурс не привязан к языку.
      enum: [
          "Common",
          "Arabic",
          "Chinese",
          "Chinese-Traditional",
          "Dutch",
          "English",
          "French",
          "German",
          "Greek",
          "Italian",
          "Japanese",
          "Korean",
          "Polish",
          "Portuguese",
          "Russian",
          "Spanish",
          "Thai",
          "Turkish"
        ]
      default: "Common"
      example: "English"
    DocumentId:
      type: integer
      description: Индекс документа в переданном массиве документов.
      example: 0
    DocumentsParams:
      type: object
      properties:
        documents:
          $ref: '#/components/schemas/Documents'
      required:
        - documents
    ParseParams:
      allOf:
      - type: object
        properties:
          documentsLanguage:
            $ref: '#/components/schemas/DocumentsLanguageParam'
      - $ref: '#/components/schemas/DocumentsParams'
    OperationParams:
      allOf:
      - type: object
        properties:
          positions:
            $ref: '#/components/schemas/Positions'
      - $ref: '#/components/schemas/ParseParams'
    OperationResult:
      type: object
      properties:
        documentsLanguage:
          $ref: '#/components/schemas/DocumentsLanguage'
        documents:
          type: array
          description: Список документов с их результатами.
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/DocumentId'
    ResourceId:
      type: string
      description: Идентификатор ресурса.
      example: "A0CCEBD4-0245-4228-A224-11FE170D63CD"
    ResourceName:
      type: string
      description: Имя ресурса, по которому на него будут ссылаться в настройках операций.
      default: "New Resource"
      example: "My Resource"
    OperationOptionsPreset:
      type: string
      description: Имя преднастроек операции.
    #==============================
    # server
    #------------------------------
    ServerVersion:
      type: string
      description: Версия сервера.
      example: '2.0'
    ServerPlatform:
      type: string
      description: Платформа сервера.
      enum: [
        "Windows",
        "Linux"
      ]
      example: 'Linux'
    ServerLanguages:
      type: array
      description: Список поддерживаемых языков.
      items:
        $ref: '#/components/schemas/DictLanguage'
    OperationsListItem:
      type: string
      description: Имя операции.
      enum: [
        "abbreviations",
        "anonymized-documents",
        "categories",
        "clusters",
        "chunks",
        "constituency-trees",
        "dependency-trees",
        "domains",
        "entities",
        "facts",
        "fragments",
        "grammar-mistakes",
        "keywords",
        "languages",
        "lemmas",
        "misspellings",
        "parts-of-speech",
        "sentences",
        "sentiments",
        "summaries",
        "tokens",
        "topics",
        "wordforms"
      ]
    ServerOperations:
      description: Список поддерживаемых операций.
      type: array
      items:
        $ref: '#/components/schemas/OperationsListItem'
    ServerInfo:
      type: object
      properties:
        version:
          $ref: '#/components/schemas/ServerVersion'
        platform:
          $ref: '#/components/schemas/ServerPlatform'
        languages:
          $ref: '#/components/schemas/ServerLanguages'
        operations:
          $ref: '#/components/schemas/ServerOperations'
    #==============================
    # limits
    #------------------------------
    LimitsMode:
      type: object
      properties:
        Mode:
          type: string
          description: |
            Режим ограничения количества обработанных TU:
            - Unlimited - Ограничения не установлены
            - Total - Ограничение по общему количеству обработанных TU
            - PerOperation - Ограничение для кажой операции отдельно
          enum: [ Unlimited, Total, PerOperation ]
          example: Total
    NTULimit:
      type: integer
      description: Максимальное количество текстовых единиц.
      example: 250000
    NTU:
      type: integer
      description: Общий счетчик текстовых единиц.
    NTUOperation:
      type: integer
      description: Счетчик текстовых единиц для операции.
    NTUPeriod:
      type: string
      enum: [Second, Minute, Hour, Day, Month]
      description: Период.
    ConstantLimit:
      type: object
      description: Ограничение количества обработанных текстовых единиц за все время использования лицензии.
      properties:
        NTULimit:
          $ref: '#/components/schemas/NTULimit'
        NTU:
          $ref: '#/components/schemas/NTU'
        NTULanguages:
          $ref: '#/components/schemas/NTUOperation'
        NTUTokens:
          $ref: '#/components/schemas/NTUOperation'
        NTULemmas:
          $ref: '#/components/schemas/NTUOperation'
        NTUPartsOfSpeech:
          $ref: '#/components/schemas/NTUOperation'
        NTUWordform:
          $ref: '#/components/schemas/NTUOperation'
        NTUSentences:
          $ref: '#/components/schemas/NTUOperation'
        NTUDependencyTrees:
          $ref: '#/components/schemas/NTUOperation'
        NTUConstituencyTrees:
          $ref: '#/components/schemas/NTUOperation'
        NTUKeywords:
          $ref: '#/components/schemas/NTUOperation'
        NTUEntities:
          $ref: '#/components/schemas/NTUOperation'
        NTUSentiments:
          $ref: '#/components/schemas/NTUOperation'
        NTUFacts:
          $ref: '#/components/schemas/NTUOperation'
        NTUAnonymizedDocuments:
          $ref: '#/components/schemas/NTUOperation'
        NTUClusters:
          $ref: '#/components/schemas/NTUOperation'
        NTUCategories:
          $ref: '#/components/schemas/NTUOperation'
        NTUFragments:
          $ref: '#/components/schemas/NTUOperation'
        NTUSummaries:
          $ref: '#/components/schemas/NTUOperation'
        NTUMisspellings:
          $ref: '#/components/schemas/NTUOperation'
        NTUGrammarMistakes:
          $ref: '#/components/schemas/NTUOperation'
        NTUTopics:
          $ref: '#/components/schemas/NTUOperation'
        NTUDomains:
          $ref: '#/components/schemas/NTUOperation'
        NTUAbbreviations:
          $ref: '#/components/schemas/NTUOperation'
    Period1Limit:
      type: object
      description: Ограничение количества обработанных текстовых единиц за определенный период.
      properties:
        NTUPeriod1:
          $ref: '#/components/schemas/NTUPeriod'
        NTUInPeriod1Limit:
          $ref: '#/components/schemas/NTULimit'
        NTUInPeriod1:
          $ref: '#/components/schemas/NTU'
        NTUInPeriod1Languages:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Tokens:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Lemmas:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1PartsOfSpeech:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Wordforms:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Sentences:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1DependencyTrees:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1ConstituencyTrees:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Keywords:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Entities:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Sentiments:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Facts:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1AnonymizedDocuments:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Clusters:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Categories:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Fragments:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Summaries:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Misspellings:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1GrammarMistakes:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Topics:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Domains:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod1Abbreviations:
          $ref: '#/components/schemas/NTUOperation'
    Period2Limit:
      type: object
      description: Ограничение количества обработанных текстовых единиц за определенный период.
      properties:
        NTUPeriod2:
          $ref: '#/components/schemas/NTUPeriod'
        NTUInPeriod2Limit:
          $ref: '#/components/schemas/NTULimit'
        NTUInPeriod2:
          $ref: '#/components/schemas/NTU'
        NTUInPeriod2Languages:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Tokens:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Lemmas:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2PartsOfSpeech:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Wordforms:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Sentences:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2DependencyTrees:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2ConstituencyTrees:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Keywords:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Entities:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Sentiments:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Facts:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2AnonymizedDocuments:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Clusters:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Categories:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Fragments:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Summaries:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Misspellings:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2GrammarMistakes:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Topics:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Domains:
          $ref: '#/components/schemas/NTUOperation'
        NTUInPeriod2Abbreviations:
          $ref: '#/components/schemas/NTUOperation'
    LimitsTypes:
      anyOf:
        - $ref: '#/components/schemas/ConstantLimit'
        - $ref: '#/components/schemas/Period1Limit'
        - $ref: '#/components/schemas/Period2Limit'
    Limits:
      description: Ограничения на количество обработанных текстовых единиц.
      allOf:
        - $ref: '#/components/schemas/LimitsMode'
        - $ref: '#/components/schemas/LimitsTypes'
    #==============================
    # languages
    #------------------------------
    LanguagesOptions:
      type: object
      description: Настройки определения языка.
      properties:
        languages:
          type: array
          description: Список языков, доступных для определения.
          default: []
          items:
            type: string
            enum: [
              "English",
              "Russian",
              "French",
              "German",
              "Spanish",
              "Italian",
              "Portuguese",
              "Arabic",
              "Thai",
              "Japanese",
              "Chinese",
              "Chinese-traditional",
              "Korean",
              "Dutch",
              "Greek",
              "Polish",
              "Turkish",
              "Czech",
              "Danish",
              "Finnish",
              "Norwegian",
              "Romanian",
              "Slovak",
              "Slovenian",
              "Swedish",
              "Tagalog"
              ]
        languagesFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `languages`, если он пустой.
          default: ".+"
        reliability:
          type: integer
          description: Надежность алгоритма.
          minimum: 0
          maximum: 20
          default: 10
        excludeMinorTokens:
          type: boolean
          description: Исключить незначительные токены из исследования.
          default: false
        minSampleSize:
          type: integer
          description: Минимальный размер семпла.
          minimum: 1
          default: 21
        maxSampleSize:
          type: integer
          description: Максимальный размер семпла.
          minimum: 1
          default: 1000
        minTokenCount:
          type: integer
          description: Минимальное количество токенов.
          minimum: 1
          default: 5
        maxTokenCount:
          type: integer
          description: Максимальное количество токенов.
          minimum: 1
          default: 100
        dictWordsThreshold:
          type: integer
          description: Доля словарных слов для определения языка по словарю.
          minimum: 0
          maximum: 100
          default: 51
        hieroglyphsThreshold:
          type: integer
          description: Доля иероглифов для идентификации иероглифического языка.
          minimum: 0
          maximum: 100
          default: 10
        algorithm:
          type: string
          description: |
            Алгоритм определения языка:<br>
            - ngram - Определение на основе N-грамм;
            - dict - Определение с использованием словарей;
            - all - Использовать все доступные методы.
          enum: ["ngram", "dict", "all"]
          default: "ngram"
    LanguagesParams:
      allOf:
      - type: object
        properties:
          languagesOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          languagesOptions:
            $ref: '#/components/schemas/LanguagesOptions'
      - $ref: '#/components/schemas/DocumentsParams'
    LanguagesOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          languagesOptions:
            $ref: '#/components/schemas/LanguagesOptions'
    LanguagesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                language:
                  $ref: '#/components/schemas/DictLanguage'
    LanguagesOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          languagesOptions:
            $ref: '#/components/schemas/LanguagesOptions'
    LanguagesOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          languagesOptions:
            $ref: '#/components/schemas/LanguagesOptions'
    LanguagesOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          languagesOptions:
            $ref: '#/components/schemas/LanguagesOptions'
    LanguagesOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/LanguagesOptionsPresetsUpdateParamsItem'
    #==============================
    # tokens
    #------------------------------
    Token:
      type: object
      properties:
        word:
          type: string
          description: Слово, как в тексте.
          example: Elvis
        isExtension:
          type: integer
          description: |
            Указывает, написан ли токен в тексте слитно с предыдущим токеном:<br>
            `1` - токен написан слитно с предыдущим токеном;<br>
            `0` - токен написан раздельно от предыдущего токена.
          enum: [0, 1]
          example: 0
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
    Tokens:
      type: array
      description: Токены документа.
      items:
        $ref: '#/components/schemas/Token'
    TokensResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                tokens:
                  $ref: '#/components/schemas/Tokens'
    #==============================
    # lemmas
    #------------------------------
    Lemmas:
      type: array
      description: Леммы соответствующих по индексу токенов из `tokens`.
      items:
        type: string
    LemmasResult:
      allOf:
      - $ref: '#/components/schemas/TokensResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                lemmas:
                  $ref: '#/components/schemas/Lemmas'
    #==============================
    # parts of speech
    #------------------------------
    PartOfSpeech:
      type: string
      description: Часть речи.
      enum: [
        "Noun",
        "Verb",
        "Adverb",
        "Adjective",
        "Particle",
        "Pronoun",
        "Numeral",
        "Special",
        "Punctuation"
        ]
      example: Noun
    Modifier:
      type: object
      description: Грамматические категории слова.
      properties:
        partOfSpeech:
          type: string
          description: Часть речи.
          enum: [
            "Noun",
            "Verb",
            "Adverb",
            "Adjective",
            "Pronoun",
            "Numeral",
            "Special",
            "Punctuation",
            "Particle",
            "Article",
            "Preposition",
            "Interjection",
            "Conjunction",
            "Invariant",
            "Predicative"
            ]
        category:
          type: string
          description: Категория.
          enum: [
            "",
            "PronounPossessive",
            "PronounDemonstrative",
            "PronounRelative",
            "PronounInterrogative",
            "Reflexive",
            "PronounNegative",
            "PronounIndefinite",
            "PronounPersonal",
            "PronounDefinite",
            "NumeralOrdinal",
            "NumeralCardinal",
            "VerbImpersonal",
            "Modal",
            "Auxiliary",
            "AdjectiveQualitative",
            "AdjectivePossessive",
            "ArticleDefinite",
            "ArticleIndefinite",
            "ArticleContracted",
            "ConjunctionCoordinating",
            "ConjunctionSubordinating",
            "Negative",
            "ParticleInfinitivalTo",
            "ParticleVerbal",
            "Focus",
            "Proper",
            "Classifier"
            ]
        number:
          type: string
          description: Число.
          enum: [
            "",
            "Singular",
            "Plural",
            "Dual",
            "Collective"
            ]
        person:
          type: string
          description: Лицо.
          enum: [
            "",
            "PersonFirst",
            "PersonSecond",
            "PersonThird"
            ]
        gender:
          type: string
          description: Род.
          enum: [
            "",
            "Masculine",
            "Neutral",
            "Feminine"
            ]
        short:
          type: string
          description: Краткая форма.
          enum: [
            "",
            "ShortYes",
            "ShortNo"
            ]
        degree:
          type: string
          description: Степень сравнения.
          enum: [
            "",
            "DegreePositive",
            "DegreeComparative",
            "DegreeSuperlative"
            ]
        animate:
          type: string
          description: Одушевленность.
          enum: [
            "",
            "AnimateYes",
            "AnimateNo"
            ]
        case:
          type: string
          description: Падеж.
          enum: [
            "",
            "CaseNominative",
            "CaseGenitive",
            "CaseDative",
            "CaseAccusative",
            "CaseInstrumental",
            "CasePrepositional",
            "CaseLocative",
            "CaseVocative",
            "CaseCommon",
            "CaseObjective",
            "CasePartitive",
            "CaseComitative",
            "CaseAblative",
            "CaseLimitative",
            "CaseTerminative",
            "CaseAllative",
            "CaseAdverbial"
            ]
        tense:
          type: string
          description: Время.
          enum: [
            "",
            "Present",
            "Past",
            "Future"
            ]
        verbForm:
          type: string
          description: Форма глагола.
          enum: [
            "",
            "Finite",
            "Infinitive",
            "Participle",
            "AdverbParticiple",
            "QuasiParticiple"
            ]
        mood:
          type: string
          description: Наклонение.
          enum: [
            "",
            "Indicative",
            "Imperative",
            "Impellative",
            "Conditional",
            "Conjunctive",
            "Potential",
            "Jussive"
            ]
        transitivity:
          type: string
          description: Переходность.
          enum: [
            "",
            "TransitivityYes",
            "TransitivityNo"
            ]
        aspect:
          type: string
          description: Вид.
          enum: [
            "",
            "AspectPerfect",
            "AspectImperfect"
            ]
        voice:
          type: string
          description: Залог.
          enum: [
            "",
            "VoiceActive",
            "VoicePassive"
            ]
        honorificity:
          type: string
          description: Гоноратив.
          enum: [
            "",
            "Honorific",
            "Humble"
            ]
        clause:
          type: string
          description: Категория типа клаузы предикации.
          enum: [
            "",
            "StatementClause",
            "QuestionClause",
            "ConfirmationClause",
            "CommandClause",
            "SuggestionClause"
            ]
        speechLevel:
          type: string
          description: Стиль общения.
          enum: [
            "",
            "PlainSpeech",
            "IntimateSpeech",
            "PoliteSpeech",
            "DeferentialSpeech"
            ]
        clitic:
          type: string
          description: Категория типа клитиков.
          enum: [
            "",
            "Topic",
            "Additive",
            "ConjunctionForm",
            "Enclitic",
            "Proclitic",
            "Enclinomen"
            ]
        state:
          type: string
          description: Категория определенности имени в арабском.
          enum: [
            "",
            "StateDefinite",
            "StateIndefinite",
            "StateConstruct",
            "StateConstructVerbal"
            ]
    PartsOfSpeechItem:
      type: object
      properties:
        partOfSpeech:
          $ref: '#/components/schemas/PartOfSpeech'
        modifier:
          $ref: '#/components/schemas/Modifier'
    PartsOfSpeech:
      type: array
      description: Морфологические признаки соттветствующих по индексу токенов из `tokens`.
      items:
        $ref: '#/components/schemas/PartsOfSpeechItem'
    Lexeme:
      type: object
      description: Лексема.
      properties:
        norm:
          type: string
          description: Нормальная форма слова.
        partOfSpeech:
          $ref: '#/components/schemas/PartOfSpeech'
    PartsOfSpeechResult:
      allOf:
      - $ref: '#/components/schemas/TokensResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                partsOfSpeech:
                  $ref: '#/components/schemas/PartsOfSpeech'
    #==============================
    # wordforms
    #------------------------------
    Wordform:
      type: object
      description: Словоформа.
      properties:
        word:
          type: string
          description: Слово.
        modifier:
          $ref: '#/components/schemas/Modifier'
    LexemeWordforms:
      type: object
      properties:
        lexeme:
          $ref: '#/components/schemas/Lexeme'
        forms:
          type: array
          description: Список словоформ лексемы.
          items:
            $ref: '#/components/schemas/Wordform'
    WordformsItem:
      type: array
      items:
        $ref: '#/components/schemas/LexemeWordforms'
    Wordforms:
      type: array
      description: Морфологические признаки соттветствующих по индексу токенов из `tokens`.
      items:
        $ref: '#/components/schemas/WordformsItem'
    WordformsOptions:
      type: object
      description: Настройки генерации словоформ.
      properties:
        useMorphoAnalyzer:
          type: boolean
          description: Если данная опция включена и в словарях не найдены соответствующие словоформы для данного токена, то программа попытается сгенерировать словоформы на основе статистического алгоритма.
    WordformsParams:
      allOf:
      - type: object
        properties:
          wordformsOptions:
            $ref: '#/components/schemas/WordformsOptions'
      - $ref: '#/components/schemas/DocumentsParams'
    WordformsResult:
      allOf:
      - $ref: '#/components/schemas/TokensResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                wordforms:
                  $ref: '#/components/schemas/Wordforms'
    #==============================
    # sentences
    #------------------------------
    Sentence:
      type: object
      properties:
        text:
          type: string
          description: Текст предложения.
          example: "Elvis Presley was born in Tupelo, Mississippi."
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    Sentences:
      type: array
      description: Отдельные предложения в документе.
      items:
        $ref: '#/components/schemas/Sentence'
    SentencesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                sentences:
                  $ref: '#/components/schemas/Sentences'
    #==============================
    # chunks
    #------------------------------
    ChunksResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                chunks:
                  $ref: '#/components/schemas/Chunks'
    Chunks:
      type: array
      description: Фрагменты текста.
      items:
        type: object
        properties:
          chunk:
            $ref: '#/components/schemas/Chunk'
          type:
            $ref: '#/components/schemas/ChunkType'
          symbolPositions:
            $ref: '#/components/schemas/SymbolPositions'
          tokenPositions:
            $ref: '#/components/schemas/TokenPositions'
    Chunk:
      type: string
      description: Отдельный фрагмент.
      example: "Elvis Presley"
    ChunkType:
      type: string
      description: Тип фрагмента.
      enum: [Np, Vp, Jp, Rp, Pp, Sp]
      example: "Np"
    #==============================
    # dependency trees
    #------------------------------
    DependencyTree:
      type: object
      description: Дерево зависимостей.
      properties:
        position:
          type: integer
          description: Позиция токена в предложении или -1 для корневого элемента.
        word:
          type: string
          description: Слово, как в предложении.
        relation:
          type: string
          description: |
            Отношение родителя к данному узлу или пустое значение для корня. Виды отношений (для английского языка):
            - ADV - Наречие;
            - AMOD - Модификатор прилагательного или наречия;
            - APPO - Приложение;
            - BNF - Бенефециарное дополнение (предлог "for") в дательном сдвиге;
            - CONJ - Второй соединительный член (в зависимости от союза);
            - COORD - Согласование;
            - DEP - Неклассифицированная зависимость;
            - DIR - Обстоятельства направления;
            - DTV - Дативное дополнение (с предлогом "to") в дательном сдвиге;
            - EXT - Наречие степени;
            - IM - Неопределённая форма глагола (в зависимости от маркера инфинитива "to");
            - LGS - Логический субъект пассивного глагола;
            - LOC - Модификатор локативного наречия или именного слова;
            - MNR - Наречие образа действия;
            - NAME - Внутренняя именная связь;
            - NMOD - Именное обстоятельство;
            - OBJ - Объект;
            - OPRD - Предикативное дополнение глагола возводящей конструкции/глагола контрольной конструкции (т.е. конструкции, в которой понимаемый субъект данного предиката определяется некоторым выражением в контексте);
            - P - Пунктуация;
            - PMOD - Модификатор предлога;
            - POSTHON - Постгоноративный модификатор именного слова;
            - PRD - Предикативное дополнение;
            - PRN - Вводная конструкция;
            - PRP - Наречие цели или причины;
            - PRT - Частица (как часть фразового глагола);
            - ROOT - Корень;
            - SBJ - Субъект;
            - SUB - Подчинительное предложение (в зависимости от подчинительного союза);
            - TITLE - Заглавие (в зависимости от имени);
            - TMP - Временное наречие или именное слово;
            - VC - Глагольная цепочка.

            Отношение родителя к данному узлу. Виды отношений (для русского языка):
            - ROOT - Указывает на корневой узел предложения. Корнем считается сказуемое или, если сказуемое отсутствует (например, при эллипсисе), крайнее левое зависимое слово.
            - acl - Определительное придаточное – финитая или нефинитная клауза, модифицирующая некоторое имя.
            - acl:relcl - Финитная относительная клауза, модифицирующая некоторое существительное. Связь проводится от определяемого существительного к главному слову относительной клаузы.
            - advcl - Обстоятельственное придаточное, модифицирующее сказуемое.
            - advmod - Наречие или наречная группа, не входящие в состав обстоятельственной клаузы и служащие для уточнения смысла некоторого слова.
            - amod - Определением считается любое адъективное словосочетание, служащее для уточнения смысла некоторого существительного.
            - appos - Приложение – следующее непосредственно за существительным имя, которое его определяет или модифицирует.
            - aux - Служебная часть речи (обычно глагол) связана с глагольным сказуемым и отражает такие его категории, как время, наклонение, вид, залог или эвиденциональность.
            - case - Предлоги, считающиеся зависимыми от существительного, к которому они приставлены.
            - cc - Связь между конъюнктом и предшествующим ему сочинительным союзом. Первый конъюнкт является главным словом в сочинительной связи.
            - ccomp - Придаточное изъяснительное, относящееся к глаголу или прилагательному и выступающее их дополнением.
            - conj - Сочинение – отношение между двумя элементами, соединенными сочинительным союзом (таким как "и", "или"), запятой или другим знаком препинания. Главным словом в этих отношениях выступает первый конъюнкт.
            - cop - Этим отношением отмечается связочный глагол или слово-вставка, не выполняющие семантическую роль позиции, на которой они стоят. Например, глагол-связка "быть" зависит от собственного комплемента.
            - xcomp - Связь от вспомогательной части глагольного или именного сказуемого к основной, не имеющей своего собственного подлежащего.
            - det - Отношение "детерминатив" проводится между ведущим именем и модифицирующими его местоименными прилагательными.
            - fixed - Используется для определенных фиксированных грамматизированных выражений. Фиксированные выражения, состоящие из нескольких слов, отражаются в виде линейной структуры, где все последующие слова связаны с первым.
            - flat - Используется для связывания прилагательных с существительными в рамках многословных названий мест, организаций, имен, должностей или дат. Главным всегда является крайнее левое название. 
            - iobj - Косвенное дополнение – это любая именная группа, представляющая собой ядерный компонент сказуемого, но не являющаяся его подлежащим или прямым дополнением.  
            - mark - Указатель – это подчинительный союз, который вводит финитную клаузу, подчиненную главной клаузе.
            - nmod - Определение, выраженное существительным или словосочетанием во главе с существительным, которое зависит от другого существительного.
            - nsubj - Существительное или словосочетание во главе с существительным, играющее синтаксическую роль подлежащего в простом предложении. Связь проводится от глагола.
            - nummod - Определение, выраженное количественным или счетным числительным, которое служит модификатором значения существительного в терминах количества. Главным в этом отношении всегда выступает существительное.
            - obj - Прямое дополнение глагола, выраженное винительным падежом. Словосочетание во главе с существительным, обозначающее сущность, на которую направлено действие. 
            - obl - Отношение связывает сказумое с его неядерными зависимыми компонентами.
            - obl:agent - Связь между глаголом в пассивном залоге и его агенсом. 
            - punct - Обозначает любой знак препинания в простом предложении. Связь проводится от знаменательных слов к знакам препинания. Знаки не могут иметь зависимых слов.
            - parataxis - Паратаксис – это отношение, связывающее слово с выражением в скобках, или клаузой, следующей за ":" или ";", если они следуют друг за другом без явной сочинительной, подчинительной или предикативной связи с главным словом. 
            - orphan - Нулевой элемент эллипсиса, возникающий в случаях удаления неначальной клаузы или её вершины, при котором опускается сказуемое.
            - dep - Неустановленная зависимость (если невозможно определить зависимость более точно).
          enum:
            -
            - ABOUTV
            - ABOVEV
            - ACCORDINGWITHV
            - ADV
            - ADVERBPARTICIPLEV
            - AFTERV
            - AGAINSTV
            - AINSV_R
            - ALONGV
            - AMOD
            - AN_L
            - AN_NUM_L
            - AN_R
            - APPO
            - AROUNDV
            - ASSUCHPL_R
            - ATIME_L
            - AVAUX_R
            - BECAUSEOFV
            - BEFOREV
            - BETWEENV
            - BEYONDV
            - BNF
            - BYV
            - COMADVNUMBER_L
            - CONJ
            - CONJINFINITIVEINFINITIVE_L
            - CONJTHATV_R
            - CONJUNCTIVE_MOOD
            - COORD
            - DATEPRE_R
            - DATEV
            - DEMONSTRACCV_R
            - DEMONSTRDATV_R
            - DEMONSTRGENV_R
            - DEMONSTRINSV_R
            - DEMONSTRPRE_R
            - DEP
            - DESPITEV
            - DIR
            - DTV
            - EXCEPTV
            - EXT
            - FOLLOWINGV
            - FORV
            - FROMBENEATHV
            - FROMV
            - IM
            - INFINITEVESHORT
            - INFINITEVEV
            - INFINITEVEWILL
            - INFINITIVEN_R
            - INFINITIVEPREDICATIVE
            - INSIDEV
            - INSTEADV
            - INTERROGATIVEGENN_R
            - INTERROGATIVEPREDICATE_L
            - INTHEMIDDLEOFV
            - INTRODUCTORYV
            - INV
            - IZOV
            - LGS
            - LIKEV
            - LOC
            - MIMOV
            - MNR
            - MORENUMBER_L
            - NACCV
            - NAME
            - NCARDINALNOM_R
            - NDATA
            - NDATN_R
            - NDATN_RARE_R
            - NDATV
            - NEARV
            - NGENA
            - NGENN_R
            - NGENV
            - NINSA
            - NINSN_R
            - NINSV
            - NMOD
            - NNNOM_R
            - NNOMBE
            - NNUMBER_R
            - NN_R
            - NOTA_L
            - NOTN_L
            - NOTR_L
            - NOTV_L
            - NPRED
            - NPRE_R
            - NUMN_R
            - NUMTIME_L
            - NUNDEFCASEAS_R
            - OBJ
            - ONV
            - OPPOSITEV
            - OPRD
            - ORDINALN_L
            - ORDINALN_L
            - OUTSIDEV
            - OVERV
            - P
            - PERSONALGENN_R
            - PMOD
            - POSTHON
            - POV
            - PRD
            - PREA
            - PREASHO
            - PREBARENUMBER_R
            - PREN_R
            - PRER_R
            - PREV
            - PRIV
            - PRN
            - PRONPOSESSN
            - PRP
            - PRT
            - RA_L
            - RELACCV_L
            - RELDATV_L
            - RELGENV_L
            - RELINSV_L
            - RMUST
            - ROOT
            - RPRE_L
            - RR_L
            - RV_L
            - RV_R
            - SBJ
            - SUB
            - THANKSV
            - THATPRE_R
            - THROUGHV
            - TITLE
            - TMP
            - TOINSIDEV
            - TOV
            - UNDERV
            - UV
            - VALUEV
            - VC
            - WITHOUTV
            - WITHV
            - _COOCON_L
            - _COOCON_R
        children:
          type: array
          description: Дочерние узлы
          items:
            $ref: '#/components/schemas/DependencyTree'
    DependencyTrees:
      type: array
      description: Список деревьев зависимостей.
      items:
        $ref: '#/components/schemas/DependencyTree'
    DependencyTreesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                dependencyTrees:
                  $ref: '#/components/schemas/DependencyTrees'
    #==============================
    # constituency trees
    #------------------------------
    ConstituencyTree:
      type: object
      description: Дерево составляющих.
      properties:
        position:
          type: integer
          description: Позиция токена в предложении или -1 для корневого элемента.
        word:
          type: string
          description: Слово, как в предложении.
        relation:
          type: string
          description: |
            Отношение родителя к данному узлу. Виды отношений:

            Уровень простого предложения:
            - S - Простое утвердительное предложение, т.е. то, которое не вводится (возможно отсутствующим) подчинительным союзом или wh-словом и не выражает инверсию субъекта и глагола.
            - SBAR - Простое предложение, которое вводится (возможно отсутствующим) подчинительным союзом.
            - SBARQ - Прямой вопрос, который вводится wh-словом или wh-фразой. Косвенные вопросы и относительные придаточные положения должны быть отмечены как SBAR, а не SBARQ.
            - SINV - Инвертированное повествовательное предложение, т.е. то, в котором субъект следует после изменяемого глагола или модального глагола.
            - SQ - Инвертированный общий вопрос, или главное предложение wh-вопроса, следующее за wh-группой в SBARQ.

            Уровень фразы:
            - ADJP - Адъективная группа.
            - ADVP - Наречная группа.
            - CONJP - Союзная группа.
            - FRAG - Фрагмент.
            - INTJ - Междометие. Примерно соответствует тегу части речи UH.
            - LST - Маркер списка. Включает в себя пунктуационные знаки рядом.
            - NAC - Не составной элемент; используется для выражение определенного диапазона преноминальных модификаторов внутри именной группы (NP).
            - NP - Именная группа.
            - NX - Используется внутри определенных именных групп (NP) для обозначения вершины именной группы. Очень приблизительно соответствует уровню N-штрих, но используется совершенно по-другому.
            - PP - Предложная группа.
            - PRN - Вводная фраза.
            - PRT - Частица. Для слов, которые должны быть отмечены отношением RP (см. Уровень слова).
            - QP - Количественная группа (комплексное измерение/числовая группа); используется внутри NP (именной группы).
            - RRC - Сокращённое относительное придаточное предложение.
            - UCP - Неоднородная согласованная группа.
            - VP - Глагольная группа.
            - WHADJP - Wh-адъективная группа. Адъективная группа, которая содержит wh-наречие, например, "how hot" (как горячо).
            - WHAVP - Wh-наречная группа. Вводит простое предложение с пропуском именной группы. Может быть пустым (нулевой комплементатор) или иметь при себе слово, т.е. wh-наречие, например, "how" или "why".
            - WHNP - Wh-именная группа. Вводит простое предложение с пропуском именной группы. Может быть пустым (нулевой комплементатор) или иметь при себе wh-слово, например, "who", "which book", "whose daughter", "none of which" или "how many leopards".
            - WHPP - Wh-предложная группа. Предложная группа с wh-именной группой внутри (например, "which" или "by whose authority"), которая или вводит PP-пробел, или содержится в WHNP.
            - X - Неизвестное, неопределенное или неразборчивое. Часто используется для группирования опечаток и the-конструкций.

            Уровень слова:
            - CC - Соединительный союз
            - CD - Количественное числительное
            - DT - Детерминатив
            - EX - Экзистенциальный "there" (т.е. использование "there" в качестве указателя на существование объекта, а не на его местоположение)
            - FW - Иностранное слово
            - IN - Предлог или подчинительный cоюз
            - JJ - Прилагательное
            - JJR - Прилагательное, сравнительная степень
            - JJS - Прилагательное, превосходная степень
            - LS - Маркер элемента списка
            - MD - Модальный глагол
            - NN - Существительное, единственное число или неисчисляемое
            - NNS - Существительное, множественное число
            - NNP - Имя собственное, единственное число
            - NNPS - Имя собственное, множественное число
            - PDT - Предетерминатив
            - POS - Притяжательное окончание
            - PRP - Личное местоимение
            - PRP$ - Притяжательное местоимение
            - RB - Наречие
            - RBR - Наречие, сравнительная степень
            - RBS - Наречие, превосходная степень
            - RP - Частица
            - SYM - Символ
            - TO - Предлог "to"
            - UH - Междометие
            - VB - Глагол, базовая форма
            - VBD - Глагол, прошедшее время
            - VBG - Глагол, герундий или причастие настоящего времени
            - VBN - Глагол, причастие прошедшего времени
            - VBP - Глагол, не 3-е лицо единственного числа настоящего времени
            - VBZ - Глагол, 3-е лицо единственного числа настоящего времени
            - WDT - Wh-определяющее слово
            - WP - Wh-местоимение
            - WP$ - Притяжательное wh-местоимение
            - WRB - Wh-наречие
          enum: [
            "S",
            "SBAR",
            "SBARQ",
            "SINV",
            "SQ",
            "ADJP",
            "ADVP",
            "CONJP",
            "FRAG",
            "INTJ",
            "LST",
            "NAC",
            "NP",
            "NX",
            "PP",
            "PRN",
            "PRT",
            "QP",
            "RRC",
            "UCP",
            "VP",
            "WHADJP",
            "WHAVP",
            "WHNP",
            "WHPP",
            "X",
            "CC",
            "CD",
            "DT",
            "EX",
            "FW",
            "IN",
            "JJ",
            "JJR",
            "JJS",
            "LS",
            "MD",
            "NN",
            "NNS",
            "NNP",
            "NNPS",
            "PDT",
            "POS",
            "PRP",
            "PRP$",
            "RB",
            "RBR",
            "RBS",
            "RP",
            "SYM",
            "TO",
            "UH",
            "VB",
            "VBD",
            "VBG",
            "VBN",
            "VBP",
            "VBZ",
            "WDT",
            "WP",
            "WP$",
            "WRB"
            ]
        children:
          type: array
          description: Дочерние узлы.
          items:
            $ref: '#/components/schemas/DependencyTree'
    ConstituencyTrees:
      type: array
      description: Список деревьев составляющих.
      items:
        $ref: '#/components/schemas/ConstituencyTree'
    ConstituencyTreesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                constituencyTrees:
                  $ref: '#/components/schemas/ConstituencyTrees'
    #==============================
    # keywords
    #------------------------------
    Keyword:
      type: object
      properties:
        keyword:
          type: string
          description: Нормализованное ключевое слово.
          example: corn
        negated:
          type: boolean
          description: Булевое значение, которое указывает, отрицается ли данное слово. Если параметр определения отрицаний не включен (analyzeNegations имеет значение "false"), то значение будет `null`.
          nullable: true
          example: false
        partOfSpeech:
          type: string
          description: Часть речи.
          enum: [Noun, Verb, Adverb, Adjective]
          example: Noun
        significance:
          type: number
          description: |
            Значимость ключевого слова в тексте.
            Значение в диапазоне от 0,00 до 100,00.
          example: 100
        support:
          type: integer
          description: Количество документов, которые содержат данное слово.
          example: 1
        frequency:
          type: integer
          description: Общее количество раз, при котором это слово встретилось в документах.
          example: 1
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    Keywords:
      type: array
      description: Список ключевых слов.
      items:
        $ref: '#/components/schemas/Keyword'
    KeywordsOptions:
      type: object
      description: Настройки извлечения ключевых слов.
      properties:
        partsOfSpeech:
          type: array
          description: Список частей речи.
          default: ["Noun", "Verb", "Adverb", "Adjective"]
          items:
            type: string
            enum: ["Noun", "Verb", "Adverb", "Adjective"]
        analyzeNegations:
          type: boolean
          description: Определение отрицаний.
          default: true
        mergeSingleroot:
          type: boolean
          description: Объединение однокоренных слов.
          default: false
        findDictSynonyms:
          type: boolean
          description: Объединение синонимов.
          default: true
        findDictPhrases:
          type: boolean
          description: Поиск словарных фраз.
          default: true
        findNonDictPhrases:
          type: boolean
          description: Поиск несловарных фраз.
          default: true
        nonDictPhraseLenMax:
          type: integer
          description: Максимальная длина несловарных фраз.
          minimum: 2
          maximum: 100
          default: 3
        findPhrasesOnly:
          type: boolean
          description: Извлекать только фразы.
          default: false
        filter:
          type: object
          description: Параметры фильтрации.
          properties:
            negations:
              type: boolean
              description: Фильтрация отрицаний.
              default: true
            junk:
              type: boolean
              description: Фильтрация "мусора".
              default: false
            unusualCapitalization:
              type: boolean
              description: Фильтрация нехарактерно капитализированных фраз.
              default: false
            termsInURLs:
              type: boolean
              description: Фильтрация слов из URL.
              default: false
            nonAlphabetic:
              type: boolean
              description: Фильтрация слов с неалфавитными символами.
              default: false
            subkeywords:
              type: boolean
              description: Фильтрация слов, входящих в другие ключевые слова.
              default: false
            unknownTermsOnly:
              type: boolean
              description: Фильтрация только неизвестных слов.
              default: false
            knownTermsOnly:
              type: boolean
              description: Фильтрация только известных слов.
              default: false
    KeywordsParams:
      allOf:
      - type: object
        properties:
          keywordsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          keywordsOptions:
            $ref: '#/components/schemas/KeywordsOptions'
      - $ref: '#/components/schemas/OperationParams'
    KeywordsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          keywordsOptions:
            $ref: '#/components/schemas/KeywordsOptions'
    KeywordsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                keywords:
                  $ref: '#/components/schemas/Keywords'
    KeywordsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          keywordsOptions:
            $ref: '#/components/schemas/KeywordsOptions'
    KeywordsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          keywordsOptions:
            $ref: '#/components/schemas/KeywordsOptions'
    KeywordsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          keywordsOptions:
             $ref: '#/components/schemas/KeywordsOptions'
    KeywordsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/KeywordsOptionsPresetsUpdateParamsItem'
    #==============================
    # entities
    #------------------------------
    Entity:
      type: object
      properties:
        type:
          type: string
          description: Тип сущности.
          example: People
        attributes:
          type: object
          description: Атрибуты сущности. Список зависит от типа сущности.
          additionalProperties: true
          example:
            "Name": "Elvis Presley"
            "FirstName": "Elvis"
            "MiddleName": ""
            "LastName": "Presley"
            "NickName": ""
            "Attribute": ""
            "Postfix": ""
            "Age": null
            "Gender": "Male"
            "Confidence": 0.9
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    Entities:
      type: array
      description: Список сущностей.
      items:
        $ref: '#/components/schemas/Entity'
    XpdlRule:
      type: array
      description: Строки XPDL-правила. Все строки в массиве перед выполнением конкатенируются в одно XPDL-правило через перенос строки.
      default: []
      example: [
        "rule: Nouns {",
        "    query: {lemma(noun)}:noun",
        "    result: Match = $noun",
        "}"
      ]
      items:
        type: string
    XpdlEntity:
      type: object
      description: Описание XPDL-сущности.
      properties:
        name:
          type: string
          description: Имя XPDL-сущности.
        rule:
          $ref: '#/components/schemas/XpdlRule'
    EntitiesResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - type: object
          properties:
            rule:
              $ref: '#/components/schemas/XpdlRule'
    EntitiesOptions:
      type: object
      description: Настройки извлечения сущностей.
      properties:
        entities:
          type: array
          description: Список стандартных сущностей, которые нужно извлекать.
          default: []
          items:
            type: string
        entitiesFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `entities`, если он пустой.
          default: ".+"
        customEntities:
          type: array
          description: Список пользовательских сущностей, которые нужно извлекать.
          default: []
          items:
            type: string
        customEntitiesFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `customEntities`, если он пустой.
          default: ""
        extraEntities:
          type: array
          description: Список дополнительных сущностей, которые нужно извлекать. В отличии от списка `customEntities` здесь описываются XPDL-правила сущностей, а не ссылаются на ресурсы.
          default: []
          items:
            $ref: '#/components/schemas/XpdlEntity'
        entitiesSet:
          type: string
          description: Набор стандартных сущностей, с которыми нужно работать.
          enum: ["General", "Medicine"]
          default: "General"
    EntitiesParams:
      allOf:
      - type: object
        properties:
          entitiesOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          entitiesOptions:
            $ref: '#/components/schemas/EntitiesOptions'
      - $ref: '#/components/schemas/OperationParams'
    EntitiesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                entities:
                  $ref: '#/components/schemas/Entities'
    EntitiesOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          entitiesOptions:
            $ref: '#/components/schemas/EntitiesOptions'
    EntitiesOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          entitiesOptions:
            $ref: '#/components/schemas/EntitiesOptions'
    EntitiesOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          entitiesOptions:
            $ref: '#/components/schemas/EntitiesOptions'
    EntitiesOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          entitiesOptions:
            $ref: '#/components/schemas/EntitiesOptions'
    EntitiesOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/EntitiesOptionsPresetsUpdateParamsItem'
    EntitiesResourceCreateParams:
      allOf:
      - $ref: '#/components/schemas/ResourceCreateParams'
      - type: object
        properties:
          rule:
            $ref: '#/components/schemas/XpdlRule'
    EntitiesResourceUpdateParams:
      allOf:
      - $ref: '#/components/schemas/ResourceUpdateParams'
      - type: object
        properties:
          rule:
             $ref: '#/components/schemas/XpdlRule'
    EntitiesResourcesUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/ResourcesUpdateParamsItem'
      - type: object
        properties:
          rule:
            $ref: '#/components/schemas/XpdlRule'
    EntitiesResourcesUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/EntitiesResourcesUpdateParamsItem'
    #==============================
    # sentiments
    #------------------------------
    SentimentAttributes:
      type: object
      description: Атрибуты сентимента.
      properties:
        Subject:
          type: string
          description: Человек или группа людей, чье мнение описывается. Не всегда упоминается в тексте.
          example: ""
        Evaluation:
          type: string
          description: Эмоциональное отношение человека к чему-либо.
          example: "great"
        Object:
          type: string
          description: Объект, отношение к которому описывается. Не всегда упоминается в тексте.
          example: "burger"
        HeadObject:
          type: string
          description: Главное слово из описания объекта.
          example: "burger"
        Degree:
          type: integer
          minimum: -5
          maximum: 5
          description: |
                Степень положительного отношения от 1 до 5 (1 - более менее положительное 5 - очень положительное) и отрицательного отношения от -1 до -5 (-1 - более менее отрицательное, -5 - очень отрицательное).
          example: 4
        Aspect:
          type: string
          description: Слово или фраза, которая определяет, какие характеристики объекта описываются.
          example: "Food and Beverage"
        Confidence:
          type: number
          minimum: 0
          maximum: 1
          description: Числовое выражение, которое показывает, насколько алгоритм "уверен" в корректности данного вывода.
          example: 0.8
    Sentiment:
      type: object
      properties:
        type:
          type: string
          description: Тип сентимента.
          enum: [Positive, Negative]
          example: Positive
        attributes:
          $ref: '#/components/schemas/SentimentAttributes'
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    Sentiments:
      type: array
      description: Список сентиментов.
      items:
        $ref: '#/components/schemas/Sentiment'
    SentimentsOptions:
      type: object
      description: Настройки извлечения сентиментов.
      properties:
        sentiments:
          type: array
          description: Список стандартных сентиментов, которые нужно извлекать.
          default: []
          items:
            type: string
        sentimentsFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `sentiments`, если он пустой.
          default: ".+"
        customSentiments:
          type: array
          description: Список пользовательских сущностей, которые нужно извлекать.
          default: []
          items:
            type: string
        customSentimentsFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `customSentiments`, если он пустой.
          default: ""
        extraSentiments:
          type: array
          description: Список дополнительных сентиментов, которые нужно извлекать. В отличии от списка `customSentiments` здесь описываются XPDL-правила сентиментов, а не дается ссылка на ресурсы.
          default: []
          items:
            $ref: '#/components/schemas/XpdlEntity'
        domain:
          type: string
          description: Домен сентиментов.
          default: "General"
    SentimentsParams:
      allOf:
      - type: object
        properties:
          sentimentsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          sentimentsOptions:
           $ref: '#/components/schemas/SentimentsOptions'
      - $ref: '#/components/schemas/OperationParams'
    SentimentsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                sentiments:
                  $ref: '#/components/schemas/Sentiments'
    SentimentsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          sentimentsOptions:
            $ref: '#/components/schemas/SentimentsOptions'
    SentimentsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          sentimentsOptions:
            $ref: '#/components/schemas/SentimentsOptions'
    SentimentsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          sentimentsOptions:
            $ref: '#/components/schemas/SentimentsOptions'
    SentimentsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          sentimentsOptions:
            $ref: '#/components/schemas/SentimentsOptions'
    SentimentsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/SentimentsOptionsPresetsUpdateParamsItem'
    #==============================
    # facts
    #------------------------------
    Fact:
      type: object
      properties:
        type:
          type: string
          description: Тип факта.
          example: Occupation
        attributes:
          type: object
          description: Атрибуты факта. Список зависит от типа факта.
          additionalProperties: true
          example:
            "Person": "Elvis Presley"
            "Occupation": "American singer"
            "Confidence": 1
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    Facts:
      type: array
      description: Список фактов.
      items:
        $ref: '#/components/schemas/Fact'
    FactsOptions:
      type: object
      description: Настройки извлечения фактов.
      properties:
        facts:
          type: array
          description: Список стандартных фактов, которые нужно извлекать.
          default: []
          items:
            type: string
        factsFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `facts`, если он пустой.
          default: ".+"
        customFacts:
          type: array
          description: Список пользовательских фактов, которые нужно извлекать.
          default: []
          items:
            type: string
        customFactsFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `customFacts`, если он пустой.
          default: ""
        extraFacts:
          type: array
          description: Список дополнительных фактов, которые нужно извлекать. В отличии от списка `customFacts` здесь описываются XPDL-правила фактов, а не дается ссылка на ресурсы.
          default: []
          items:
            $ref: '#/components/schemas/XpdlEntity'
    FactsParams:
      allOf:
      - type: object
        properties:
          factsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          factsOptions:
            $ref: '#/components/schemas/FactsOptions'
      - $ref: '#/components/schemas/OperationParams'
    FactsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                facts:
                  $ref: '#/components/schemas/Facts'
    FactsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          factsOptions:
            $ref: '#/components/schemas/FactsOptions'
    FactsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          factsOptions:
            $ref: '#/components/schemas/FactsOptions'
    FactsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          factsOptions:
            $ref: '#/components/schemas/FactsOptions'
    FactsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          factsOptions:
            $ref: '#/components/schemas/FactsOptions'
    FactsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/FactsOptionsPresetsUpdateParamsItem'
    #==============================
    # anonymized documents
    #------------------------------
    AnonymizedDocument:
      type: object
      description: Анонимизированный документ.
      properties:
        content:
          type: string
          description: Содержимое анонимизированного документа.
    AnonymizedDocumentsOptions:
      type: object
      description: Настройки расшифровки аббревиатур.
      properties:
        entities:
          type: array
          description: Массив настроек для анонимизации сущностей и их атрибутов. Если значение не указано, то анонимизируются все типы сущностей (по настройкам по умолчанию).
          default: []
          items:
            type: object
            description: Настройки анонимизации сущности или атрибута сущности.
            properties:
              entityType:
                type: string
                description: Тип сущности для анонимизации.
              entityAttribute:
                type: string
                description: Атрибут сущности для анонимизации. Если данное значение пустое, анонимизируется вся сущность.
                default: ""
              method:
                type: string
                description: |
                  Методы анонимизации сущности:
                  - replace - замена сущности на указанный текст;
                  - fill - замена каждого символа сущности на указанный символ.
                enum: [ "replace", "fill" ]
                default: "fill"
              replaceText:
                type: string
                description: Текст для замены в режиме "replace".
                default: ""
              fillLetter:
                type: string
                description: Символ для заливки в режиме "fill".
                minLength: 1
                maxLength: 1
                default: "*"
    AnonymizedDocumentsParams:
      allOf:
      - type: object
        properties:
          anonymizedDocumentsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          anonymizedDocumentsOptions:
            $ref: '#/components/schemas/AnonymizedDocumentsOptions'
      - $ref: '#/components/schemas/ParseParams'
    AnonymizedDocumentsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                anonymizedDocument:
                  $ref: '#/components/schemas/AnonymizedDocument'
    AnonymizedDocumentsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          anonymizedDocumentsOptions:
            $ref: '#/components/schemas/AnonymizedDocumentsOptions'
    AnonymizedDocumentsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          anonymizedDocumentsOptions:
            $ref: '#/components/schemas/AnonymizedDocumentsOptions'
    AnonymizedDocumentsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          anonymizedDocumentsOptions:
            $ref: '#/components/schemas/AnonymizedDocumentsOptions'
    AnonymizedDocumentsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          anonymizedDocumentsOptions:
            $ref: '#/components/schemas/AnonymizedDocumentsOptions'
    AnonymizedDocumentsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/AnonymizedDocumentsOptionsPresetsUpdateParamsItem'
    #==============================
    # clusters
    #------------------------------
    Cluster:
      type: object
      description: Кластер.
      properties:
        id:
          type: string
          description: Идентификатор кластера.
        reliability:
          type: number
          description: Надежность определения кластера.
          minimum: 0
          maximum: 1
    ClustersOptions:
      type: object
      description: Настройки кластеризации.
      properties:
        algorithm:
          type: string
          description: Алгоритм кластеризации.
          default: pLSA
          enum: [
            "pLSA",
            "k-means"
            ]
        clusterCount:
          type: object
          description: Количество кластеров.
          properties:
            min:
              type: integer
              description: Минимальное количество кластеров.
              minimum: 2
              default: 2
            max:
              type: integer
              description: Максимальное количество кластеров.
              minimum: 2
              default: 30
    ClustersParams:
      allOf:
      - type: object
        properties:
          clustersOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          clustersOptions:
            $ref: '#/components/schemas/ClustersOptions'
      - $ref: '#/components/schemas/ParseParams'
    ClustersResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                cluster:
                  $ref: '#/components/schemas/Cluster'
    ClustersOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          clustersOptions:
            $ref: '#/components/schemas/ClustersOptions'
    ClustersOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          clustersOptions:
            $ref: '#/components/schemas/ClustersOptions'
    ClustersOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          clustersOptions:
            $ref: '#/components/schemas/ClustersOptions'
    ClustersOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          clustersOptions:
            $ref: '#/components/schemas/ClustersOptions'
    ClustersOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/ClustersOptionsPresetsUpdateParamsItem'
    #==============================
    # categories
    #------------------------------
    Category:
      type: object
      description: Категория.
      properties:
        name:
          type: string
          description: Название категории.
        reliability:
          type: number
          description: Надежность определения категории.
          minimum: 0
          maximum: 1
    Categories:
      type: array
      description: Список категорий.
      items:
        $ref: '#/components/schemas/Category'
    CategorizationModel:
      type: object
      description: Модель классификатора.
      properties:
        description:
          type: string
          description: Строковое описание модели.
        error:
          type: number
          description: Ошибка классификации (взвешенная).
          minimum: 0
          maximum: 100
        probability:
          type: number
          description: Вероятность классификации.
          minimum: 0
          maximum: 100
        failure:
          type: number
          description: Классификация не выполнена.
          minimum: 0
          maximum: 100
        efficiency:
          type: number
          description: Эффективность классификации.
          minimum: 0
          maximum: 100
        data:
          type: string
          format: base64
          description: Бинарные данные модели в кодировке Base64.
    CategorizationModelsResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - $ref: '#/components/schemas/CategorizationModel'
    CategoriesOptions:
      type: object
      description: Настройки классификации.
      properties:
        model:
          type: string
          description: Имя модели классификатора.
          default: ""
        training:
          type: object
          description: Настройки обучения модели.
          properties:
            enabled:
              type: boolean
              description: Включение режима обучения модели. В этом режиме указанная в параметре "model" модель будет перезаписана.
              default: false
            algorithm:
              type: string
              description: Алгоритм классификации.
              enum: [ "svm", "metric", "naive" ]
              default: "naive"
            categoriesCount:
              type: integer
              description: Количество категорий для одного документа.
              minimum: 1
              maximum: 100
              default: 1
            metricType:
              type: string
              description: Тип метрики. Используется только для алгоритма "metric".
              enum: [ "euclidean", "hamming", "chebyshev", "cosine" ]
              default: "euclidean"
            svmKernel:
              type: string
              description: Ядро SVM. Используется только для алгоритма "svm".
              enum: [ "linear", "polynomial", "rbf" ]
              default: "linear"
            categories:
              type: array
              description: Список-категория для соответствующих документов из параметра "documents". Соответствие ставится по индексу в массиве. Обязательный параметр в режиме обучения.
              items:
                type: string
    CategoriesParams:
      allOf:
      - type: object
        properties:
          categoriesOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          categoriesOptions:
            $ref: '#/components/schemas/CategoriesOptions'
      - $ref: '#/components/schemas/ParseParams'
    CategoriesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                categories:
                  $ref: '#/components/schemas/Categories'
    CategoriesOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          categoriesOptions:
            $ref: '#/components/schemas/CategoriesOptions'
    CategoriesOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          categoresOptions:
            $ref: '#/components/schemas/CategoriesOptions'
    CategoriesOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          categoriesOptions:
            $ref: '#/components/schemas/CategoriesOptions'
    CategoriesOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          categoriesOptions:
            $ref: '#/components/schemas/CategoriesOptions'
    CategoriesOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/CategoriesOptionsPresetsUpdateParamsItem'
    CategorizationModelsResourceCreateParams:
      allOf:
      - $ref: '#/components/schemas/ResourceCreateParams'
      - $ref: '#/components/schemas/CategorizationModel'
    CategorizationModelsResourceUpdateParams:
      allOf:
      - $ref: '#/components/schemas/ResourceUpdateParams'
      - $ref: '#/components/schemas/CategorizationModel'
    CategorizationModelsResourcesUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/ResourcesUpdateParamsItem'
      - $ref: '#/components/schemas/CategorizationModel'
    CategorizationModelsResourcesUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/CategorizationModelsResourcesUpdateParamsItem'
    #==============================
    # fragments
    #------------------------------
    Fragments:
      type: array
      description: Список фрагментов.
      items:
        type: string
    FragmentsOptions:
      type: object
      description: Настройки анализа фрагментов.
      properties:
        minFragmentsLength:
          type: integer
          description: Минимальная длина фрагментов.
          minimum: 6
          maximum: 10000000
          default: 15
        minRepeatsCount:
          type: integer
          description: Минимальное количество повторов.
          minimum: 2
          maximum: 10000000
          default: 5
        ignoreCapitalization:
          type: boolean
          description: Игнорировать капитализацию.
          default: true
        ignorePunctuation:
          type: boolean
          description: Игнорировать пунктуацию.
          default: true
        ignoreSpaces:
          type: boolean
          description: Игнорировать пробелы.
          default: true
        ignoreDigits:
          type: boolean
          description: Игнорировать цифры.
          default: true
    FragmentsParams:
      allOf:
      - type: object
        properties:
          fragmentsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          fragmentsOptions:
            $ref: '#/components/schemas/FragmentsOptions'
      - $ref: '#/components/schemas/ParseParams'
    FragmentsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                fragments:
                  $ref: '#/components/schemas/Fragments'
    FragmentsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          fragmentsOptions:
            $ref: '#/components/schemas/FragmentsOptions'
    FragmentsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          fragmentsOptions:
            $ref: '#/components/schemas/FragmentsOptions'
    FragmentsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          fragmentsOptions:
            $ref: '#/components/schemas/FragmentsOptions'
    FragmentsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          fragmentsOptions:
            $ref: '#/components/schemas/FragmentsOptions'
    FragmentsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/FragmentsOptionsPresetsUpdateParamsItem'
    #==============================
    # summaries
    #------------------------------
    Summary:
      type: object
      properties:
        text:
          type: string
          description: Краткое содержание документа.
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
    SummariesOptions:
      type: object
      description: Настройки саммаризации (резюме).
      properties:
        informativeSentencesOnly:
          type: boolean
          description: Показать только информативные предложения.
        sentencesCount:
          type: integer
          description: Размер сокращенного текста в предложениях. Для использования данного параметра нужно установить параметр "proportion" в значение "0".
          minimum: 0
          default: 0
        proportion:
          type: integer
          description: Размер сокращенного текста в процентах от исходного текста. Для использования данного параметра нужно установить параметр "sentencesCount" в значение "0".
          minimum: 0
          maximum: 100
          default: 20
    SummariesParams:
      allOf:
      - type: object
        properties:
          summariesOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          summariesOptions:
            $ref: '#/components/schemas/SummariesOptions'
      - $ref: '#/components/schemas/ParseParams'
    SummariesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                summary:
                  $ref: '#/components/schemas/Summary'
    SummariesOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          summariesOptions:
            $ref: '#/components/schemas/SummariesOptions'
    SummariesOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          summariesOptions:
            $ref: '#/components/schemas/SummariesOptions'
    SummariesOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          summariesOptions:
            $ref: '#/components/schemas/SummariesOptions'
    SummariesOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          summariesOptions:
            $ref: '#/components/schemas/SummariesOptions'
    SummariesOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/SummariesOptionsPresetsUpdateParamsItem'
    #==============================
    # misspellings
    #------------------------------
    Misspelling:
      type: object
      properties:
        misspelling:
          type: string
          description: Неправильно написанный текст.
        replace:
          type: string
          description: Правильное написание текста.
        confidence:
          type: number
          description: Степень "уверенности" алгоритма в том, что это ошибка.
          minimum: 0
          maximum: 100
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    Misspellings:
      type: array
      description: Список орфографических ошибок.
      items:
        $ref: '#/components/schemas/Misspelling'
    MisspellingsOptions:
      type: object
      properties:
        fixFromDictionaryOnly:
          type: boolean
          description: Применить замены только из орфографического словаря. Если вы используете значение `true` и один из приведённых ниже параметров (а именно `fixTwoErrors`, `fixUnited`, `fixSplitted`, или `useHeuristic`) также имеет значение `true`, вы увидите предупреждение.
          default: false
        fixQuestionMarks:
          type: boolean
          description: Заменить вопросительные знаки (например, he?s -> he's).
          default: false
        decodeHtmlEntities:
          type: boolean
          description: Раскрыть HTML символы-мнемоники (например, &lt; -> <).
          default: false
        fixMissingDiacritics:
          type: boolean
          description: Считать отсутствие диакритических знаков ошибкой.
          default: false
        ignoreKnownAffixes:
          type: boolean
          description: Исключить слова с известными приставками/суффиксами.
          default: true
        fixTwoErrors:
          type: boolean
          description: Исправить две ошибки.
          default: true
        fixUnited:
          type: boolean
          description: Разбить слова (например, alot -> a lot).
          default: true
        fixSplitted:
          type: boolean
          description: Объединить слова (например,  mis take -> mistake).
          default: true
        useHeuristic:
          type: boolean
          description: Использовать эвристики для выявления имен собственных, адресов, URL и др.
          default: true
    MisspellingsParams:
      allOf:
      - type: object
        properties:
          misspellingsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          misspellingsOptions:
            $ref: '#/components/schemas/MisspellingsOptions'
      - $ref: '#/components/schemas/OperationParams'
    MisspellingsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                misspellings:
                  $ref: '#/components/schemas/Misspellings'
    MisspellingsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          misspellingsOptions:
            $ref: '#/components/schemas/MisspellingsOptions'
    MisspellingsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          misspellingsOptions:
            $ref: '#/components/schemas/MisspellingsOptions'
    MisspellingsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          misspellingsOptions:
            $ref: '#/components/schemas/MisspellingsOptions'
    MisspellingsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          misspellingsOptions:
            $ref: '#/components/schemas/MisspellingsOptions'
    MisspellingsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/MisspellingsOptionsPresetsUpdateParamsItem'
    #==============================
    # grammar mistakes
    #------------------------------
    GrammarMistake:
      type: object
      properties:
        mistake:
          type: string
          description: Текст с ошибкой.
        description:
          type: string
          description: Описание ошибки.
        rule:
          type: object
          description: Правило, нашедшее ошибку.
          properties:
            id:
              type: string
              description: Идентификатор правила.
            name:
              type: string
              description: Имя правила.
            category:
              type: string
              description: Категория правила.
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    GrammarMistakes:
      type: object
      description: Грамматические ошибки.
      properties:
        documentScore:
          type: number
          description: Общая оценка наличия грамматических ошибок документа. Чем больше величина, тем больше ошибок.
          minimum: 0
          maximum: 100
        mistakes:
          type: array
          items:
            $ref: '#/components/schemas/GrammarMistake'
    GrammarMistakesOptions:
      type: object
      properties:
        rules:
          type: array
          description: Названия категорий правил и идентификаторов правил, которые надо включить.
          default: []
          items:
            type: string
            enum: [
              "Possible Typo",
              "Grammar",
              "Collocations",
              "Miscellaneous",
              "Punctuation Errors",
              "Commonly Confused Words",
              "Nonstandard Phrases",
              "Redundant Phrases",
              "Style",
              "Semantic",
              "Plain English",
              "Wikipedia",
              "Typography",
              "BEAT_REGARDS",
              "LING",
              "RE_CENT",
              "IF_WHICH",
              "GOOD_NEWS",
              "A_BUT",
              "TOOL_LONG",
              "AN_THEN",
              "A_WAS",
              "ALLTHOUGH_1",
              "ALLTHOUGH_2",
              "ALSO_KNOW",
              "AS_OPPOSE_TO_AS_OPPOSED_TO",
              "CONFUSION_OF_OUR_OUT",
              "YOUR_SHOULD",
              "THE_SOME_DAY",
              "MAKE_US_OF",
              "ON_OF_THE_1",
              "ON_OF_THE_2",
              "APART_A_PART_1",
              "APART_A_PART_2",
              "APART_FORM",
              "UP_TO_DATA",
              "COLD_COULD",
              "FEEL_TREE_TO",
              "ET_AL_1",
              "ARE_STILL_THE_SOME",
              "DE_JURO",
              "I_THIN",
              "SUPPOSE_TO",
              "ALL_BE_IT",
              "ALL_OVER_THE_WORD",
              "ANOTHER_WORDS",
              "BEING_BEGIN_1",
              "CA_PRP_1",
              "CA_PRP_2",
              "FROM_FORM_1",
              "FROM_FORM_2",
              "FROM_FORM_3",
              "THERE_EXITS",
              "THE_HOW",
              "I_LOWERCASE_2",
              "IN_JANUARY",
              "IN_PARENTHESIS",
              "IN_STEAD_OF",
              "IN_TACT",
              "IT_SELF",
              "FOR_ALONG_TIME",
              "FOR_AWHILE_1",
              "FOR_AWHILE_2",
              "AWAY_FRO",
              "HUMANS_BEINGS_2",
              "LAST_BUT_NOT_LAST",
              "HOUR_OUR",
              "ONE_THE_ONE_HAND",
              "OTHER_WISE_OTHERWISE",
              "PER_SE",
              "SOME_WHAT_JJ",
              "STAND_ALONE_NN",
              "UNDER_WEAR",
              "WHERE_AS",
              "WITHOUT_OUT",
              "WITH_OUT",
              "IT_IS_NO_1",
              "ALLOT_OF",
              "ALL_READY_1",
              "ALL_MOST",
              "ANALYSIS_IF",
              "IF_IS_1",
              "IF_IS_2",
              "BED_ENGLISH",
              "BOTTLE_NECK",
              "FIRE_ARM",
              "NEWS_PAPER",
              "AN_OTHER",
              "SENT_START_THEM",
              "THINK_YOU_A",
              "IS_WERE",
              "ONE_ORE",
              "THE_ONLY_ON",
              "I_A",
              "PLEASE_NOT_THAT",
              "I_AM_NOTE_SURE_1",
              "NUT_NOT",
              "AND_SO_ONE",
              "THROUGH_AWAY",
              "OR_WAY_IT",
              "DT_RESPONDS",
              "THINK_OFF",
              "NOT_US1_1",
              "YOU_THING",
              "WERE_VBB_1",
              "WERE_VBB_2",
              "VBZ_VBD",
              "FORE_DPS",
              "LOOK_ATE",
              "A_KNOW_BUG",
              "MY_BE",
              "IS_SHOULD",
              "HELL_2",
              "HELL_3",
              "IT_IS_8",
              "IT_IS_19",
              "IT_IS_20",
              "WED_WE_D_2",
              "WHOSE_DT",
              "NOW_1",
              "NOW_3",
              "SCENT_SENT_1",
              "SCENT_SENT_2",
              "SCENE_SEEN_1",
              "SCENE_SEEN_2",
              "MANGER_MANAGER",
              "MODAL_OF_2",
              "ONES",
              "POSSESSIVE_APOSTROPHE_1",
              "POSSESSIVE_APOSTROPHE_2",
              "ANY_BODY_2",
              "MAY_BE_1",
              "MAY_BE_2",
              "ONCE_AND_A_WHILE_1",
              "ONCE_AND_A_WHILE_2",
              "SPARKING_WINE",
              "VERY_MATCH",
              "VARY_MUCH",
              "ANINFOR_EVERY_DAY",
              "ALL_WAYS",
              "EVERY_WHERE",
              "FIGURE_HEAD",
              "FLAG_SHIP",
              "HEAD_GEAR",
              "HEAD_QUARTERS",
              "HEAD_STONE",
              "HEAD_WEAR",
              "HOW_EVER",
              "KEY_NOTE",
              "LAUGHING_STOCK",
              "LIFE_TIME",
              "MEAN_WHILE",
              "NATION_WIDE",
              "NEAR_BY",
              "NEW_COMER",
              "NOTE_WORTHY",
              "NOW_A_DAYS",
              "ON_GOING",
              "OUT_GROW",
              "OUT_SIDE",
              "OVER_LOOKED",
              "OVER_LOOKING",
              "OVER_RATED",
              "OVER_SEAS",
              "SHORT_COMING",
              "SHORT_CUT",
              "SIDE_KICK",
              "SKY_DIVING",
              "SOME_HOW",
              "STALE_MATE",
              "THEM_SELVES",
              "BACK_FIRE",
              "WORLD_WIDE",
              "WORTH_WHILE",
              "WAY_SIDE",
              "ALONG_SIDE",
              "BE_CAUSE",
              "BE_WARE",
              "BEFORE_HAND",
              "DOWN_SIDE",
              "THROUGH_OUT",
              "ON-GOING",
              "LIGHT_WEIGHT",
              "HEAVY_WEIGHT",
              "FREE_LANCE",
              "FREE_LANCER",
              "FREE_LANCES",
              "FREE_LANCING",
              "VB_A_WHILE",
              "WEB_SITE",
              "HEAD_SCARF",
              "HEAD_SCARVES",
              "KEY_WORDS",
              "CROWD_SOURCING",
              "META_DATA",
              "ANY_WHERE",
              "SOME_WHERE",
              "DT_BAIL_OUT",
              "OUT_COME",
              "ALBUM_COMPRISED_OF",
              "AREA_COMPRISED_OF",
              "BAND_COMPRISED_OF",
              "COMPRISED_PRINCIPALLY_OF",
              "ENTIRELY_COMPRISED_OF",
              "COMPRISED_CHIEFLY_OF",
              "COMPRISES_OF",
              "COMPRISING_OF",
              "COMPRISE_OF",
              "WAS_COMPRISED_OF",
              "WERE_COMPRISED_OF",
              "WHICH_COMPRISED_OF",
              "WILL_BE_COMPRISED_OF",
              "WILL_COMPRISE_OF",
              "WOULD_COMPRISE_OF",
              "GOVERNMENT_COMPRISED_OF",
              "IS_COMPRISED_MOSTLY_OF",
              "IS_COMPRISED_OF",
              "WRITINGPOLITICALSCIENCE_GAFFS",
              "WRITINGPOLITICALSCIENCE_GAFF",
              "WERE_MD",
              "OTHER_THEN",
              "WAS_ALOUD",
              "ELUDED_TO",
              "BAITED_BREATH",
              "BARE_IN_MIND",
              "PLAYOFF_BIRTH",
              "DISC_BREAK",
              "HIT_THE_BREAKS",
              "SPINAL_CHORD",
              "FULL_COMPLIMENT_OF",
              "IN_EDITION_TO",
              "FAIRED_AS_WELL",
              "FAIRED_BADLY",
              "AND_SO_FOURTH",
              "PUT_FOURTH_THEAAN",
              "FORTH_PLACE",
              "DOOR_JAM",
              "LESS_DOLLARSMINUTESHOURS",
              "FEWER_UNCOUNTABLE",
              "AM_LOATHE_TO",
              "LOOSING_EFFORTRECORDSEASON",
              "MUTE_POINT",
              "PEAK_HIS_INTEREST",
              "MOST_POPULACE",
              "AT_THE_REIGNS",
              "MANAGERIAL_REIGNS",
              "REIGNS_OF_POWER",
              "TAKE_THE_REIGNS",
              "FREE_REIGN",
              "LEAD_ROLL",
              "ROLL_PLAYER",
              "ROLE_CALL",
              "CONSTRUCTION_SIGHT",
              "OUT_OF_SINK",
              "DIFFERENT_TACT",
              "COMPARISONS_THEN",
              "COMPARISONS_NNS_THEN",
              "TO__THEN_BY",
              "WAIVED_OFF",
              "WRECK_HAVOC",
              "ABOUT_WHO_TO",
              "NEED_TO_VBG",
              "ILL_I_LL",
              "LAID_AHEAD",
              "LAY_AROUND",
              "LAYING_AROUND",
              "LAYS_ATOP",
              "WAS_LAIN",
              "JIMMY_BUFFET",
              "JIMMY_HENDRIX",
              "PHILLIPS_ARENA",
              "JIVE_WITH",
              "MASH_POTATOES",
              "IS_RENOWN_FOR",
              "BREW_HAHA",
              "WORKING_PROGRESS",
              "HISTORIC_RECORD",
              "GUEST_STARED",
              "IN_TITLED",
              "IS_CONTAINED_OF",
              "AFTER_BEEN",
              "IMMINENT_DOMAIN",
              "CHOMPING_AT_THE_BIT",
              "CONSTELLATION_PRIZE",
              "CONSTITUTES_OF",
              "COULD_CARE_LESS",
              "COULD_GIVE_A_DAMN",
              "DAILY_REGIMENT",
              "DE_FACTOR",
              "WORSE-CASE_SCENARIO",
              "WORST_COMES_TO_WORST",
              "TO_BATH",
              "TREASURE_TROUGH",
              "AD_NAUSEUM",
              "NOBLE_PRIZE",
              "LAND_LOVER",
              "STRIKE_A_CORD",
              "SAFETY_DEPOSIT_BOX",
              "STATUE_OF_LIMITATIONS",
              "ALL_THE_FARTHER",
              "DISCUSSIONS_AROUND",
              "AS_TIME_PROGRESSED",
              "AS_FOLLOW",
              "BEYOND_THE_PAIL",
              "BECKON_CALL",
              "BEGS_BELIEF",
              "BUTTLOAD",
              "BRUSSEL_SPROUT",
              "BORED_OF",
              "BUILD_OFF_OF",
              "TRITE_AND_TRUE",
              "BETWEEN_YOU_AND_I",
              "EVERY_SINCE",
              "FOWL_SWOOP",
              "GARDENERGARDEN_SNAKE",
              "HAY_DAY",
              "HARDLY_NEVER",
              "HEW_AND_CRY",
              "MINUS_WELL",
              "OFT_CHANCE",
              "ON_THE_SAME_TOKEN",
              "ONE_OF_THE_ONLY",
              "PEDAL_TO_THE_MEDAL",
              "PAWN_OFF",
              "PLAYS_A_FACTOR",
              "REALMS_OF_POSSIBILITY",
              "RING_ITS_NECK",
              "RIGHT_OF_PASSAGE",
              "RODROT_IRON",
              "SOUSE_CHEF",
              "STOCK_AND_TRADE",
              "SOUND_BYTE",
              "TO_THE_MANOR_BORN",
              "VINTAGE_POINT",
              "WHIM_AND_A_PRAYER",
              "YEAR_END_AND_YEAR_OUT",
              "HAND_AND_HAND",
              "GRASPING_FOR_STRAWS",
              "GRILL_CHEESE",
              "MIGHT_HAS_WELL",
              "ON_THE_CONTRAIRE",
              "DAMP_SQUID",
              "CURSING_THROUGH_VEINS",
              "DARING-DO",
              "DEATH_NAIL",
              "REAP_WHAT_YOU_SEW",
              "SPARE_OF_THE_MOMENT",
              "TONGUE_AND_CHEEK",
              "URINE_ANALYSIS",
              "WET_YOUR_APPETITE",
              "TATTLE-TAIL",
              "OLD_WISE_TAILTALE",
              "ON_THE_LAMB",
              "FLASHPOINT",
              "CAN_BACKUP",
              "CAN_BLACKOUT",
              "CAN_SETUP",
              "CAN_WORKOUT",
              "GOT_SHUTDOWN",
              "GOT_SHUTOUT",
              "IN_ALONG_TIME",
              "IN_ANYWAY",
              "INCASE_OF",
              "PORTLAND_TRAILBLAZERS",
              "TAKE_AWHILE",
              "TO_BACKOUT",
              "TO_BLACKOUT",
              "TO_COMEBACK",
              "ALONG_TIME",
              "DOWNPAYMENT",
              "ALA_MODE",
              "AFTERALL",
              "I_AM_WORRY",
              "MUST_OF_THE_TIME_MOST_OF_THE_TIME",
              "FOR_TIME_TO_TIME",
              "CONFUSION_OF_SAVE_SAFE_TO_IGNORE",
              "SINGULAR_VERB_AFTER_THESE_OR_THOSE",
              "PEOPLE_VBZ",
              "SOME_FACULTY",
              "NEITHER_NOR",
              "IS_EVEN_WORST",
              "IS_CAUSE_BY",
              "PREFER_TO_VBG",
              "I_AM",
              "AM_I",
              "SHOULD_BE_DO",
              "NEEDNT_TO_DO_AND_DONT_NEED_DO_1",
              "NEEDNT_TO_DO_AND_DONT_NEED_DO_3",
              "IT_IS_JJ_TO_VBG",
              "BE_USE_TO_DO",
              "ON_ADDITION",
              "LEARN_NNNNS_ON_DO",
              "ESSENTIAL_ESSENTIALLY",
              "TO_WITHDRAWN",
              "AFFORD_VB_2",
              "A_GREAT_NUMBER_OF_NN",
              "ARRIVE_NNP",
              "WILL_LIKE_TO",
              "WHO_NOUN",
              "BE_FINED_WITH",
              "VERY_THANKS_THANKS_A_LOT",
              "BETWEEN_PRP_1",
              "BETWEEN_PRP_2",
              "BETWEEN_PRP_3",
              "BETWEEN_PRP_4",
              "FEWER_LESS_1",
              "WORST_THAN",
              "DOES_YOU_1",
              "DOES_YOU_2",
              "ADVERB_WORD_ORDER_1",
              "ADVERB_WORD_ORDER_2",
              "ADVERB_WORD_ORDER_3",
              "ADVERB_WORD_ORDER_4",
              "ADVERB_WORD_ORDER_6",
              "ADVERB_WORD_ORDER_7",
              "ADVERB_WORD_ORDER_8",
              "ADVERB_WORD_ORDER_10",
              "NON_ACTION_CONTINUOUS_1",
              "NON_ACTION_CONTINUOUS_2",
              "NON_ACTION_CONTINUOUS_3",
              "NON_ACTION_CONTINUOUS_4",
              "ON_FIRST_GLANCE",
              "DONT_NEEDS_2",
              "A_RB_NN",
              "WANT_THAT_I_1",
              "WANT_THAT_I_2",
              "WANT_THAT_I_3",
              "WANT_THAT_I_4",
              "WANT_THAT_I_5",
              "WANT_THAT_I_6",
              "THE_SENT_END",
              "PRP_RB_NO_VB",
              "HELP_TO_FIND",
              "WAS_BEEN_1",
              "WAS_BEEN_2",
              "THESE_ONES",
              "EACH_EVERY_NNS",
              "AGREEMENT_SENT_START_1",
              "AGREEMENT_SENT_START_2",
              "AGREEMENT_SENT_START_3",
              "AGREEMENT_SENT_START_4",
              "AGREEMENT_SENT_START_5",
              "AGREEMENT_SENT_START_6",
              "AGREEMENT_SENT_START_7",
              "AGREEMENT_SENT_START_8",
              "A_HUNDREDS",
              "ONE_PLURAL",
              "DIE_DICE",
              "FOOT_FEET",
              "HAVE_PART_AGREEMENT_2",
              "HAVE_PART_AGREEMENT_3",
              "HAVE_PART_AGREEMENT_5",
              "HAVE_PART_AGREEMENT_7",
              "HAVE_PART_AGREEMENT_8",
              "HAVE_PART_AGREEMENT_9",
              "PERS_PRONOUN_AGREEMENT_SENT_START_1",
              "PERS_PRONOUN_AGREEMENT_SENT_START_2",
              "PERS_PRONOUN_AGREEMENT_SENT_START_3",
              "PERS_PRONOUN_AGREEMENT_SENT_START_4",
              "PERS_PRONOUN_AGREEMENT_SENT_START_5",
              "PERS_PRONOUN_AGREEMENT_SENT_START_6",
              "PERS_PRONOUN_AGREEMENT_SENT_START_7",
              "MANY_FEW_UNCOUNTABLE_1",
              "MANY_FEW_UNCOUNTABLE_2",
              "MOST_SOME_OF_NNS",
              "HAVE_A_BREAKFAST_1",
              "HAVE_A_BREAKFAST_2",
              "HAVE_A_BREAKFAST_3",
              "IN_1990s_1",
              "IN_PAST",
              "ALLOW_TO_1",
              "AFFORD_VBG_1",
              "AFFORD_VBG_2",
              "ADMIT_ENJOY_VB_4",
              "ADMIT_ENJOY_VB_5",
              "ADVISE_VBG_1",
              "ADVISE_VBG_2",
              "ADVISE_VBG_3",
              "ADVISE_VBG_4",
              "ADVISE_VBG_6",
              "ADVISE_VBG_7",
              "ADVISE_VBG_8",
              "ADVISE_VBG_9",
              "ADVISE_VBG_10",
              "ADVISE_VBG_11",
              "THIS_NNS_1",
              "THIS_NNS_3",
              "THIS_NNS_4",
              "A_MUCH_NN1",
              "MOST_SUPERLATIVE",
              "MOST_COMPARATIVE_1",
              "MUST_HAVE_TO",
              "AS_ADJ_AS",
              "EAGER_TO",
              "COMP_THAN_2",
              "COMP_THAN_3",
              "MORE_A_JJ",
              "NON3PRS_VERB_6",
              "NON3PRS_VERB_8",
              "NON3PRS_VERB_9",
              "NON3PRS_VERB_11",
              "OUGHT_SAY",
              "HE_VERB_AGR_1",
              "HE_VERB_AGR_3",
              "HE_VERB_AGR_5",
              "HE_VERB_AGR_6",
              "HE_VERB_AGR_7",
              "HE_VERB_AGR_9",
              "HE_VERB_AGR_10",
              "HE_VERB_AGR_11",
              "HE_VERB_AGR_12",
              "PRP_PAST_PART_4",
              "EQUALLY_AS",
              "IF_OR_NOT",
              "KIND_OF_A",
              "REASON_IS_BECAUSE",
              "BECAUSE_OF_I",
              "BOTH_AS_WELL_AS",
              "ACCORDING_TO_ME",
              "AFRAID_OF_HEIGHT_2",
              "AFRAID_OF_HEIGHT_3",
              "I_AFRAID_1",
              "I_AFRAID_2",
              "I_AFRAID_3",
              "I_AFRAID_8",
              "I_AFRAID_9",
              "THERE_S_MANY_3",
              "CD_DOZENS_OF",
              "NOT_NOTHING",
              "TIP_AND_TRICK_1",
              "TIP_AND_TRICK_2",
              "HAVE_CD_YEARS",
              "IN_NOWADAYS",
              "SUPERIOR_THAN_1",
              "SUPERIOR_THAN_2",
              "OBVIOUS_FOR",
              "TODAY_MORNING",
              "YESTERDAY_NIGHT",
              "TODAY_NIGHT",
              "WORRY_FOR",
              "ALSO_SENT_END",
              "THE_EXACTLY_THE",
              "DT_DT_1",
              "DT_DT_2",
              "DT_DT_3",
              "AN_ANOTHER",
              "COMMA_AFTER_A_MONTH",
              "STATE_OF_THE_ART",
              "OUT_OF_PLACE",
              "OUT_OF_THE_WAY",
              "EG_SPACE_2",
              "COMMA_MONTH_DATE",
              "BY_DEFAULT_COMMA",
              "SENT_START_CONJUNCTIVE_LINKING_ADVERB_COMMA_2",
              "BLU_RAY_1",
              "BLU_RAY_3",
              "BLU_RAY_4",
              "THERE_OWN_1",
              "ZERO-SUM_GAIN",
              "TURNED_OFF",
              "THE_FLEW",
              "COMMA_THAN",
              "FROM_THAN_ON",
              "AND_THAN",
              "THAN_INTERJ",
              "WHO_THAN",
              "RATHER_THEN_1",
              "PEACE_PIECE",
              "QUIET_QUITE",
              "OF_CAUSE",
              "I_NEW",
              "SOME_EXTEND_1",
              "SOME_EXTEND_2",
              "THEIR_IS",
              "MOTHER-IN-LOW_1",
              "MOTHER-IN-LOW_2",
              "IN_THE_PASSED",
              "TOO_TO",
              "TO_TOO_1",
              "TO_TOO_3",
              "TO_TOO_4",
              "TO_TOO_5",
              "YOUR_3",
              "PIGEON_ENGLISH",
              "TELEPHONE_POLL",
              "OPINION_POLE",
              "SHELL_WE_1",
              "SHELL_WE_2",
              "I_HERD",
              "LOOSE_LOSE_1",
              "LOOSE_LOSE_2",
              "LOOSE_LOSE_3",
              "LOOSE_LOSE_4",
              "LOSE_LOOSE_1",
              "LOSE_LOOSE_2",
              "LOSE_LOSS",
              "GIVE_ADVISE_3",
              "GIVE_ADVISE_4",
              "ADVICE_ADVISE",
              "HERE_HEAR_1",
              "HERE_HEAR_2",
              "HEAR_HERE",
              "WITCH_HAUNT",
              "TEEM_TEAM",
              "SNEAK_PEAK",
              "CONFUSION_OF_SOBBER_SOBER",
              "FOR_ALL_INTENSIVE_PURPOSES",
              "KNOW_NOW_1",
              "KNOW_NOW_2",
              "KNOW_NOW_3",
              "KNOW_NOW_5",
              "KNOW_NOW_6",
              "IN_VEIN",
              "INSURE_THAT",
              "IN_MASSE",
              "FOR_SELL",
              "CHALK_FULL",
              "EGG_YOKE",
              "ET_ALL",
              "BOB_WIRE",
              "BYE_THE_WAY",
              "BACK_AND_FOURTH",
              "BACK_IN_FORTH",
              "ALL_FOR_NOT",
              "MASSAGE_MESSAGE",
              "CHANCE_CHANGE_1",
              "CHANCE_CHANGE_2",
              "FORMALLY_KNOWN_AS",
              "BREATHE_BREATH_1",
              "BREATHE_BREATH_3",
              "BREATHE_BREATH_4",
              "ASK_WETHER",
              "BRAKE_AWAY_BREAK_AWAY",
              "BE_ALOUD_TO",
              "AIRPLANE_HANGER",
              "DO_TO_THE_FACT_THAT",
              "LAWSUIT",
              "DEPENDENT",
              "BUY_VBG",
              "FURTHER_ADIEU",
              "ADOPT_TO",
              "TO_AIDE",
              "ALL_THE_FURTHER",
              "ALLY_ALLAY",
              "AMENABLE_AMENDABLE",
              "ARCHITECT_VERB",
              "ASCETIC_ACID",
              "AS_WELL_AS_BETTER",
              "AXED_ASKED",
              "PUBIC_X",
              "CONFUSION_OF_CORRAL_CORAL",
              "CALENDER",
              "ON_BEHAVE",
              "WITCH_IS_WRONG",
              "ALTER_BOY_1",
              "ALTER_BOY_2",
              "ALTER_BOY_3",
              "CONFUSION_OF_DECENT_DESCENT_1",
              "CONFUSION_OF_DECENT_DESCENT_2",
              "COUNSEL_GENERAL",
              "WILDLY_ACCEPTED",
              "THROUGH_THOROUGH",
              "WAS_WANDERING_IF",
              "PRICE_PRIZE_1",
              "PRICE_PRIZE_2",
              "PRICE_PRIZE_3",
              "PRIZE_PRICE",
              "LOOK_WATCH_1",
              "LOOK_WATCH_2",
              "LOOK_WATCH_3",
              "LOOK_WATCH_4",
              "SITE_SIDE",
              "SIDE_SITE",
              "BELIEF_BELIEVE",
              "PROVE_PROOF_1",
              "PROVE_PROOF_2",
              "IT_SEAMS_2",
              "EASE_OFF_USE",
              "NOT_AD_ALL_1",
              "NOT_AD_ALL_2",
              "TAKING_CASE_OF_IT",
              "I_WANDER_IF",
              "WORTH_THAN",
              "ACCEPT_EXCEPT_1",
              "ACCEPT_EXCEPT_2",
              "ACCEPT_EXCEPT_3",
              "AFFECT_EFFECT_1",
              "AFFECT_EFFECT_2",
              "AFFECT_EFFECT_3",
              "AFFECT_EFFECT_4",
              "AFFECT_EFFECT_5",
              "AFFECT_EFFECT_6",
              "AFFECT_EFFECT_7",
              "AFFECT_EFFECT_10",
              "AFFECT_EFFECT_11",
              "AFFECT_EFFECT_12",
              "AFFECT_EFFECT_13",
              "AFFECT_EFFECT_14",
              "AFFECT_EFFECT_15",
              "AFFECT_EFFECT_16",
              "ECONOMICAL_ECONOMIC",
              "ECONOMIC_ECONOMICAL",
              "IN_PRINCIPAL_1",
              "IN_PRINCIPAL_2",
              "IN_PRINCIPAL_3",
              "IN_PRINCIPAL_4",
              "SAY_TELL_1",
              "SAY_TELL_2",
              "SAY_TELL_3",
              "EVERYDAY_EVERY_DAY_1",
              "EVERYDAY_EVERY_DAY_2",
              "EVERYDAY_EVERY_DAY_3",
              "NIECE_NICE",
              "SLIGHT_OF_HAND",
              "MONTH_OF_XXXX",
              "THE_QUESTION_WH",
              "IN_THE_MOMENT",
              "MAKE_SINCE",
              "ALL_AND_ALL",
              "ALL_OF_THE_SUDDEN_1",
              "ALL_OF_THE_SUDDEN_2",
              "ALONG_THE_SAME_VEIN",
              "EVER_SO_OFTEN",
              "EARLY_ADAPTER",
              "FAR_BE_IT_FOR_ME",
              "MONEY_IS_NO_OPTION",
              "NIP_IT_IN_THE_BUTT",
              "NOW_AND_DAYS",
              "THE_PROOF_IS_IN_THE_PUDDING",
              "QUI_BONO",
              "WHIP_CREAM",
              "IN_REGARD_TO",
              "VERY_KNOWN",
              "FORMER_ALUMNUS_1",
              "FORMER_ALUMNUS_2",
              "SWORN_AFFIDAVIT_1",
              "SWORN_AFFIDAVIT_2",
              "DIRECTLY_ANTITHETICAL",
              "APPROXIMATELY_ABOUT",
              "ASSOCIATE_TOGETHER_1",
              "ASSOCIATE_TOGETHER_2",
              "SUFFICIENT_ENOUGH",
              "OF_ANY_OF",
              "SEND_AN_EMAIL",
              "SENT_AN_EMAIL",
              "BECAUSE_OF_THE_FACT_THAT",
              "IN_A_X_MANNER",
              "ATM_MACHINE_1",
              "ATM_MACHINE_2",
              "ABSOLUTELY_ESSENTIAL",
              "ACTUAL_EXPERIENCE",
              "ADVANCE_PLANNING",
              "ADD_AN_ADDITIONAL",
              "ANNUAL_ANNIVERSARY",
              "ADDED_BONUS",
              "ADEQUATE_ENOUGH",
              "ASK_THE_QUESTION",
              "AS_OF_YET",
              "ARMED_GUNMAN",
              "AUTOBIOGRAPHY_OF_A_LIFE",
              "BASIC_FUNDAMENTALS",
              "BALD-HEADED",
              "BALSA_WOOD",
              "BARE_NAKED",
              "TEMPORARY_BIVOUAC_BIVOUAC",
              "BIVOUAC_CAMP_BIVOUAC",
              "ADJECTIVE_IN_ATTRIBUTE",
              "BITTER_IN_TASTE",
              "BOAT_MARINA",
              "BRIEF_IN_DURATION",
              "BIOGRAPHY_OF_A_LIFE",
              "BOUQUET_OF_FLOWERS",
              "BUT_NEVERTHELESS",
              "CD_DISC",
              "CDROM",
              "ACCUSED_OF_A_CHARGE_CHARGED_WITH",
              "CIRCUMSTANCES_SURROUNDING",
              "CLOSE_SCRUTINY_1",
              "CLOSE_SCRUTINY_2",
              "COMFORTABLE_WITH_VBG",
              "COMMON_BOND",
              "COMMUTE_BACK_AND_FORTH",
              "CONSENSUS_OF_OPINION",
              "DESCEND_DOWN",
              "DURING_THE_COURSE_OF",
              "EACH_AND_EVERY",
              "ALL_OF_THE",
              "SELF_ADMITTED",
              "SOME_OF_THE",
              "SO_AS_TO",
              "FEW_OCCASIONS",
              "ALSO_OTHER",
              "LARGE_NUMBER_OF",
              "SMALL_NUMBER_OF",
              "SUBSEQUENT_TO",
              "HOLLOW_TUBE",
              "EXACT_REPLICA",
              "WITH_THE_EXCEPTION_OF",
              "EVERY_NOW_AND_THEN",
              "ESTABLISHED_FACT",
              "SUMMER_TIME_1",
              "SUMMER_TIME_2",
              "THE_FALL_SEASON",
              "FAMOUS_CELEBRITY",
              "SALSA_SAUCE",
              "NEW_XX",
              "ORIGINALLY_DISCOVERED",
              "FORMER_GRADUATE",
              "OVER_EXAGGERATED_1",
              "OVER_EXAGGERATED_2",
              "ORIGINALLY_BORN_IN",
              "RETURN_BACK",
              "MIGHT_PERHAPS",
              "AGREE_WITH_THE_FACT_1",
              "AGREE_WITH_THE_FACT_2",
              "WILL_IN_THE_FUTURE",
              "WORK_COLLEAGUE",
              "NUMEROUS_DIFFERENT",
              "WHOLE_LOT",
              "FELLOW_CLASSMATE",
              "FEW_IN_NUMBER",
              "FIRST_TIME_EVER",
              "FOREIGN_IMPORT",
              "FOREVER_AND_EVER",
              "FROM_WHENCE",
              "INTRODUCE_FOR_THE_FIRST_TIME",
              "MAIN_FOCUS",
              "MAJOR_BREAKTHROUGH",
              "MAY_COULD_POSSIBLY",
              "MENTAL_TELEPATHY",
              "MUTUALLY_DEPENDENT_ON_EACH_OTHER",
              "NEVER_AT_ANY_TIME",
              "NOUN_AROUND_IT",
              "NOW_CURRENTLY",
              "ONE_AND_THE_SAME",
              "OR_ALTERNATIVELY",
              "PASSING_FAD",
              "PAST_EXPERIENCE_MEMORY",
              "PERIOD_OF_TIME",
              "PERSONAL_OPINION_FRIENDSHIP",
              "POINT_BEING_IS_THAT",
              "SO_THEREFORE",
              "THERAPEUTIC_TREATMENT",
              "RUSTIC_COUNTRY",
              "SAFE_HAVEN",
              "USUAL_CUSTOM",
              "VERY_UNIQUE",
              "WHETHER_1",
              "WHETHER_4",
              "WHETHER_5",
              "WHETHER_6",
              "WHETHER_7",
              "FEMALE_ACTOR",
              "FEMALE_WAITER",
              "FIRST_WOMAN_NOUN",
              "FIRST_MAN_NOUN",
              "LITTLE_BIT",
              "FREE_GIFT",
              "PROFANITY",
              "AN_INVITE",
              "YEAR_20001",
              "BOTH_ENUM",
              "INVALID_DATE_1",
              "INVALID_DATE_2",
              "INVALID_DATE_4",
              "BE_A_X_ONE",
              "ABUNDANCE",
              "ACCEDE_TO",
              "ACCELERATE",
              "ACCENTUATE",
              "ACCOMMODATION",
              "ACCOMPANY",
              "ACCRUE",
              "ACCURATE",
              "ACQUIRE",
              "ALL_THINGS_CONSIDERED",
              "ALONG_THE_LINES_OF",
              "AS_A_MATTER_OF_FACT",
              "AS_PER",
              "ASSIST_ASSISTANCE",
              "AT_ALL_TIMES",
              "TIME_NOW_1",
              "TIME_NOW_2",
              "TIME_NOW_3",
              "TIME_NOW_4",
              "AT_YOUR_EARLIEST_CONVENIENCE",
              "BASIS_ON_A",
              "BE_ADVISED",
              "BECAUSE_1",
              "BECAUSE_2",
              "BECAUSE_4",
              "BECAUSE_5",
              "BELATED",
              "BY_MEANS_OF",
              "CLEARLY_OR_OBVIOUSLY",
              "CURRENTLY",
              "EACH_AND_EVERY_NOUN",
              "END_RESULT_OR_PRODUCT",
              "FOR_ALL_INTENTS_AND_PURPOSES",
              "FOR_THE_MOST_PART",
              "FOR_THE_PURPOSE_OF",
              "HAVE_THE_ABILITY_TO",
              "HAVE_A_TENDENCY",
              "IN_A_MANNER_OF_SPEAKING",
              "IN_A_VERY_REAL_SENSE",
              "in_excess_of",
              "IN_MY_OPINION",
              "IN_REGARD_OR_REGARDS_TO_1",
              "IN_REGARD_OR_REGARDS_TO_2",
              "IN_TERM_OF",
              "IN_TERMS_OF",
              "DESPITE_THE_FACT_1",
              "DESPITE_THE_FACT_2",
              "IN_THE_AFFIRMATIVE",
              "IN_THE_CASE_OF",
              "IN_THE_EVENT",
              "IN_THE_FINAL_ANALYSIS",
              "IN_THE_NATURE_OF",
              "IN_THE_NEIGHBORHOOD_OF",
              "IN_THE_PROCESS_OF",
              "IT_SEEMS_OR_APPEARS_THAT",
              "MAJORITY",
              "MAKE_DECISIONS_ABOUT",
              "NOT_ABLE",
              "NOT_ACCEPT",
              "NOT_CERTAIN",
              "NOT_UNLIKE",
              "NOT_MANY",
              "NOT_VERY_OFTEN",
              "NOT_THE_SAME",
              "OBTAIN",
              "ON_THE_OCCASION_OF",
              "ON_TWO_SEPARATE_OCCASIONS",
              "QUESTION_X_WHETHER_1",
              "QUESTION_X_WHETHER_2",
              "REGARD_AS_BEING",
              "SOLICIT_FOR",
              "SOONER_RATHER_THAN_LATER",
              "STATE-OF-THE-ART_1",
              "STATE-OF-THE-ART_2",
              "SUFFICIENT",
              "TAKE_ACTION_TO",
              "THAT_EXISTS",
              "THE_UNDERSIGNED",
              "TYPE_OF",
              "UNTIL_SUCH_TIME_AS",
              "WHAT_I_MEAN_TO_SAY_IS_THAT",
              "WITH_REFERENCE_OR_REGARD_TO",
              "WORTHWHILE",
              "YOU_ARE_REQUESTED",
              "DRAW_ATTENTION_1",
              "DRAW_ATTENTION_2",
              "THE_TRUTH_OR_FACT_IS",
              "HASH_SYMBOL",
              "WIKIPEDIA_CURRENTLY",
              "TRADEMARK",
              "CURRENCY_2",
              "Логические ошибки",
              "Пунктуация",
              "Типографика",
              "Грамматика",
              "Стиль",
              "Проверка орфографии",
              "Заглавные буквы",
              "Дополнительные правила",
              "INVALID_DATE_1",
              "INVALID_DATE_2",
              "YEAR_20001",
              "DATE_WEEKDAY1_1",
              "DATE_WEEKDAY1_2",
              "na_poverku",
              "obschie_toscki_soprikosnovenija",
              "uroven_uvelichilsja_1",
              "uroven_uvelichilsja_2",
              "companija_campanija_1",
              "companija_campanija_2",
              "urovnjat_uravnjat_1",
              "urovnjat_uravnjat_2",
              "nе_igraet_nikakogo_znachenija_1",
              "nе_igraet_nikakogo_znachenija_2",
              "KVT.H_1",
              "KVT.H_2",
              "А.H_1",
              "А.H_2",
              "А.H_3",
              "А.H_4",
              "V.А_1",
              "V.А_2",
              "V.А_3",
              "BOLSHAJA_POLOVINA",
              "SPUSKATSJA_VNIZ",
              "PROGNOZ_NA_BUDUSHEE",
              "BLIZKIJ_BLIZHNIJ_1",
              "BLIZKIJ_BLIZHNIJ_2",
              "Stolko_mnogo_1",
              "Stolko_mnogo_2",
              "Logical_reshit_zatanuvshujusa_problemu_1",
              "Logical_reshit_zatanuvshujusa_problemu_2",
              "Logical_podorojali_ceny_1",
              "Logical_podorojali_ceny_2",
              "Logical_podorojali_ceny_3",
              "Logical_svoja_avtobiographija",
              "Logical_vidajuschijsja_as",
              "Logical_sobiratsya_vmeste",
              "Logical_sochetatsja_vmeste",
              "Logical_segodnyashnij_den",
              "Logical_sosedstvovat_drug_s_drugom",
              "Tavtology_mestnij_aborigen",
              "Tavtology_nebolshaja_gorstka",
              "Tavtology_marshrut_sledovanija",
              "Tavtology_adres_mestojitelstva",
              "Tavtology_zaranee_predupredit",
              "Tavtology_zaranee_predchuvstvovat",
              "Tavtology_prejskurant_cen",
              "Tavtology_vremenno_priostanovlen",
              "Tavtology_mahina",
              "Tavtology_kivnul_golovoj",
              "Tavtology_polnostju_zavershil",
              "Tavtology_glavnij_lejtmotiv",
              "Tavtology_landshaft_mestnosti",
              "Tavtology_samij_edinstvennij",
              "Logical_biographia_gizni",
              "Logical_prignul_s_parashuta",
              "translate_carreer_diplomat",
              "Logical_komandirovochnij_1",
              "Logical_komandirovochnij_2",
              "Logical_komandirovochnij_3",
              "Logical_kurica_nasijivaet_jajca",
              "Logical_samij_gigantskij",
              "Logical_govorite_vopros",
              "Logical_podnjal_tost",
              "Logical_uluchshenie_otmechennih_nedostatkov",
              "Logical_zalozheno_xx_derevjev",
              "V_etoj_svyazy",
              "Logical_odel_nadel_1",
              "Logical_odel_nadel_2",
              "Logical_odel_nadel_3",
              "Logical_odel_nadel_4",
              "Logical_odel_nadel_5",
              "Logical_odel_nadel_6",
              "Linguistics_hrabry",
              "Prep_i_1",
              "Prep_i_2",
              "ABREV_DOT",
              "postscriptum",
              "POZHALUJSTA_1",
              "POZHALUJSTA_2",
              "POZHALUJSTA_3",
              "KAK_PRAVILO_1",
              "KAK_PRAVILO_2",
              "KAK_PRAVILO_3",
              "KAK_PRAVILO_4",
              "KAK_I",
              "A_NO_DA_1",
              "A_NO_DA_2",
              "CHAS_PIK",
              "VVODNOE_SLOVO_1",
              "VVODNOE_SLOVO_2",
              "VVODNOE_SLOVO_3",
              "VVODNOE_SLOVO_4",
              "VVODNOE_SLOVO_5",
              "VVODNOE_SLOVO_6",
              "VVODNOE_SLOVO_7",
              "VVODNOE_SLOVO_8",
              "VVODNOE_SLOVO_9",
              "VVODNOE_SLOVO_10",
              "VVODNOE_SLOVO_11",
              "VVODNOE_SLOVO_12",
              "Oborot_ne_kto_inoj_kak",
              "V_tom_chisle",
              "DEFIS_COMMA",
              "Hyphen_and_spaces_1",
              "Hyphen_and_spaces_2",
              "NO_KAK_POPALO",
              "NO_VVODNOE",
              "NO_NE_KAK",
              "NO_NE_TO_CHTO_1",
              "NO_NE_TO_CHTO_2",
              "I_TO_I_SE_1",
              "I_TO_I_SE_2",
              "I_TO_I_SE_3",
              "NEIZVESTNO_KTO_1",
              "NEIZVESTNO_KTO_2",
              "EST_CHEM_ZANJATSA_1",
              "EST_CHEM_ZANJATSA_2",
              "Wrong_group_punct_1",
              "Wrong_group_punct_2",
              "PUNKT_KAVITCHKI",
              "Digit_defis_letter_1",
              "Digit_defis_letter_2",
              "grammar_bolee_interesnee",
              "grammar_nemnogo_blednovat",
              "skuchat_za",
              "oplachivat_prep",
              "rugat_rugatsja_1",
              "rugat_rugatsja_2",
              "udivlyatsja_na",
              "znat_cenu_1",
              "znat_cenu_2",
              "grammar_blagodarja_dat",
              "grammar_soobrazno_dat",
              "grammar_v_sootvetstvii",
              "grammar_uverennost_v",
              "toska_toskovat_1",
              "toska_toskovat_2",
              "SoglasovanieP_1",
              "SoglasovanieP_2",
              "SoglasovanieP_3",
              "SoglasovanieP_4",
              "SoglasovanieP_5",
              "SoglasovanieP_6",
              "SoglasovanieG_1",
              "SoglasovanieG_2",
              "SoglasovanieG_3",
              "SoglasovanieG_4",
              "SoglasovanieG_5",
              "SoglasovaniePNN_Verb_1",
              "SoglasovaniePNN_Verb_2",
              "SoglasovaniePNN_Verb_3",
              "SoglasovaniePNN_Verb_4",
              "SoglasovanieNN_Verb_1",
              "SoglasovanieNN_Verb_2",
              "SoglasovanieNN_Verb_3",
              "SoglasovanieNN_Verb_4",
              "O_P_padeg_1",
              "O_P_padeg_2",
              "PREP_PNN_1",
              "PREP_PNN_2",
              "PREP_PNN_3",
              "PREP_PNN_4",
              "Com_Num_1",
              "Com_Num_2",
              "Com_Num_3",
              "Com_Num_4",
              "Para_NN",
              "dva_i_bolee",
              "Oba_obe_1",
              "Oba_obe_2",
              "Oba_obe_3",
              "Pnn_compose_error",
              "Ne_pril_prich_1",
              "Ne_pril_prich_2",
              "Ne_pril_prich_3",
              "Ne_pril_prich_4",
              "Kak_budto",
              "Pravopisanie_slitno1_1",
              "Pravopisanie_slitno1_2",
              "Pravopisanie_slitno1_3",
              "Pravopisanie_slitno1_4",
              "Pravopisanie_slitno1_5",
              "Pravopisanie_slitno1_6",
              "Pravopisanie_slitno1_7",
              "Pravopisanie_slitno1_8",
              "Pravopisanie_slitno1_9",
              "Pravopisanie_slitno1_10",
              "Pravopisanie_slitno1_11",
              "Pravopisanie_slitno1_12",
              "Pravopisanie_slitno1_13",
              "Pravopisanie_slitno1_14",
              "i_tak_dalee",
              "Vo_chto_by_to_ni_stalo_1",
              "Vo_chto_by_to_ni_stalo_2",
              "Tak_je_kak_i",
              "Ni_to_ni_drugoe_1",
              "Ni_to_ni_drugoe_2",
              "Ni_mnogo_ni_malo",
              "Oborot_nikto_inoj_ne_1",
              "Oborot_nikto_inoj_ne_2",
              "Oborot_nikto_inoj_ne_3",
              "Oborot_nikto_inoj_ne_4",
              "Frazeologizm_nevernij_1",
              "Frazeologizm_nevernij_2",
              "Frazeologizm_nevernij_3",
              "Frazeologizm_nevernij_4",
              "Frazeologizm_nevernij_5",
              "Frazeologizm_nevernij_6",
              "Frazeologizm_nevernij_7",
              "Frazeologizm_nevernij_8",
              "Frazeologizm_nevernij_9",
              "Frazeologizm_nevernij_10",
              "Logical_bolee_menee",
              "NI_NA_GRAN_1",
              "NI_NA_GRAN_2",
              "NE_PREDSTAVL_VOZM",
              "V_K_S_1",
              "V_K_S_2",
              "V_K_S_3",
              "V_K_S_4",
              "V_K_S_5",
              "V_K_S_6",
              "Vo_izbezhanie",
              "O_OB_OBO_1",
              "O_OB_OBO_2",
              "O_OB_OBO_3",
              "Verb_and_Verb",
              "Verb_and_PREP",
              "PREP_and_PNN1_1",
              "PREP_and_PNN1_2",
              "PREP_and_PNN1_3",
              "PREP_and_PNN1_4",
              "PREP_and_PNN_1",
              "PREP_and_PNN_2",
              "PREP_and_PNN_3",
              "PREP_and_PNN_4",
              "PREP_K_and_Noun",
              "PREP_K_and_ADJ",
              "PREP_Nad_and_Noun",
              "PREP_Nad_and_ADJ",
              "PREP_cherez_and_Noun",
              "PREP_cherez_and_ADJ",
              "PREP_Pri_and_Noun",
              "PREP_Pri_and_ADJ",
              "PREP_U_and_Noun",
              "PREP_U_and_ADJ",
              "vopreki_NN",
              "zaslujivat_NN",
              "zaslujit_NN",
              "drug_s_drugom",
              "pouchastvovat",
              "V_TECHENII",
              "V_TECHENIЕ_1",
              "V_TECHENIЕ_2",
              "V_PRODOLJENIЕ",
              "Genitsya_1",
              "Genitsya_2",
              "Genitsya_3",
              "Genitsya_4",
              "talk",
              "noun_genitive_3",
              "kommentirovat_prep",
              "ugasno_krasivij_1",
              "ugasno_krasivij_2",
              "mankirovat_nn_1",
              "mankirovat_nn_2",
              "reczenzija_na",
              "pretenzia_na",
              "predstavlat_soboj",
              "nagnat_strahu",
              "Num_plus_Noun",
              "Prep_Soglasno",
              "Use_prep_O_1",
              "Use_prep_O_2",
              "Use_prep_O_3",
              "Use_prep_O_4",
              "VB_O_KOM_1",
              "VB_O_KOM_2",
              "VB_O_KOM_3",
              "VB_O_KOM_4",
              "PT_BI",
              "strong_m_1",
              "strong_m_2",
              "strong_m_3",
              "OPREDELENIA",
              "Cap_Letters_Name",
              "Cap_Letters_SName",
              "Rod_suschestvitelnykh_Neut_1",
              "Rod_suschestvitelnykh_Neut_2",
              "Rod_suschestvitelnykh_Neut_3",
              "Rod_suschestvitelnykh_Neut_4",
              "Rod_suschestvitelnykh_Fem_and_Masc_1",
              "Rod_suschestvitelnykh_Fem_and_Masc_2",
              "Rod_suschestvitelnykh_Fem_and_Masc_3",
              "Rod_suschestvitelnykh_Fem_and_Masc_4",
              "Rod_foregin_abbreviation_1",
              "Rod_foregin_abbreviation_2",
              "Rod_foregin_abbreviation_3",
              "Rod_foregin_abbreviation_4",
              "Rod_suschestvitelnykh_odush_bird_animal_1",
              "Rod_suschestvitelnykh_odush_bird_animal_2",
              "Rod_suschestvitelnykh_odush_bird_animal_3",
              "Rod_suschestvitelnykh_odush_bird_animal_4",
              "Rod_suschestvitelnykh_geograph_1",
              "Rod_suschestvitelnykh_geograph_2",
              "Rod_suschestvitelnykh_geograph_3",
              "Rod_suschestvitelnykh_geograph_4",
              "Postrojenije_slovosochetanij_sobir_noun_1",
              "Postrojenije_slovosochetanij_sobir_noun_2",
              "Postrojenije_slovosochetanij_upravlenie1_1",
              "Postrojenije_slovosochetanij_upravlenie1_2",
              "Obrazovanie_form_suschestvitelnykh_prof_1",
              "Obrazovanie_form_suschestvitelnykh_prof_2",
              "Obrazovanie_form_suschestvitelnykh_prof_3",
              "Obrazovanie_form_suschestvitelnykh_prof_4",
              "Postrojenije_slovosochetanij_skazuem_sing_1",
              "Postrojenije_slovosochetanij_skazuem_sing_2",
              "Obrazovanije_glagoln_form_imperativ_1",
              "Obrazovanije_glagoln_form_imperativ_2",
              "Obrazovanie_form_prilagat_sravnit_st_1",
              "Obrazovanie_form_prilagat_sravnit_st_2",
              "Obrazovanie_form_prilagat_sravnit_st_3",
              "Obrazovanie_form_prilagat_sravnit_st_4",
              "Obrazovanie_form_pril_i_mestoimenij_1",
              "Obrazovanie_form_pril_i_mestoimenij_2",
              "Obrazovanie_form_pril_i_mestoimenij_3",
              "Obrazovanie_form_pril_i_mestoimenij_4",
              "Obrazovanije_slozhnyh_slov_1",
              "Obrazovanije_slozhnyh_slov_2",
              "Obrazovanije_slozhnyh_slov_3",
              "Obrazovanije_slozhnyh_slov_4",
              "Obrazovanije_slozhnyh_slov_5",
              "Nepraviln_pristavki",
              "Lishnij_sojuz_1",
              "Lishnij_sojuz_2",
              "Lishnij_sojuz_3",
              "Lishnij_sojuz_4",
              "Upotreblenije_predlogov_1",
              "Upotreblenije_predlogov_2",
              "Upotreblenije_predlogov_3",
              "Kontrol_za_nad_1",
              "Kontrol_za_nad_2",
              "Kontrol_za_nad_3",
              "Kontrol_za_nad_4",
              "Predlogi_iz_s_1",
              "Predlogi_iz_s_2",
              "Predlogi_iz_s_3",
              "Predlogi_iz_s_4",
              "Trudn_sluchai_upravl",
              "Sklonenije_suschestvit_PL_1",
              "Sklonenije_suschestvit_PL_2",
              "Sklonenije_suschestvit_PL_3",
              "Sklonenije_suschestvit_PL_4",
              "Okonch_susch_masc_Predlozhn_opredeliteln_1",
              "Okonch_susch_masc_Predlozhn_opredeliteln_2",
              "Okonch_susch_masc_Predlozhn_opredeliteln_3",
              "Okonch_susch_masc_Predlozhn_opredeliteln_4",
              "Paronimy_1",
              "Paronimy_2",
              "Paronimy_3",
              "Paronimy_4",
              "Pleonasm_1",
              "Pleonasm_2",
              "Pleonasm_3",
              "Pleonasm_4",
              "Tavtologija_1",
              "Tavtologija_2",
              "Tavtologija_3",
              "Tavtologija_4",
              "Chastitsa_NI_v_ustojchiv_vyrazh_1",
              "Chastitsa_NI_v_ustojchiv_vyrazh_2",
              "Chastitsa_NI_v_ustojchiv_vyrazh_3",
              "Chastitsa_NI_v_ustojchiv_vyrazh_4",
              "Chastitsa_NI_usilen_negat_1",
              "Chastitsa_NI_usilen_negat_2",
              "Chastitsa_NI_usilen_negat_3",
              "Chastitsa_NI_usilen_negat_4",
              "Dvojnoe_negate_s_NE_1",
              "Dvojnoe_negate_s_NE_2",
              "Dvojnoe_negate_s_NE_3",
              "Dvojnoe_negate_s_NE_4",
              "Parnoje_upotrebl_NI_1",
              "Parnoje_upotrebl_NI_2",
              "Parnoje_upotrebl_NI_3",
              "Parnoje_upotrebl_NI_4",
              "Predlogi_vsledstvije_napodobije_1",
              "Predlogi_vsledstvije_napodobije_2",
              "Predlogi_vsledstvije_napodobije_3",
              "Predlog_v_zakluchenije",
              "Adv_vposledstvii_1",
              "Adv_vposledstvii_2"
              ]
        rulesFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `rules`, если он пустой.
          default: .+
        punctuationWeight:
          type: integer
          description: Вес ошибок пунктуации.
          minimum: 0
          maximum: 100
          default: 100
        capitalizationWeight:
          type: integer
          description: Вес ошибок капитализации.
          minimum: 0
          maximum: 100
          default: 100
        misspellWeight:
          type: integer
          description: Вес орфографических ошибок.
          minimum: 0
          maximum: 100
          default: 100
        grammarWeight:
          type: integer
          description: Вес грамматических ошибок.
          minimum: 0
          maximum: 100
          default: 100
        styleWeight:
          type: integer
          description: Вес стилистических ошибок.
          minimum: 0
          maximum: 100
          default: 100
        threshold:
          type: integer
          description: Порог ошибок.
          minimum: 0
          maximum: 100
          default: 50
    GrammarMistakesParams:
      allOf:
      - type: object
        properties:
          grammarMistakesOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          grammarMistakesOptions:
            $ref: '#/components/schemas/GrammarMistakesOptions'
      - $ref: '#/components/schemas/OperationParams'
    GrammarMistakesResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                grammarMistakes:
                  $ref: '#/components/schemas/GrammarMistakes'
    GrammarMistakesOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          grammarMistakesOptions:
            $ref: '#/components/schemas/GrammarMistakesOptions'
    GrammarMistakesOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          grammarMistakesOptions:
            $ref: '#/components/schemas/GrammarMistakesOptions'
    GrammarMistakesOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          grammarMistakesOptions:
            $ref: '#/components/schemas/GrammarMistakesOptions'
    GrammarMistakesOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          grammarMistakesOptions:
            $ref: '#/components/schemas/GrammarMistakesOptions'
    GrammarMistakesOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/GrammarMistakesOptionsPresetsUpdateParamsItem'
    #==============================
    # topics
    #------------------------------
    Topic:
      type: object
      properties:
        name:
          type: string
          description: Название темы.
          example: Art
        confidence:
          type: number
          description: Достоверность определения темы.
          minimum: 0
          maximum: 100
    Topics:
      type: array
      description: Список тем.
      items:
        $ref: '#/components/schemas/Topic'
    TopicsOptions:
      type: object
      description: Настройки определения тематики.
      properties:
        topics:
          type: array
          description: Список тематик, которые нужно определять.
          default: []
          items:
            type: string
            enum: [
              "Administration",
              "Agriculture",
              "Agriculture/Animal husbandry",
              "Agriculture/Veterinary",
              "Animals",
              "Animals/Entomology",
              "Anthropology",
              "Anthropology/Ethnology",
              "Anthropology/Folklore",
              "Architecture",
              "Architecture/Buildings",
              "Architecture/Furniture",
              "Architecture/Town planning",
              "Art",
              "Art/Cinema",
              "Art/Dance",
              "Art/Drawing",
              "Art/Graphic arts",
              "Art/Jewellery",
              "Art/Music",
              "Art/Numismatics",
              "Art/Painting",
              "Art/Philately",
              "Art/Photography",
              "Art/Plastic arts",
              "Art/Sculpture",
              "Art/Theatre",
              "Artisanship",
              "Astronomy",
              "Biology/Anatomy",
              "Biology/Biochemistry",
              "Biology",
              "Biology/Genetics",
              "Biology/Physiology",
              "Chemistry",
              "Computer science",
              "Earth",
              "Earth/Geography",
              "Earth/Geology",
              "Earth/Meteorology",
              "Earth/Oceanography",
              "Earth/Paleontology",
              "Earth/Topography",
              "Economy/Banking",
              "Economy/Book keeping",
              "Economy/Commerce",
              "Economy",
              "Economy/Enterprise",
              "Economy/Exchange",
              "Economy/Finance",
              "Economy/Insurance",
              "Economy/Money",
              "Economy/Tax",
              "Engineering/Astronautics",
              "Engineering/Electrotechnology",
              "Engineering",
              "Engineering/Hydraulics",
              "Engineering/Mechanics",
              "Environment",
              "Fashion",
              "Food",
              "Food/Gastronomy",
              "Health/Body care",
              "Health",
              "History/Archaeology",
              "History/Heraldry",
              "History",
              "Home",
              "Industry",
              "Law",
              "Linguistics/Grammar",
              "Linguistics",
              "Literature",
              "Literature/Philology",
              "Mathematics/Geometry",
              "Mathematics",
              "Mathematics/Statistics",
              "Medicine/Dentistry",
              "Medicine",
              "Medicine/Pharmacy",
              "Medicine/Psychiatry",
              "Medicine/Radiology",
              "Medicine/Surgery",
              "Military",
              "Paranormal/Astrology",
              "Paranormal/Occultism",
              "Paranormal",
              "Pedagogy",
              "Pedagogy/School",
              "Pedagogy/University",
              "Philosophy",
              "Physics/Acoustics",
              "Physics/Atomic physic",
              "Physics/Electricity",
              "Physics/Electronics",
              "Physics/Gas",
              "Physics/Optics",
              "Physics",
              "Plants/Plants",
              "Play/Betting",
              "Play/Card",
              "Play/Chess",
              "Play",
              "Politics/Diplomacy",
              "Politics",
              "Psychology/Psychoanalysis",
              "Psychology",
              "Publishing",
              "Radio+tv",
              "Religion/Mythology",
              "Religion",
              "Religion/Roman catholic",
              "Religion/Theology",
              "Sexuality",
              "Sociology",
              "Sport/Archery",
              "Sport/Athletics",
              "Sport/Badminton",
              "Sport/Baseball",
              "Sport/Basketball",
              "Sport/Bowling",
              "Sport/Boxing",
              "Sport/Cricket",
              "Sport/Cycling",
              "Sport/Diving",
              "Sport/Fencing",
              "Sport/Fishing",
              "Sport/Football",
              "Sport/Golf",
              "Sport/Hockey",
              "Sport/Hunting",
              "Sport/Mountaineering",
              "Sport/Racing",
              "Sport/Rowing",
              "Sport/Rugby",
              "Sport/Skating",
              "Sport/Skiing",
              "Sport/Soccer",
              "Sport",
              "Sport/Sub",
              "Sport/Swimming",
              "Sport/Table tennis",
              "Sport/Tennis",
              "Sport/Volleyball",
              "Sport/Wrestling",
              "Telecommunication/Post",
              "Telecommunication",
              "Telecommunication/Telegraphy",
              "Telecommunication/Telephony",
              "Tourism",
              "Transport/Aviation",
              "Transport/Nautical",
              "Transport/Railway",
              "Transport",
              "Transport/Vehicles",
              "Unknown"
              ]
        topicsFallback:
          type: string
          description: Регулярное выражение, по которому будет формироваться параметр `topics`, если он пустой.
          default: ".+"
        mainTopicsOnly:
          type: boolean
          description: Использовать только основные тематики.
          default: true
        relevantGroupOnly:
          type: boolean
          description: Выводить только наиболее релевантные темы.
          default: ""
        maxTopics:
          type: integer
          description: Максимальное количество тем в тексте. Специальное значение "0" отключает ограничение.
          minimum: 0
          maximum: 20
          default: 0
        minConfidence:
          type: integer
          description: Минимальная достоверность определения темы по шкале от 0 до 100.
          minimum: 0
          maximum: 100
          default: 20
        polysemy:
          type: string
          description: Пределы разрешения полисемии.
          enum: [ "off", "document", "paragraph" ]
          default: "document"
    TopicsParams:
      allOf:
      - type: object
        properties:
          topicsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          topicsOptions:
            $ref: '#/components/schemas/TopicsOptions'
      - $ref: '#/components/schemas/ParseParams'
    TopicsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                topics:
                  $ref: '#/components/schemas/Topics'
    TopicsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          topicsOptions:
            $ref: '#/components/schemas/TopicsOptions'
    TopicsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          topicsOptions:
            $ref: '#/components/schemas/TopicsOptions'
    TopicsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          topicsOptions:
            $ref: '#/components/schemas/TopicsOptions'
    TopicsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          topicsOptions:
            $ref: '#/components/schemas/TopicsOptions'
    TopicsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/TopicsOptionsPresetsUpdateParamsItem'
    #==============================
    # domain
    #------------------------------
    Domain:
      type: string
      description: Имя домена.
      enum: [
        "General",
        "Finance",
        "Insurance",
        "Restaurants",
        "Technology",
        "Hospitality",
        "Airlines",
        "Medicine"
        ]
    DomainsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                domain:
                  $ref: '#/components/schemas/Domain'
    #==============================
    # abbreviations
    #------------------------------
    Abbreviation:
      type: object
      description: Аббревиатура.
      properties:
        abbreviation:
          type: string
          description: Аббревиатура.
        expansion:
          type: string
          description: Расшифровка аббревиатуры.
        confidence:
          type: number
          description: Достоверность расшифровки.
          minimum: 0
          maximum: 100
        symbolPositions:
          $ref: '#/components/schemas/SymbolPositions'
        tokenPositions:
          $ref: '#/components/schemas/TokenPositions'
    Abbreviations:
      type: array
      description: Список аббревиатур.
      items:
        $ref: '#/components/schemas/Abbreviation'
    AbbreviationModel:
      type: object
      description: Модель классификатора.
      properties:
        description:
          type: string
          description: Строковое описание модели.
        data:
          type: string
          format: base64
          description: Бинарные данные модели в кодировке Base64.
    AbbreviationModelsResource:
      allOf:
        - $ref: '#/components/schemas/Resource'
        - $ref: '#/components/schemas/AbbreviationModel'
    AbbreviationsOptions:
      type: object
      description: Настройки расшифровки аббревиатур.
      properties:
        model:
          type: string
          description: Имя модели расшифровки аббревиатур (берется из ресурсов /resources/abbreviation-models).
          default: ""
        expansionsFromText:
          type: boolean
          description: Извлечь расшифровки из текста.
          default: true
        expansionsFromLocalContext:
          type: boolean
          description: Расшифровать сокращения на основе локального контекста.
          default: true
        localContextSentencesLimitEnabled:
          type: boolean
          description: Включить ограничение локального контекста для расшифровки.
          default: true
        localContextSentencesLimit:
          type: integer
          description: Ограничить локальный контекст для расшифровки (количество предложений).
          minimum: 0
          default: 3
        uniqueExpansionScope:
          type: string
          description: Пределы уникальности расшифровки.
          enum: [none, text, dataset]
          default: text
        threshold:
          type: integer
          description: Порог достоверности.
          minimum: 0
          maximum: 100
          default: 70
    AbbreviationsParams:
      allOf:
      - type: object
        properties:
          abbreviationsOptionsPreset:
            $ref: '#/components/schemas/OperationOptionsPreset'
          abbreviationsOptions:
            $ref: '#/components/schemas/AbbreviationsOptions'
      - $ref: '#/components/schemas/OperationParams'
    AbbreviationsResult:
      allOf:
      - $ref: '#/components/schemas/OperationResult'
      - type: object
        properties:
          documents:
            type: array
            items:
              type: object
              properties:
                abbreviations:
                  $ref: '#/components/schemas/Abbreviations'
    AbbreviationsOptionsPreset:
      allOf:
      - $ref: '#/components/schemas/OptionsPreset'
      - type: object
        properties:
          abbreviationsOptions:
            $ref: '#/components/schemas/AbbreviationsOptions'
    AbbreviationsOptionsPresetCreateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetCreateParams'
      - type: object
        properties:
          abbreviationsOptions:
            $ref: '#/components/schemas/AbbreviationsOptions'
    AbbreviationsOptionsPresetUpdateParams:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetUpdateParams'
      - type: object
        properties:
          abbreviationsOptions:
            $ref: '#/components/schemas/AbbreviationsOptions'
    AbbreviationsOptionsPresetsUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/OptionsPresetsUpdateParamsItem'
      - type: object
        properties:
          abbreviationsOptions:
            $ref: '#/components/schemas/AbbreviationsOptions'
    AbbreviationsOptionsPresetsUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/AbbreviationsOptionsPresetsUpdateParamsItem'
    AbbreviationModelsResourceCreateParams:
      allOf:
      - $ref: '#/components/schemas/ResourceCreateParams'
      - $ref: '#/components/schemas/AbbreviationModel'
    AbbreviationModelsResourceUpdateParams:
      allOf:
      - $ref: '#/components/schemas/ResourceUpdateParams'
      - $ref: '#/components/schemas/AbbreviationModel'
    AbbreviationModelsResourcesUpdateParamsItem:
      allOf:
      - $ref: '#/components/schemas/ResourcesUpdateParamsItem'
      - $ref: '#/components/schemas/AbbreviationModel'
    AbbreviationModelsResourcesUpdateParams:
      type: array
      items:
        $ref: '#/components/schemas/AbbreviationModelsResourcesUpdateParamsItem'
    #==============================
    # researches
    #------------------------------
    TaskId:
      type: string
      description: Идентификатор задачи по выполнению исследования.
      example: "42864EA7-71BB-4C94-8CE9-BAB8F35BC00C"
    ResearchId:
      type: string
      description: Идентификатор исследования.
      example: "42864EA7-71BB-4C94-8CE9-BAB8F35BC00C"
    ResearchOperations:
      type: array
      description: Список операций, которые нужно выполнить. Имена доступных операций можно получить через запрос /server.
      items:
        $ref: '#/components/schemas/OperationsListItem'
    ResearchAsync:
      type: boolean
      description: Признак асинхронного выполнения исследования.
      default: true
    ResearchTransient:
      type: boolean
      description: Признак того, что исследование должно удалиться автоматически сразу после первого получения его результатов.
      default: false
    ResearchExecutionParams:
      type: object
      properties:
        async:
          $ref: '#/components/schemas/ResearchAsync'
        transient:
          $ref: '#/components/schemas/ResearchTransient'
        operations:
          $ref: '#/components/schemas/ResearchOperations'
        positions:
          $ref: '#/components/schemas/Positions'
        languagesOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        languagesOptions:
          $ref: '#/components/schemas/LanguagesOptions'
        wordformsOptions:
          $ref: '#/components/schemas/WordformsOptions'
        keywordsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        keywordsOptions:
          $ref: '#/components/schemas/KeywordsOptions'
        entitiesOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        entitiesOptions:
          $ref: '#/components/schemas/EntitiesOptions'
        sentimentsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        sentimentsOptions:
          $ref: '#/components/schemas/SentimentsOptions'
        factsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        factsOptions:
          $ref: '#/components/schemas/FactsOptions'
        anonymizedDocumentsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        anonymizedDocumentsOptions:
          $ref: '#/components/schemas/AnonymizedDocumentsOptions'
        clustersOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        clustersOptions:
          $ref: '#/components/schemas/ClustersOptions'
        categoriesOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        categoriesOptions:
          $ref: '#/components/schemas/CategoriesOptions'
        fragmentsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        fragmentsOptions:
          $ref: '#/components/schemas/FragmentsOptions'
        summariesOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        summariesOptions:
          $ref: '#/components/schemas/SummariesOptions'
        misspellingsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        misspellingsOptions:
          $ref: '#/components/schemas/MisspellingsOptions'
        grammarMistakesOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        grammarMistakesOptions:
          $ref: '#/components/schemas/GrammarMistakesOptions'
        topicsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        topicsOptions:
          $ref: '#/components/schemas/TopicsOptions'
        abbreviationsOptionsPreset:
          $ref: '#/components/schemas/OperationOptionsPreset'
        abbreviationsOptions:
          $ref: '#/components/schemas/AbbreviationsOptions'
    ResearchesParams:
      allOf:
      - $ref: '#/components/schemas/ResearchExecutionParams'
      - type: object
        properties:
          documentsLanguage:
            $ref: '#/components/schemas/DocumentsLanguageParam'
          documents:
            $ref: '#/components/schemas/Documents'
      required:
        - async
        - operations
        - documents
    ResearchesParamsPreview:
      allOf:
      - $ref: '#/components/schemas/ResearchExecutionParams'
      - type: object
        properties:
          documentsLanguage:
            $ref: '#/components/schemas/DocumentsLanguageParam'
          documents:
            type: array
            description: Список переданных документов.
            items:
              type: string
              description: Краткое содержание документа.
    ResearchResourceParams:
      allOf:
      - type: object
        properties:
          id:
            $ref: '#/components/schemas/ResearchId'
      - $ref: '#/components/schemas/ResearchesParamsPreview'
    ResearchesResult:
      type: object
      properties:
        documentsLanguage:
          $ref: '#/components/schemas/DocumentsLanguage'
        documents:
          type: array
          description: Список документов с их результатами.
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/DocumentId'
              language:
                $ref: '#/components/schemas/DictLanguage'
              tokens:
                $ref: '#/components/schemas/Tokens'
              lemmas:
                $ref: '#/components/schemas/Lemmas'
              partsOfSpeech:
                $ref: '#/components/schemas/PartsOfSpeech'
              wordforms:
                $ref: '#/components/schemas/Wordforms'
              chunks:
                $ref: '#/components/schemas/Chunks'
              sentences:
                $ref: '#/components/schemas/Sentences'
              dependencyTrees:
                $ref: '#/components/schemas/DependencyTrees'
              constituencyTrees:
                $ref: '#/components/schemas/ConstituencyTrees'
              keywords:
                $ref: '#/components/schemas/Keywords'
              entities:
                $ref: '#/components/schemas/Entities'
              sentiments:
                $ref: '#/components/schemas/Sentiments'
              facts:
                $ref: '#/components/schemas/Facts'
              anonymizedDocument:
                $ref: '#/components/schemas/AnonymizedDocument'
              cluster:
                $ref: '#/components/schemas/Cluster'
              categories:
                $ref: '#/components/schemas/Categories'
              fragments:
                $ref: '#/components/schemas/Fragments'
              summary:
                $ref: '#/components/schemas/Summary'
              misspellings:
                $ref: '#/components/schemas/Misspellings'
              grammarMistakes:
                $ref: '#/components/schemas/GrammarMistakes'
              topics:
                $ref: '#/components/schemas/Topics'
              domain:
                $ref: '#/components/schemas/Domain'
              abbreviations:
                $ref: '#/components/schemas/Abbreviations'
    ResearchesCreateResult:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TaskId'
    #==============================
    # queue
    #------------------------------
    Task:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TaskId'
        created:
          type: string
          description: Время создания задачи в формате "YYYY-MM-DD hh:mm:ss".
          format: date-time
          example: "2020-11-13 14:42:04"
        status:
          type: string
          description: |
            Статус задачи:<br>
            **pending** - в очереди;<br>
            active - задача выполняется;<br>
            finished - задача завершена.
          enum: ["pending", "active", "finished"]
          example: "finished"
        progress:
          type: number
          description: Прогресс выполнения задачи.
          minimum: 0
          maximum: 1
          example: 1
        operations:
          type: array
          description: Список выполненных операций. При статусе операции "pending", в полях "started" и "finished" отображается время создания задачи. При статусе "active", возвращается время начала задачи.
          items:
            type: object
            properties:
              operation:
                $ref: '#/components/schemas/OperationsListItem'
              status:
                $ref: '#/components/schemas/QueueStatus'
              started:
                example: "2020-11-13 14:42:05"
              finished:
                example: "2020-11-13 14:42:07"
    #==============================
    # resources
    #------------------------------
    ResourceCreateParams:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ResourceLanguage'
        name:
          $ref: '#/components/schemas/ResourceName'
    ResourceUpdateParams:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
    ResourcesUpdateParamsItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        name:
          $ref: '#/components/schemas/ResourceName'
    Resource:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        language:
          $ref: '#/components/schemas/ResourceLanguage'
        name:
          $ref: '#/components/schemas/ResourceName'
    #==============================
    # presets
    #------------------------------
    OptionsPresetCreateParams:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/ResourceLanguage'
        name:
          $ref: '#/components/schemas/ResourceName'
    OptionsPresetUpdateParams:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/ResourceName'
    OptionsPresetsUpdateParamsItem:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        name:
          $ref: '#/components/schemas/ResourceName'
    OptionsPreset:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ResourceId'
        language:
          $ref: '#/components/schemas/ResourceLanguage'
        name:
          $ref: '#/components/schemas/ResourceName'
    #==============================
    # QueueStatus
    #------------------------------
    QueueStatus:
      type: string
      description: |
        Статус задачи:<br>
        **pending** - в очереди;<br>
        active - задача выполняется;<br>
        finished - задача завершена.
      enum: ["pending", "active", "finished"]
      example: "finished"
